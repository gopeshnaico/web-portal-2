import { GraphQLClient } from 'graphql-request';
import { RequestInit } from 'graphql-request/dist/types.dom';
import {
  useMutation,
  useQuery,
  UseMutationOptions,
  UseQueryOptions,
} from 'react-query';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};

function fetcher<TData, TVariables>(
  client: GraphQLClient,
  query: string,
  variables?: TVariables,
  headers?: RequestInit['headers']
) {
  return async (): Promise<TData> =>
    client.request<TData, TVariables>(query, variables, headers);
}
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format. */
  DateTime: any;
  /** The `Upload` scalar type represents a file upload. */
  Upload: any;
};

export type Activity = {
  __typename?: 'Activity';
  WorkflowActivity_ActivityToWorkflowActivity_fromActivityId?: Maybe<
    Array<WorkflowActivity>
  >;
  WorkflowActivity_ActivityToWorkflowActivity_toActivityId?: Maybe<
    Array<WorkflowActivity>
  >;
  _count: ActivityCount;
  activityCode?: Maybe<Scalars['String']>;
  activityName?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ActivityCount = {
  __typename?: 'ActivityCount';
  WorkflowActivity_ActivityToWorkflowActivity_fromActivityId: Scalars['Int'];
  WorkflowActivity_ActivityToWorkflowActivity_toActivityId: Scalars['Int'];
};

export type ActivityCountAggregate = {
  __typename?: 'ActivityCountAggregate';
  _all: Scalars['Int'];
  activityCode: Scalars['Int'];
  activityName: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    connect?: InputMaybe<ActivityWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ActivityCreateOrConnectWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    create?: InputMaybe<ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
  };

export type ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    connect?: InputMaybe<ActivityWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ActivityCreateOrConnectWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    create?: InputMaybe<ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
  };

export type ActivityCreateOrConnectWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    create: ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput;
    where: ActivityWhereUniqueInput;
  };

export type ActivityCreateOrConnectWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    create: ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput;
    where: ActivityWhereUniqueInput;
  };

export type ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    WorkflowActivity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<WorkflowActivityCreateNestedManyWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    activityCode?: InputMaybe<Scalars['String']>;
    activityName?: InputMaybe<Scalars['String']>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    description?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isActive?: InputMaybe<Scalars['Boolean']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    WorkflowActivity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<WorkflowActivityCreateNestedManyWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    activityCode?: InputMaybe<Scalars['String']>;
    activityName?: InputMaybe<Scalars['String']>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    description?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isActive?: InputMaybe<Scalars['Boolean']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type ActivityMaxAggregate = {
  __typename?: 'ActivityMaxAggregate';
  activityCode?: Maybe<Scalars['String']>;
  activityName?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ActivityMinAggregate = {
  __typename?: 'ActivityMinAggregate';
  activityCode?: Maybe<Scalars['String']>;
  activityName?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ActivityRelationFilter = {
  is?: InputMaybe<ActivityWhereInput>;
  isNot?: InputMaybe<ActivityWhereInput>;
};

export type ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    connect?: InputMaybe<ActivityWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ActivityCreateOrConnectWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    create?: InputMaybe<ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<ActivityUpdateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    upsert?: InputMaybe<ActivityUpsertWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
  };

export type ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    connect?: InputMaybe<ActivityWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ActivityCreateOrConnectWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    create?: InputMaybe<ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<ActivityUpdateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    upsert?: InputMaybe<ActivityUpsertWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
  };

export type ActivityUpdateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    WorkflowActivity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<WorkflowActivityUpdateManyWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    activityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    activityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type ActivityUpdateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    WorkflowActivity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<WorkflowActivityUpdateManyWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    activityCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    activityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type ActivityUpsertWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    create: ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput;
    update: ActivityUpdateWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput;
  };

export type ActivityUpsertWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    create: ActivityCreateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput;
    update: ActivityUpdateWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput;
  };

export type ActivityWhereInput = {
  AND?: InputMaybe<Array<ActivityWhereInput>>;
  NOT?: InputMaybe<Array<ActivityWhereInput>>;
  OR?: InputMaybe<Array<ActivityWhereInput>>;
  WorkflowActivity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<WorkflowActivityListRelationFilter>;
  WorkflowActivity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<WorkflowActivityListRelationFilter>;
  activityCode?: InputMaybe<StringNullableFilter>;
  activityName?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ActivityWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type Address = {
  __typename?: 'Address';
  AddressType?: Maybe<AddressType>;
  CustomerAddress?: Maybe<Array<CustomerAddress>>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  _count: AddressCount;
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  addressLine3?: Maybe<Scalars['String']>;
  addressTypeId?: Maybe<Scalars['String']>;
  alternatePhone?: Maybe<Scalars['String']>;
  contactName?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  defaultBilling?: Maybe<Scalars['Boolean']>;
  defaultShipping?: Maybe<Scalars['Boolean']>;
  district?: Maybe<Scalars['String']>;
  gstin?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  landmark?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pincode?: Maybe<Scalars['String']>;
  shopName?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type AddressCount = {
  __typename?: 'AddressCount';
  CustomerAddress: Scalars['Int'];
};

export type AddressCountAggregate = {
  __typename?: 'AddressCountAggregate';
  _all: Scalars['Int'];
  addressLine1: Scalars['Int'];
  addressLine2: Scalars['Int'];
  addressLine3: Scalars['Int'];
  addressTypeId: Scalars['Int'];
  alternatePhone: Scalars['Int'];
  contactName: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  defaultBilling: Scalars['Int'];
  defaultShipping: Scalars['Int'];
  district: Scalars['Int'];
  gstin: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  landmark: Scalars['Int'];
  phone: Scalars['Int'];
  pincode: Scalars['Int'];
  shopName: Scalars['Int'];
  state: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workFlowContextInstanceId: Scalars['Int'];
};

export type AddressCreateManyWorkFlowContextInstanceInput = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  addressLine3?: InputMaybe<Scalars['String']>;
  addressTypeId?: InputMaybe<Scalars['String']>;
  alternatePhone?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  defaultBilling?: InputMaybe<Scalars['Boolean']>;
  defaultShipping?: InputMaybe<Scalars['Boolean']>;
  district?: InputMaybe<Scalars['String']>;
  gstin?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  landmark?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  pincode?: InputMaybe<Scalars['String']>;
  shopName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AddressCreateManyWorkFlowContextInstanceInputEnvelope = {
  data: Array<AddressCreateManyWorkFlowContextInstanceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AddressCreateNestedManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AddressCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<AddressCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<AddressCreateManyWorkFlowContextInstanceInputEnvelope>;
};

export type AddressCreateNestedOneWithoutCustomerAddressInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutCustomerAddressInput>;
  create?: InputMaybe<AddressCreateWithoutCustomerAddressInput>;
};

export type AddressCreateOrConnectWithoutCustomerAddressInput = {
  create: AddressCreateWithoutCustomerAddressInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateOrConnectWithoutWorkFlowContextInstanceInput = {
  create: AddressCreateWithoutWorkFlowContextInstanceInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateWithoutAddressTypeInput = {
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutAddressInputDto>;
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  addressLine3?: InputMaybe<Scalars['String']>;
  alternatePhone?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  defaultBilling?: InputMaybe<Scalars['Boolean']>;
  defaultShipping?: InputMaybe<Scalars['Boolean']>;
  district?: InputMaybe<Scalars['String']>;
  gstin?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isApproved?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  landmark?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  pincode?: InputMaybe<Scalars['String']>;
  shopName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
};

export type AddressCreateWithoutCustomerAddressInput = {
  AddressType?: InputMaybe<AddressTypeCreateNestedOneWithoutAddressInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutAddressInput>;
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  addressLine3?: InputMaybe<Scalars['String']>;
  alternatePhone?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  defaultBilling?: InputMaybe<Scalars['Boolean']>;
  defaultShipping?: InputMaybe<Scalars['Boolean']>;
  district?: InputMaybe<Scalars['String']>;
  gstin?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  landmark?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  pincode?: InputMaybe<Scalars['String']>;
  shopName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AddressCreateWithoutWorkFlowContextInstanceInput = {
  AddressType?: InputMaybe<AddressTypeCreateNestedOneWithoutAddressInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutAddressInput>;
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  addressLine3?: InputMaybe<Scalars['String']>;
  alternatePhone?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  defaultBilling?: InputMaybe<Scalars['Boolean']>;
  defaultShipping?: InputMaybe<Scalars['Boolean']>;
  district?: InputMaybe<Scalars['String']>;
  gstin?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  landmark?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  pincode?: InputMaybe<Scalars['String']>;
  shopName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AddressDto = {
  __typename?: 'AddressDTO';
  AddressType?: Maybe<AddressType>;
  CustomerAddress?: Maybe<Array<CustomerAddress>>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  addressLine3?: Maybe<Scalars['String']>;
  addressTypeId?: Maybe<Scalars['String']>;
  alternatePhone?: Maybe<Scalars['String']>;
  contactName?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  defaultBilling?: Maybe<Scalars['Boolean']>;
  defaultShipping?: Maybe<Scalars['Boolean']>;
  district?: Maybe<Scalars['String']>;
  gstin?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  landmark?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pincode?: Maybe<Scalars['String']>;
  shopName?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type AddressListRelationFilter = {
  every?: InputMaybe<AddressWhereInput>;
  none?: InputMaybe<AddressWhereInput>;
  some?: InputMaybe<AddressWhereInput>;
};

export type AddressMaxAggregate = {
  __typename?: 'AddressMaxAggregate';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  addressLine3?: Maybe<Scalars['String']>;
  addressTypeId?: Maybe<Scalars['String']>;
  alternatePhone?: Maybe<Scalars['String']>;
  contactName?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  defaultBilling?: Maybe<Scalars['Boolean']>;
  defaultShipping?: Maybe<Scalars['Boolean']>;
  district?: Maybe<Scalars['String']>;
  gstin?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  landmark?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pincode?: Maybe<Scalars['String']>;
  shopName?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type AddressMinAggregate = {
  __typename?: 'AddressMinAggregate';
  addressLine1?: Maybe<Scalars['String']>;
  addressLine2?: Maybe<Scalars['String']>;
  addressLine3?: Maybe<Scalars['String']>;
  addressTypeId?: Maybe<Scalars['String']>;
  alternatePhone?: Maybe<Scalars['String']>;
  contactName?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  defaultBilling?: Maybe<Scalars['Boolean']>;
  defaultShipping?: Maybe<Scalars['Boolean']>;
  district?: Maybe<Scalars['String']>;
  gstin?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  landmark?: Maybe<Scalars['String']>;
  phone?: Maybe<Scalars['String']>;
  pincode?: Maybe<Scalars['String']>;
  shopName?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type AddressOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AddressOrderByWithRelationInputDto = {
  createdAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type AddressRelationFilter = {
  is?: InputMaybe<AddressWhereInput>;
  isNot?: InputMaybe<AddressWhereInput>;
};

export type AddressScalarWhereInput = {
  AND?: InputMaybe<Array<AddressScalarWhereInput>>;
  NOT?: InputMaybe<Array<AddressScalarWhereInput>>;
  OR?: InputMaybe<Array<AddressScalarWhereInput>>;
  addressLine1?: InputMaybe<StringNullableFilter>;
  addressLine2?: InputMaybe<StringNullableFilter>;
  addressLine3?: InputMaybe<StringNullableFilter>;
  addressTypeId?: InputMaybe<StringNullableFilter>;
  alternatePhone?: InputMaybe<StringNullableFilter>;
  contactName?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  defaultBilling?: InputMaybe<BoolNullableFilter>;
  defaultShipping?: InputMaybe<BoolNullableFilter>;
  district?: InputMaybe<StringNullableFilter>;
  gstin?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  landmark?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  pincode?: InputMaybe<StringNullableFilter>;
  shopName?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type AddressType = {
  __typename?: 'AddressType';
  Address?: Maybe<Array<Address>>;
  _count: AddressTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isDefault?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AddressTypeCount = {
  __typename?: 'AddressTypeCount';
  Address: Scalars['Int'];
};

export type AddressTypeCountAggregate = {
  __typename?: 'AddressTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isDefault: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AddressTypeCreateNestedOneWithoutAddressInput = {
  connect?: InputMaybe<AddressTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressTypeCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<AddressTypeCreateWithoutAddressInput>;
};

export type AddressTypeCreateOrConnectWithoutAddressInput = {
  create: AddressTypeCreateWithoutAddressInput;
  where: AddressTypeWhereUniqueInput;
};

export type AddressTypeCreateWithoutAddressInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AddressTypeMaxAggregate = {
  __typename?: 'AddressTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AddressTypeMinAggregate = {
  __typename?: 'AddressTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AddressTypeRelationFilter = {
  is?: InputMaybe<AddressTypeWhereInput>;
  isNot?: InputMaybe<AddressTypeWhereInput>;
};

export type AddressTypeUpdateInput = {
  Address?: InputMaybe<AddressUpdateManyWithoutAddressTypeInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type AddressTypeUpdateOneWithoutAddressInput = {
  connect?: InputMaybe<AddressTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressTypeCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<AddressTypeCreateWithoutAddressInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AddressTypeUpdateWithoutAddressInput>;
  upsert?: InputMaybe<AddressTypeUpsertWithoutAddressInput>;
};

export type AddressTypeUpdateWithoutAddressInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AddressTypeUpsertWithoutAddressInput = {
  create: AddressTypeCreateWithoutAddressInput;
  update: AddressTypeUpdateWithoutAddressInput;
};

export type AddressTypeWhereInput = {
  AND?: InputMaybe<Array<AddressTypeWhereInput>>;
  Address?: InputMaybe<AddressListRelationFilter>;
  NOT?: InputMaybe<Array<AddressTypeWhereInput>>;
  OR?: InputMaybe<Array<AddressTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isDefault?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AddressTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type AddressUpdateManyMutationInput = {
  addressLine1?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  addressLine2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  addressLine3?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alternatePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contactName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  defaultBilling?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  defaultShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  district?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gstin?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  landmark?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pincode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shopName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AddressUpdateManyWithWhereWithoutWorkFlowContextInstanceInput = {
  data: AddressUpdateManyMutationInput;
  where: AddressScalarWhereInput;
};

export type AddressUpdateManyWithoutAddressTypeInput = {
  create?: InputMaybe<Array<AddressCreateWithoutAddressTypeInput>>;
};

export type AddressUpdateManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AddressCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<AddressCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<AddressCreateManyWorkFlowContextInstanceInputEnvelope>;
  delete?: InputMaybe<Array<AddressWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AddressScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  set?: InputMaybe<Array<AddressWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AddressUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
  updateMany?: InputMaybe<
    Array<AddressUpdateManyWithWhereWithoutWorkFlowContextInstanceInput>
  >;
  upsert?: InputMaybe<
    Array<AddressUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
};

export type AddressUpdateOneWithoutCustomerAddressInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutCustomerAddressInput>;
  create?: InputMaybe<AddressCreateWithoutCustomerAddressInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AddressUpdateWithoutCustomerAddressInput>;
  upsert?: InputMaybe<AddressUpsertWithoutCustomerAddressInput>;
};

export type AddressUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  data: AddressUpdateWithoutWorkFlowContextInstanceInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpdateWithoutCustomerAddressInput = {
  AddressType?: InputMaybe<AddressTypeUpdateOneWithoutAddressInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutAddressInput>;
  addressLine1?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  addressLine2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  addressLine3?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alternatePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contactName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  defaultBilling?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  defaultShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  district?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gstin?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  landmark?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pincode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shopName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AddressUpdateWithoutWorkFlowContextInstanceInput = {
  AddressType?: InputMaybe<AddressTypeUpdateOneWithoutAddressInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutAddressInput>;
  addressLine1?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  addressLine2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  addressLine3?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  alternatePhone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contactName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  defaultBilling?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  defaultShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  district?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gstin?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  landmark?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pincode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  shopName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AddressUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  create: AddressCreateWithoutWorkFlowContextInstanceInput;
  update: AddressUpdateWithoutWorkFlowContextInstanceInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpsertWithoutCustomerAddressInput = {
  create: AddressCreateWithoutCustomerAddressInput;
  update: AddressUpdateWithoutCustomerAddressInput;
};

export type AddressWhereInput = {
  AND?: InputMaybe<Array<AddressWhereInput>>;
  AddressType?: InputMaybe<AddressTypeRelationFilter>;
  CustomerAddress?: InputMaybe<CustomerAddressListRelationFilter>;
  NOT?: InputMaybe<Array<AddressWhereInput>>;
  OR?: InputMaybe<Array<AddressWhereInput>>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceRelationFilter>;
  addressLine1?: InputMaybe<StringNullableFilter>;
  addressLine2?: InputMaybe<StringNullableFilter>;
  addressLine3?: InputMaybe<StringNullableFilter>;
  addressTypeId?: InputMaybe<StringNullableFilter>;
  alternatePhone?: InputMaybe<StringNullableFilter>;
  contactName?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  defaultBilling?: InputMaybe<BoolNullableFilter>;
  defaultShipping?: InputMaybe<BoolNullableFilter>;
  district?: InputMaybe<StringNullableFilter>;
  gstin?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  landmark?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  pincode?: InputMaybe<StringNullableFilter>;
  shopName?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type AddressWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type AddressWhereUniqueInputDto = {
  id?: InputMaybe<Scalars['String']>;
};

export type ApplicationObject = {
  __typename?: 'ApplicationObject';
  ApplicationObjectType?: Maybe<ApplicationObjectType>;
  Permission?: Maybe<Array<Permission>>;
  _count: ApplicationObjectCount;
  applicationObjectTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ApplicationObjectCount = {
  __typename?: 'ApplicationObjectCount';
  Permission: Scalars['Int'];
};

export type ApplicationObjectCountAggregate = {
  __typename?: 'ApplicationObjectCountAggregate';
  _all: Scalars['Int'];
  applicationObjectTypeId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ApplicationObjectCreateNestedOneWithoutPermissionInput = {
  connect?: InputMaybe<ApplicationObjectWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ApplicationObjectCreateOrConnectWithoutPermissionInput>;
  create?: InputMaybe<ApplicationObjectCreateWithoutPermissionInput>;
};

export type ApplicationObjectCreateOrConnectWithoutPermissionInput = {
  create: ApplicationObjectCreateWithoutPermissionInput;
  where: ApplicationObjectWhereUniqueInput;
};

export type ApplicationObjectCreateWithoutPermissionInput = {
  ApplicationObjectType?: InputMaybe<ApplicationObjectTypeCreateNestedOneWithoutApplicationObjectInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ApplicationObjectListRelationFilter = {
  every?: InputMaybe<ApplicationObjectWhereInput>;
  none?: InputMaybe<ApplicationObjectWhereInput>;
  some?: InputMaybe<ApplicationObjectWhereInput>;
};

export type ApplicationObjectMaxAggregate = {
  __typename?: 'ApplicationObjectMaxAggregate';
  applicationObjectTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ApplicationObjectMinAggregate = {
  __typename?: 'ApplicationObjectMinAggregate';
  applicationObjectTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ApplicationObjectNameApplicationObjectTypeIdCompoundUniqueInput = {
  applicationObjectTypeId: Scalars['String'];
  name: Scalars['String'];
};

export type ApplicationObjectRelationFilter = {
  is?: InputMaybe<ApplicationObjectWhereInput>;
  isNot?: InputMaybe<ApplicationObjectWhereInput>;
};

export type ApplicationObjectType = {
  __typename?: 'ApplicationObjectType';
  ApplicationObject?: Maybe<Array<ApplicationObject>>;
  _count: ApplicationObjectTypeCount;
  abbrev?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ApplicationObjectTypeCount = {
  __typename?: 'ApplicationObjectTypeCount';
  ApplicationObject: Scalars['Int'];
};

export type ApplicationObjectTypeCountAggregate = {
  __typename?: 'ApplicationObjectTypeCountAggregate';
  _all: Scalars['Int'];
  abbrev: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ApplicationObjectTypeCreateNestedOneWithoutApplicationObjectInput =
  {
    connect?: InputMaybe<ApplicationObjectTypeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ApplicationObjectTypeCreateOrConnectWithoutApplicationObjectInput>;
    create?: InputMaybe<ApplicationObjectTypeCreateWithoutApplicationObjectInput>;
  };

export type ApplicationObjectTypeCreateOrConnectWithoutApplicationObjectInput =
  {
    create: ApplicationObjectTypeCreateWithoutApplicationObjectInput;
    where: ApplicationObjectTypeWhereUniqueInput;
  };

export type ApplicationObjectTypeCreateWithoutApplicationObjectInput = {
  abbrev?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ApplicationObjectTypeMaxAggregate = {
  __typename?: 'ApplicationObjectTypeMaxAggregate';
  abbrev?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ApplicationObjectTypeMinAggregate = {
  __typename?: 'ApplicationObjectTypeMinAggregate';
  abbrev?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ApplicationObjectTypeRelationFilter = {
  is?: InputMaybe<ApplicationObjectTypeWhereInput>;
  isNot?: InputMaybe<ApplicationObjectTypeWhereInput>;
};

export type ApplicationObjectTypeUpdateOneWithoutApplicationObjectInput = {
  connect?: InputMaybe<ApplicationObjectTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ApplicationObjectTypeCreateOrConnectWithoutApplicationObjectInput>;
  create?: InputMaybe<ApplicationObjectTypeCreateWithoutApplicationObjectInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ApplicationObjectTypeUpdateWithoutApplicationObjectInput>;
  upsert?: InputMaybe<ApplicationObjectTypeUpsertWithoutApplicationObjectInput>;
};

export type ApplicationObjectTypeUpdateWithoutApplicationObjectInput = {
  abbrev?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ApplicationObjectTypeUpsertWithoutApplicationObjectInput = {
  create: ApplicationObjectTypeCreateWithoutApplicationObjectInput;
  update: ApplicationObjectTypeUpdateWithoutApplicationObjectInput;
};

export type ApplicationObjectTypeWhereInput = {
  AND?: InputMaybe<Array<ApplicationObjectTypeWhereInput>>;
  ApplicationObject?: InputMaybe<ApplicationObjectListRelationFilter>;
  NOT?: InputMaybe<Array<ApplicationObjectTypeWhereInput>>;
  OR?: InputMaybe<Array<ApplicationObjectTypeWhereInput>>;
  abbrev?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ApplicationObjectTypeWhereUniqueInput = {
  abbrev?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type ApplicationObjectUpdateOneWithoutPermissionInput = {
  connect?: InputMaybe<ApplicationObjectWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ApplicationObjectCreateOrConnectWithoutPermissionInput>;
  create?: InputMaybe<ApplicationObjectCreateWithoutPermissionInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ApplicationObjectUpdateWithoutPermissionInput>;
  upsert?: InputMaybe<ApplicationObjectUpsertWithoutPermissionInput>;
};

export type ApplicationObjectUpdateWithoutPermissionInput = {
  ApplicationObjectType?: InputMaybe<ApplicationObjectTypeUpdateOneWithoutApplicationObjectInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ApplicationObjectUpsertWithoutPermissionInput = {
  create: ApplicationObjectCreateWithoutPermissionInput;
  update: ApplicationObjectUpdateWithoutPermissionInput;
};

export type ApplicationObjectWhereInput = {
  AND?: InputMaybe<Array<ApplicationObjectWhereInput>>;
  ApplicationObjectType?: InputMaybe<ApplicationObjectTypeRelationFilter>;
  NOT?: InputMaybe<Array<ApplicationObjectWhereInput>>;
  OR?: InputMaybe<Array<ApplicationObjectWhereInput>>;
  Permission?: InputMaybe<PermissionListRelationFilter>;
  applicationObjectTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ApplicationObjectWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name_applicationObjectTypeId?: InputMaybe<ApplicationObjectNameApplicationObjectTypeIdCompoundUniqueInput>;
};

export type Asset = {
  __typename?: 'Asset';
  AssetCategory?: Maybe<AssetCategory>;
  AssetStore?: Maybe<AssetStore>;
  AssetType?: Maybe<AssetType>;
  BrandAsset?: Maybe<BrandAsset>;
  BundleArrtibuteValues?: Maybe<Array<BundleArrtibuteValueAssets>>;
  CategoryAsset?: Maybe<CategoryAsset>;
  CategoryHeader?: Maybe<Array<CategoryHeader>>;
  CustomerAsset?: Maybe<Array<CustomerAsset>>;
  CustomerKYCAsset?: Maybe<Array<CustomerKycAsset>>;
  Products?: Maybe<Array<ProductAsset>>;
  UserAsset?: Maybe<Array<UserAsset>>;
  _count: AssetCount;
  assetCategoryId?: Maybe<Scalars['String']>;
  assetStoreId?: Maybe<Scalars['String']>;
  assetTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetAssetTypeIdAssetStoreIdAssetCategoryIdCompoundUniqueInput = {
  assetCategoryId: Scalars['String'];
  assetStoreId: Scalars['String'];
  assetTypeId: Scalars['String'];
};

export type AssetCategory = {
  __typename?: 'AssetCategory';
  Asset?: Maybe<Array<Asset>>;
  _count: AssetCategoryCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetCategoryCount = {
  __typename?: 'AssetCategoryCount';
  Asset: Scalars['Int'];
};

export type AssetCategoryCountAggregate = {
  __typename?: 'AssetCategoryCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AssetCategoryCreateNestedOneWithoutAssetInput = {
  connect?: InputMaybe<AssetCategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCategoryCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<AssetCategoryCreateWithoutAssetInput>;
};

export type AssetCategoryCreateOrConnectWithoutAssetInput = {
  create: AssetCategoryCreateWithoutAssetInput;
  where: AssetCategoryWhereUniqueInput;
};

export type AssetCategoryCreateWithoutAssetInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCategoryMaxAggregate = {
  __typename?: 'AssetCategoryMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetCategoryMinAggregate = {
  __typename?: 'AssetCategoryMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetCategoryOrderByWithRelationInput = {
  Asset?: InputMaybe<AssetOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type AssetCategoryRelationFilter = {
  is?: InputMaybe<AssetCategoryWhereInput>;
  isNot?: InputMaybe<AssetCategoryWhereInput>;
};

export type AssetCategoryUpdateOneWithoutAssetInput = {
  connect?: InputMaybe<AssetCategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCategoryCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<AssetCategoryCreateWithoutAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetCategoryUpdateWithoutAssetInput>;
  upsert?: InputMaybe<AssetCategoryUpsertWithoutAssetInput>;
};

export type AssetCategoryUpdateWithoutAssetInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetCategoryUpsertWithoutAssetInput = {
  create: AssetCategoryCreateWithoutAssetInput;
  update: AssetCategoryUpdateWithoutAssetInput;
};

export type AssetCategoryWhereInput = {
  AND?: InputMaybe<Array<AssetCategoryWhereInput>>;
  Asset?: InputMaybe<AssetListRelationFilter>;
  NOT?: InputMaybe<Array<AssetCategoryWhereInput>>;
  OR?: InputMaybe<Array<AssetCategoryWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AssetCategoryWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type AssetCount = {
  __typename?: 'AssetCount';
  BundleArrtibuteValues: Scalars['Int'];
  CategoryHeader: Scalars['Int'];
  CustomerAsset: Scalars['Int'];
  CustomerKYCAsset: Scalars['Int'];
  Products: Scalars['Int'];
  UserAsset: Scalars['Int'];
};

export type AssetCountAggregate = {
  __typename?: 'AssetCountAggregate';
  _all: Scalars['Int'];
  assetCategoryId: Scalars['Int'];
  assetStoreId: Scalars['Int'];
  assetTypeId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AssetCreateManyAssetStoreInput = {
  assetCategoryId?: InputMaybe<Scalars['String']>;
  assetTypeId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateManyAssetStoreInputEnvelope = {
  data: Array<AssetCreateManyAssetStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AssetCreateNestedManyWithoutAssetStoreInput = {
  connect?: InputMaybe<Array<AssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AssetCreateOrConnectWithoutAssetStoreInput>
  >;
  create?: InputMaybe<Array<AssetCreateWithoutAssetStoreInput>>;
  createMany?: InputMaybe<AssetCreateManyAssetStoreInputEnvelope>;
};

export type AssetCreateNestedOneWithoutBrandAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutBrandAssetInput>;
  create?: InputMaybe<AssetCreateWithoutBrandAssetInput>;
};

export type AssetCreateNestedOneWithoutBundleArrtibuteValuesInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutBundleArrtibuteValuesInput>;
  create?: InputMaybe<AssetCreateWithoutBundleArrtibuteValuesInput>;
};

export type AssetCreateNestedOneWithoutCategoryAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCategoryAssetInput>;
  create?: InputMaybe<AssetCreateWithoutCategoryAssetInput>;
};

export type AssetCreateNestedOneWithoutCategoryHeaderInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCategoryHeaderInput>;
  create?: InputMaybe<AssetCreateWithoutCategoryHeaderInput>;
};

export type AssetCreateNestedOneWithoutCustomerAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCustomerAssetInput>;
  create?: InputMaybe<AssetCreateWithoutCustomerAssetInput>;
};

export type AssetCreateNestedOneWithoutCustomerKycAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCustomerKycAssetInput>;
  create?: InputMaybe<AssetCreateWithoutCustomerKycAssetInput>;
};

export type AssetCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<AssetCreateWithoutProductsInput>;
};

export type AssetCreateNestedOneWithoutUserAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutUserAssetInput>;
  create?: InputMaybe<AssetCreateWithoutUserAssetInput>;
};

export type AssetCreateOrConnectWithoutAssetStoreInput = {
  create: AssetCreateWithoutAssetStoreInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutBrandAssetInput = {
  create: AssetCreateWithoutBrandAssetInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutBundleArrtibuteValuesInput = {
  create: AssetCreateWithoutBundleArrtibuteValuesInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutCategoryAssetInput = {
  create: AssetCreateWithoutCategoryAssetInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutCategoryHeaderInput = {
  create: AssetCreateWithoutCategoryHeaderInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutCustomerAssetInput = {
  create: AssetCreateWithoutCustomerAssetInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutCustomerKycAssetInput = {
  create: AssetCreateWithoutCustomerKycAssetInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutProductsInput = {
  create: AssetCreateWithoutProductsInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateOrConnectWithoutUserAssetInput = {
  create: AssetCreateWithoutUserAssetInput;
  where: AssetWhereUniqueInput;
};

export type AssetCreateWithoutAssetStoreInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutBrandAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutBundleArrtibuteValuesInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutCategoryAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutCategoryHeaderInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutCustomerAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutCustomerKycAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutProductsInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetCreateWithoutUserAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryCreateNestedOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeCreateNestedOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetCreateNestedOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetCreateNestedManyWithoutAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetListRelationFilter = {
  every?: InputMaybe<AssetWhereInput>;
  none?: InputMaybe<AssetWhereInput>;
  some?: InputMaybe<AssetWhereInput>;
};

export type AssetMaxAggregate = {
  __typename?: 'AssetMaxAggregate';
  assetCategoryId?: Maybe<Scalars['String']>;
  assetStoreId?: Maybe<Scalars['String']>;
  assetTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetMinAggregate = {
  __typename?: 'AssetMinAggregate';
  assetCategoryId?: Maybe<Scalars['String']>;
  assetStoreId?: Maybe<Scalars['String']>;
  assetTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AssetOrderByWithRelationInput = {
  AssetCategory?: InputMaybe<AssetCategoryOrderByWithRelationInput>;
  AssetStore?: InputMaybe<AssetStoreOrderByWithRelationInput>;
  AssetType?: InputMaybe<AssetTypeOrderByWithRelationInput>;
  BrandAsset?: InputMaybe<BrandAssetOrderByWithRelationInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsOrderByRelationAggregateInput>;
  CategoryAsset?: InputMaybe<CategoryAssetOrderByWithRelationInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderOrderByRelationAggregateInput>;
  CustomerAsset?: InputMaybe<CustomerAssetOrderByRelationAggregateInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetOrderByRelationAggregateInput>;
  Products?: InputMaybe<ProductAssetOrderByRelationAggregateInput>;
  UserAsset?: InputMaybe<UserAssetOrderByRelationAggregateInput>;
  assetCategoryId?: InputMaybe<SortOrder>;
  assetStoreId?: InputMaybe<SortOrder>;
  assetTypeId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type AssetRelationFilter = {
  is?: InputMaybe<AssetWhereInput>;
  isNot?: InputMaybe<AssetWhereInput>;
};

export type AssetScalarWhereInput = {
  AND?: InputMaybe<Array<AssetScalarWhereInput>>;
  NOT?: InputMaybe<Array<AssetScalarWhereInput>>;
  OR?: InputMaybe<Array<AssetScalarWhereInput>>;
  assetCategoryId?: InputMaybe<StringNullableFilter>;
  assetStoreId?: InputMaybe<StringNullableFilter>;
  assetTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AssetStore = {
  __typename?: 'AssetStore';
  Asset?: Maybe<Array<Asset>>;
  AssetStoreConfiguration?: Maybe<Array<AssetStoreConfiguration>>;
  _count: AssetStoreCount;
  authenticationKey?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  decsription?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  storage?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetStoreConfiguration = {
  __typename?: 'AssetStoreConfiguration';
  AssetStore?: Maybe<AssetStore>;
  Configuration?: Maybe<Configuration>;
  assetStoreId?: Maybe<Scalars['String']>;
  configurationId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetStoreConfigurationAssetStoreIdConfigurationIdCompoundUniqueInput =
  {
    assetStoreId: Scalars['String'];
    configurationId: Scalars['String'];
  };

export type AssetStoreConfigurationCountAggregate = {
  __typename?: 'AssetStoreConfigurationCountAggregate';
  _all: Scalars['Int'];
  assetStoreId: Scalars['Int'];
  configurationId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AssetStoreConfigurationCreateManyAssetStoreInput = {
  configurationId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetStoreConfigurationCreateManyAssetStoreInputEnvelope = {
  data: Array<AssetStoreConfigurationCreateManyAssetStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AssetStoreConfigurationCreateManyConfigurationInput = {
  assetStoreId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetStoreConfigurationCreateManyConfigurationInputEnvelope = {
  data: Array<AssetStoreConfigurationCreateManyConfigurationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AssetStoreConfigurationCreateNestedManyWithoutAssetStoreInput = {
  connect?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AssetStoreConfigurationCreateOrConnectWithoutAssetStoreInput>
  >;
  create?: InputMaybe<
    Array<AssetStoreConfigurationCreateWithoutAssetStoreInput>
  >;
  createMany?: InputMaybe<AssetStoreConfigurationCreateManyAssetStoreInputEnvelope>;
};

export type AssetStoreConfigurationCreateNestedManyWithoutConfigurationInput = {
  connect?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AssetStoreConfigurationCreateOrConnectWithoutConfigurationInput>
  >;
  create?: InputMaybe<
    Array<AssetStoreConfigurationCreateWithoutConfigurationInput>
  >;
  createMany?: InputMaybe<AssetStoreConfigurationCreateManyConfigurationInputEnvelope>;
};

export type AssetStoreConfigurationCreateOrConnectWithoutAssetStoreInput = {
  create: AssetStoreConfigurationCreateWithoutAssetStoreInput;
  where: AssetStoreConfigurationWhereUniqueInput;
};

export type AssetStoreConfigurationCreateOrConnectWithoutConfigurationInput = {
  create: AssetStoreConfigurationCreateWithoutConfigurationInput;
  where: AssetStoreConfigurationWhereUniqueInput;
};

export type AssetStoreConfigurationCreateWithoutAssetStoreInput = {
  Configuration?: InputMaybe<ConfigurationCreateNestedOneWithoutAssetStoreConfigurationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetStoreConfigurationCreateWithoutConfigurationInput = {
  AssetStore?: InputMaybe<AssetStoreCreateNestedOneWithoutAssetStoreConfigurationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetStoreConfigurationListRelationFilter = {
  every?: InputMaybe<AssetStoreConfigurationWhereInput>;
  none?: InputMaybe<AssetStoreConfigurationWhereInput>;
  some?: InputMaybe<AssetStoreConfigurationWhereInput>;
};

export type AssetStoreConfigurationMaxAggregate = {
  __typename?: 'AssetStoreConfigurationMaxAggregate';
  assetStoreId?: Maybe<Scalars['String']>;
  configurationId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetStoreConfigurationMinAggregate = {
  __typename?: 'AssetStoreConfigurationMinAggregate';
  assetStoreId?: Maybe<Scalars['String']>;
  configurationId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetStoreConfigurationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AssetStoreConfigurationScalarWhereInput = {
  AND?: InputMaybe<Array<AssetStoreConfigurationScalarWhereInput>>;
  NOT?: InputMaybe<Array<AssetStoreConfigurationScalarWhereInput>>;
  OR?: InputMaybe<Array<AssetStoreConfigurationScalarWhereInput>>;
  assetStoreId?: InputMaybe<StringNullableFilter>;
  configurationId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AssetStoreConfigurationUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetStoreConfigurationUpdateManyWithWhereWithoutAssetStoreInput = {
  data: AssetStoreConfigurationUpdateManyMutationInput;
  where: AssetStoreConfigurationScalarWhereInput;
};

export type AssetStoreConfigurationUpdateManyWithWhereWithoutConfigurationInput =
  {
    data: AssetStoreConfigurationUpdateManyMutationInput;
    where: AssetStoreConfigurationScalarWhereInput;
  };

export type AssetStoreConfigurationUpdateManyWithoutAssetStoreInput = {
  connect?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AssetStoreConfigurationCreateOrConnectWithoutAssetStoreInput>
  >;
  create?: InputMaybe<
    Array<AssetStoreConfigurationCreateWithoutAssetStoreInput>
  >;
  createMany?: InputMaybe<AssetStoreConfigurationCreateManyAssetStoreInputEnvelope>;
  delete?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AssetStoreConfigurationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  set?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AssetStoreConfigurationUpdateWithWhereUniqueWithoutAssetStoreInput>
  >;
  updateMany?: InputMaybe<
    Array<AssetStoreConfigurationUpdateManyWithWhereWithoutAssetStoreInput>
  >;
  upsert?: InputMaybe<
    Array<AssetStoreConfigurationUpsertWithWhereUniqueWithoutAssetStoreInput>
  >;
};

export type AssetStoreConfigurationUpdateManyWithoutConfigurationInput = {
  connect?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AssetStoreConfigurationCreateOrConnectWithoutConfigurationInput>
  >;
  create?: InputMaybe<
    Array<AssetStoreConfigurationCreateWithoutConfigurationInput>
  >;
  createMany?: InputMaybe<AssetStoreConfigurationCreateManyConfigurationInputEnvelope>;
  delete?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AssetStoreConfigurationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  set?: InputMaybe<Array<AssetStoreConfigurationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AssetStoreConfigurationUpdateWithWhereUniqueWithoutConfigurationInput>
  >;
  updateMany?: InputMaybe<
    Array<AssetStoreConfigurationUpdateManyWithWhereWithoutConfigurationInput>
  >;
  upsert?: InputMaybe<
    Array<AssetStoreConfigurationUpsertWithWhereUniqueWithoutConfigurationInput>
  >;
};

export type AssetStoreConfigurationUpdateWithWhereUniqueWithoutAssetStoreInput =
  {
    data: AssetStoreConfigurationUpdateWithoutAssetStoreInput;
    where: AssetStoreConfigurationWhereUniqueInput;
  };

export type AssetStoreConfigurationUpdateWithWhereUniqueWithoutConfigurationInput =
  {
    data: AssetStoreConfigurationUpdateWithoutConfigurationInput;
    where: AssetStoreConfigurationWhereUniqueInput;
  };

export type AssetStoreConfigurationUpdateWithoutAssetStoreInput = {
  Configuration?: InputMaybe<ConfigurationUpdateOneWithoutAssetStoreConfigurationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetStoreConfigurationUpdateWithoutConfigurationInput = {
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetStoreConfigurationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetStoreConfigurationUpsertWithWhereUniqueWithoutAssetStoreInput =
  {
    create: AssetStoreConfigurationCreateWithoutAssetStoreInput;
    update: AssetStoreConfigurationUpdateWithoutAssetStoreInput;
    where: AssetStoreConfigurationWhereUniqueInput;
  };

export type AssetStoreConfigurationUpsertWithWhereUniqueWithoutConfigurationInput =
  {
    create: AssetStoreConfigurationCreateWithoutConfigurationInput;
    update: AssetStoreConfigurationUpdateWithoutConfigurationInput;
    where: AssetStoreConfigurationWhereUniqueInput;
  };

export type AssetStoreConfigurationWhereInput = {
  AND?: InputMaybe<Array<AssetStoreConfigurationWhereInput>>;
  AssetStore?: InputMaybe<AssetStoreRelationFilter>;
  Configuration?: InputMaybe<ConfigurationRelationFilter>;
  NOT?: InputMaybe<Array<AssetStoreConfigurationWhereInput>>;
  OR?: InputMaybe<Array<AssetStoreConfigurationWhereInput>>;
  assetStoreId?: InputMaybe<StringNullableFilter>;
  configurationId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AssetStoreConfigurationWhereUniqueInput = {
  assetStoreId_configurationId?: InputMaybe<AssetStoreConfigurationAssetStoreIdConfigurationIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type AssetStoreCount = {
  __typename?: 'AssetStoreCount';
  Asset: Scalars['Int'];
  AssetStoreConfiguration: Scalars['Int'];
};

export type AssetStoreCountAggregate = {
  __typename?: 'AssetStoreCountAggregate';
  _all: Scalars['Int'];
  authenticationKey: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  decsription: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  storage: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AssetStoreCreateNestedOneWithoutAssetInput = {
  connect?: InputMaybe<AssetStoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetStoreCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<AssetStoreCreateWithoutAssetInput>;
};

export type AssetStoreCreateNestedOneWithoutAssetStoreConfigurationInput = {
  connect?: InputMaybe<AssetStoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetStoreCreateOrConnectWithoutAssetStoreConfigurationInput>;
  create?: InputMaybe<AssetStoreCreateWithoutAssetStoreConfigurationInput>;
};

export type AssetStoreCreateOrConnectWithoutAssetInput = {
  create: AssetStoreCreateWithoutAssetInput;
  where: AssetStoreWhereUniqueInput;
};

export type AssetStoreCreateOrConnectWithoutAssetStoreConfigurationInput = {
  create: AssetStoreCreateWithoutAssetStoreConfigurationInput;
  where: AssetStoreWhereUniqueInput;
};

export type AssetStoreCreateWithoutAssetInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationCreateNestedManyWithoutAssetStoreInput>;
  authenticationKey?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decsription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  storage?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetStoreCreateWithoutAssetStoreConfigurationInput = {
  Asset?: InputMaybe<AssetCreateNestedManyWithoutAssetStoreInput>;
  authenticationKey?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decsription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  storage?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetStoreMaxAggregate = {
  __typename?: 'AssetStoreMaxAggregate';
  authenticationKey?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  decsription?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  storage?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetStoreMinAggregate = {
  __typename?: 'AssetStoreMinAggregate';
  authenticationKey?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  decsription?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  storage?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetStoreOrderByWithRelationInput = {
  Asset?: InputMaybe<AssetOrderByRelationAggregateInput>;
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationOrderByRelationAggregateInput>;
  authenticationKey?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  decsription?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  storage?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type AssetStoreRelationFilter = {
  is?: InputMaybe<AssetStoreWhereInput>;
  isNot?: InputMaybe<AssetStoreWhereInput>;
};

export type AssetStoreUpdateOneWithoutAssetInput = {
  connect?: InputMaybe<AssetStoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetStoreCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<AssetStoreCreateWithoutAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetStoreUpdateWithoutAssetInput>;
  upsert?: InputMaybe<AssetStoreUpsertWithoutAssetInput>;
};

export type AssetStoreUpdateOneWithoutAssetStoreConfigurationInput = {
  connect?: InputMaybe<AssetStoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetStoreCreateOrConnectWithoutAssetStoreConfigurationInput>;
  create?: InputMaybe<AssetStoreCreateWithoutAssetStoreConfigurationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetStoreUpdateWithoutAssetStoreConfigurationInput>;
  upsert?: InputMaybe<AssetStoreUpsertWithoutAssetStoreConfigurationInput>;
};

export type AssetStoreUpdateWithoutAssetInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationUpdateManyWithoutAssetStoreInput>;
  authenticationKey?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decsription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  storage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetStoreUpdateWithoutAssetStoreConfigurationInput = {
  Asset?: InputMaybe<AssetUpdateManyWithoutAssetStoreInput>;
  authenticationKey?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decsription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  storage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetStoreUpsertWithoutAssetInput = {
  create: AssetStoreCreateWithoutAssetInput;
  update: AssetStoreUpdateWithoutAssetInput;
};

export type AssetStoreUpsertWithoutAssetStoreConfigurationInput = {
  create: AssetStoreCreateWithoutAssetStoreConfigurationInput;
  update: AssetStoreUpdateWithoutAssetStoreConfigurationInput;
};

export type AssetStoreWhereInput = {
  AND?: InputMaybe<Array<AssetStoreWhereInput>>;
  Asset?: InputMaybe<AssetListRelationFilter>;
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationListRelationFilter>;
  NOT?: InputMaybe<Array<AssetStoreWhereInput>>;
  OR?: InputMaybe<Array<AssetStoreWhereInput>>;
  authenticationKey?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  decsription?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  storage?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AssetStoreWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type AssetType = {
  __typename?: 'AssetType';
  Asset?: Maybe<Array<Asset>>;
  _count: AssetTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetTypeCount = {
  __typename?: 'AssetTypeCount';
  Asset: Scalars['Int'];
};

export type AssetTypeCountAggregate = {
  __typename?: 'AssetTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AssetTypeCreateNestedOneWithoutAssetInput = {
  connect?: InputMaybe<AssetTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetTypeCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<AssetTypeCreateWithoutAssetInput>;
};

export type AssetTypeCreateOrConnectWithoutAssetInput = {
  create: AssetTypeCreateWithoutAssetInput;
  where: AssetTypeWhereUniqueInput;
};

export type AssetTypeCreateWithoutAssetInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AssetTypeMaxAggregate = {
  __typename?: 'AssetTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetTypeMinAggregate = {
  __typename?: 'AssetTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AssetTypeOrderByWithRelationInput = {
  Asset?: InputMaybe<AssetOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type AssetTypeRelationFilter = {
  is?: InputMaybe<AssetTypeWhereInput>;
  isNot?: InputMaybe<AssetTypeWhereInput>;
};

export type AssetTypeUpdateOneWithoutAssetInput = {
  connect?: InputMaybe<AssetTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetTypeCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<AssetTypeCreateWithoutAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetTypeUpdateWithoutAssetInput>;
  upsert?: InputMaybe<AssetTypeUpsertWithoutAssetInput>;
};

export type AssetTypeUpdateWithoutAssetInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetTypeUpsertWithoutAssetInput = {
  create: AssetTypeCreateWithoutAssetInput;
  update: AssetTypeUpdateWithoutAssetInput;
};

export type AssetTypeWhereInput = {
  AND?: InputMaybe<Array<AssetTypeWhereInput>>;
  Asset?: InputMaybe<AssetListRelationFilter>;
  NOT?: InputMaybe<Array<AssetTypeWhereInput>>;
  OR?: InputMaybe<Array<AssetTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AssetTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type AssetUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateManyWithWhereWithoutAssetStoreInput = {
  data: AssetUpdateManyMutationInput;
  where: AssetScalarWhereInput;
};

export type AssetUpdateManyWithoutAssetStoreInput = {
  connect?: InputMaybe<Array<AssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AssetCreateOrConnectWithoutAssetStoreInput>
  >;
  create?: InputMaybe<Array<AssetCreateWithoutAssetStoreInput>>;
  createMany?: InputMaybe<AssetCreateManyAssetStoreInputEnvelope>;
  delete?: InputMaybe<Array<AssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AssetWhereUniqueInput>>;
  set?: InputMaybe<Array<AssetWhereUniqueInput>>;
  update?: InputMaybe<Array<AssetUpdateWithWhereUniqueWithoutAssetStoreInput>>;
  updateMany?: InputMaybe<
    Array<AssetUpdateManyWithWhereWithoutAssetStoreInput>
  >;
  upsert?: InputMaybe<Array<AssetUpsertWithWhereUniqueWithoutAssetStoreInput>>;
};

export type AssetUpdateOneWithoutBrandAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutBrandAssetInput>;
  create?: InputMaybe<AssetCreateWithoutBrandAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutBrandAssetInput>;
  upsert?: InputMaybe<AssetUpsertWithoutBrandAssetInput>;
};

export type AssetUpdateOneWithoutBundleArrtibuteValuesInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutBundleArrtibuteValuesInput>;
  create?: InputMaybe<AssetCreateWithoutBundleArrtibuteValuesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutBundleArrtibuteValuesInput>;
  upsert?: InputMaybe<AssetUpsertWithoutBundleArrtibuteValuesInput>;
};

export type AssetUpdateOneWithoutCategoryAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCategoryAssetInput>;
  create?: InputMaybe<AssetCreateWithoutCategoryAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutCategoryAssetInput>;
  upsert?: InputMaybe<AssetUpsertWithoutCategoryAssetInput>;
};

export type AssetUpdateOneWithoutCategoryHeaderInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCategoryHeaderInput>;
  create?: InputMaybe<AssetCreateWithoutCategoryHeaderInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutCategoryHeaderInput>;
  upsert?: InputMaybe<AssetUpsertWithoutCategoryHeaderInput>;
};

export type AssetUpdateOneWithoutCustomerAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCustomerAssetInput>;
  create?: InputMaybe<AssetCreateWithoutCustomerAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutCustomerAssetInput>;
  upsert?: InputMaybe<AssetUpsertWithoutCustomerAssetInput>;
};

export type AssetUpdateOneWithoutCustomerKycAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutCustomerKycAssetInput>;
  create?: InputMaybe<AssetCreateWithoutCustomerKycAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutCustomerKycAssetInput>;
  upsert?: InputMaybe<AssetUpsertWithoutCustomerKycAssetInput>;
};

export type AssetUpdateOneWithoutProductsInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<AssetCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutProductsInput>;
  upsert?: InputMaybe<AssetUpsertWithoutProductsInput>;
};

export type AssetUpdateOneWithoutUserAssetInput = {
  connect?: InputMaybe<AssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AssetCreateOrConnectWithoutUserAssetInput>;
  create?: InputMaybe<AssetCreateWithoutUserAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AssetUpdateWithoutUserAssetInput>;
  upsert?: InputMaybe<AssetUpsertWithoutUserAssetInput>;
};

export type AssetUpdateWithWhereUniqueWithoutAssetStoreInput = {
  data: AssetUpdateWithoutAssetStoreInput;
  where: AssetWhereUniqueInput;
};

export type AssetUpdateWithoutAssetStoreInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutBrandAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutBundleArrtibuteValuesInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutCategoryAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutCategoryHeaderInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutCustomerAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutCustomerKycAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutProductsInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpdateWithoutUserAssetInput = {
  AssetCategory?: InputMaybe<AssetCategoryUpdateOneWithoutAssetInput>;
  AssetStore?: InputMaybe<AssetStoreUpdateOneWithoutAssetInput>;
  AssetType?: InputMaybe<AssetTypeUpdateOneWithoutAssetInput>;
  BrandAsset?: InputMaybe<BrandAssetUpdateOneWithoutAssetInput>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutAssetInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateManyWithoutAssetInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutAssetInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutAssetInput>;
  Products?: InputMaybe<ProductAssetUpdateManyWithoutAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AssetUpsertWithWhereUniqueWithoutAssetStoreInput = {
  create: AssetCreateWithoutAssetStoreInput;
  update: AssetUpdateWithoutAssetStoreInput;
  where: AssetWhereUniqueInput;
};

export type AssetUpsertWithoutBrandAssetInput = {
  create: AssetCreateWithoutBrandAssetInput;
  update: AssetUpdateWithoutBrandAssetInput;
};

export type AssetUpsertWithoutBundleArrtibuteValuesInput = {
  create: AssetCreateWithoutBundleArrtibuteValuesInput;
  update: AssetUpdateWithoutBundleArrtibuteValuesInput;
};

export type AssetUpsertWithoutCategoryAssetInput = {
  create: AssetCreateWithoutCategoryAssetInput;
  update: AssetUpdateWithoutCategoryAssetInput;
};

export type AssetUpsertWithoutCategoryHeaderInput = {
  create: AssetCreateWithoutCategoryHeaderInput;
  update: AssetUpdateWithoutCategoryHeaderInput;
};

export type AssetUpsertWithoutCustomerAssetInput = {
  create: AssetCreateWithoutCustomerAssetInput;
  update: AssetUpdateWithoutCustomerAssetInput;
};

export type AssetUpsertWithoutCustomerKycAssetInput = {
  create: AssetCreateWithoutCustomerKycAssetInput;
  update: AssetUpdateWithoutCustomerKycAssetInput;
};

export type AssetUpsertWithoutProductsInput = {
  create: AssetCreateWithoutProductsInput;
  update: AssetUpdateWithoutProductsInput;
};

export type AssetUpsertWithoutUserAssetInput = {
  create: AssetCreateWithoutUserAssetInput;
  update: AssetUpdateWithoutUserAssetInput;
};

export type AssetWhereInput = {
  AND?: InputMaybe<Array<AssetWhereInput>>;
  AssetCategory?: InputMaybe<AssetCategoryRelationFilter>;
  AssetStore?: InputMaybe<AssetStoreRelationFilter>;
  AssetType?: InputMaybe<AssetTypeRelationFilter>;
  BrandAsset?: InputMaybe<BrandAssetRelationFilter>;
  BundleArrtibuteValues?: InputMaybe<BundleArrtibuteValueAssetsListRelationFilter>;
  CategoryAsset?: InputMaybe<CategoryAssetRelationFilter>;
  CategoryHeader?: InputMaybe<CategoryHeaderListRelationFilter>;
  CustomerAsset?: InputMaybe<CustomerAssetListRelationFilter>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetListRelationFilter>;
  NOT?: InputMaybe<Array<AssetWhereInput>>;
  OR?: InputMaybe<Array<AssetWhereInput>>;
  Products?: InputMaybe<ProductAssetListRelationFilter>;
  UserAsset?: InputMaybe<UserAssetListRelationFilter>;
  assetCategoryId?: InputMaybe<StringNullableFilter>;
  assetStoreId?: InputMaybe<StringNullableFilter>;
  assetTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AssetWhereUniqueInput = {
  assetTypeId_assetStoreId_assetCategoryId?: InputMaybe<AssetAssetTypeIdAssetStoreIdAssetCategoryIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type Attribute = {
  __typename?: 'Attribute';
  AttributeControlTypeValue?: Maybe<Array<AttributeControlTypeValue>>;
  AttributeType?: Maybe<AttributeType>;
  AttributeValue?: Maybe<Array<AttributeValue>>;
  Attribute_TL?: Maybe<Array<Attribute_Tl>>;
  CategoryAttribute?: Maybe<Array<CategoryAttribute>>;
  CategoryHeaderAttributeValue?: Maybe<Array<CategoryHeaderAttributeValue>>;
  CustomerEnrollmentValue?: Maybe<Array<CustomerEnrollmentValue>>;
  EnrollmentAttribute?: Maybe<Array<EnrollmentAttribute>>;
  ProductCustomAttributeValues?: Maybe<Array<ProductCustomAttributeValue>>;
  ProductVariantAttributeValue?: Maybe<Array<ProductVariantAttributeValue>>;
  _count: AttributeCount;
  attributeTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeControlType = {
  __typename?: 'AttributeControlType';
  AttributeControlTypeValue?: Maybe<Array<AttributeControlTypeValue>>;
  _count: AttributeControlTypeCount;
  controlField?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeControlTypeCount = {
  __typename?: 'AttributeControlTypeCount';
  AttributeControlTypeValue: Scalars['Int'];
};

export type AttributeControlTypeCountAggregate = {
  __typename?: 'AttributeControlTypeCountAggregate';
  _all: Scalars['Int'];
  controlField: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AttributeControlTypeCreateNestedOneWithoutAttributeControlTypeValueInput =
  {
    connect?: InputMaybe<AttributeControlTypeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<AttributeControlTypeCreateOrConnectWithoutAttributeControlTypeValueInput>;
    create?: InputMaybe<AttributeControlTypeCreateWithoutAttributeControlTypeValueInput>;
  };

export type AttributeControlTypeCreateOrConnectWithoutAttributeControlTypeValueInput =
  {
    create: AttributeControlTypeCreateWithoutAttributeControlTypeValueInput;
    where: AttributeControlTypeWhereUniqueInput;
  };

export type AttributeControlTypeCreateWithoutAttributeControlTypeValueInput = {
  controlField?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeControlTypeMaxAggregate = {
  __typename?: 'AttributeControlTypeMaxAggregate';
  controlField?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeControlTypeMinAggregate = {
  __typename?: 'AttributeControlTypeMinAggregate';
  controlField?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeControlTypeRelationFilter = {
  is?: InputMaybe<AttributeControlTypeWhereInput>;
  isNot?: InputMaybe<AttributeControlTypeWhereInput>;
};

export type AttributeControlTypeUpdateOneWithoutAttributeControlTypeValueInput =
  {
    connect?: InputMaybe<AttributeControlTypeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<AttributeControlTypeCreateOrConnectWithoutAttributeControlTypeValueInput>;
    create?: InputMaybe<AttributeControlTypeCreateWithoutAttributeControlTypeValueInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<AttributeControlTypeUpdateWithoutAttributeControlTypeValueInput>;
    upsert?: InputMaybe<AttributeControlTypeUpsertWithoutAttributeControlTypeValueInput>;
  };

export type AttributeControlTypeUpdateWithoutAttributeControlTypeValueInput = {
  controlField?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeControlTypeUpsertWithoutAttributeControlTypeValueInput = {
  create: AttributeControlTypeCreateWithoutAttributeControlTypeValueInput;
  update: AttributeControlTypeUpdateWithoutAttributeControlTypeValueInput;
};

export type AttributeControlTypeValue = {
  __typename?: 'AttributeControlTypeValue';
  Attribute?: Maybe<Attribute>;
  AttributeControlType?: Maybe<AttributeControlType>;
  Context?: Maybe<Context>;
  attributeControlTypeId?: Maybe<Scalars['String']>;
  attributeId?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  controlValue?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeControlTypeValueAttributeControlTypeIdControlValueAttributeIdCompoundUniqueInput =
  {
    attributeControlTypeId: Scalars['String'];
    attributeId: Scalars['String'];
    controlValue: Scalars['String'];
  };

export type AttributeControlTypeValueCountAggregate = {
  __typename?: 'AttributeControlTypeValueCountAggregate';
  _all: Scalars['Int'];
  attributeControlTypeId: Scalars['Int'];
  attributeId: Scalars['Int'];
  contextFKValue: Scalars['Int'];
  contextId: Scalars['Int'];
  controlValue: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AttributeControlTypeValueCreateManyAttributeInput = {
  attributeControlTypeId?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  contextId?: InputMaybe<Scalars['String']>;
  controlValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeControlTypeValueCreateManyAttributeInputEnvelope = {
  data: Array<AttributeControlTypeValueCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttributeControlTypeValueCreateManyContextInput = {
  attributeControlTypeId?: InputMaybe<Scalars['String']>;
  attributeId?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  controlValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeControlTypeValueCreateManyContextInputEnvelope = {
  data: Array<AttributeControlTypeValueCreateManyContextInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttributeControlTypeValueCreateNestedManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeControlTypeValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<
    Array<AttributeControlTypeValueCreateWithoutAttributeInput>
  >;
  createMany?: InputMaybe<AttributeControlTypeValueCreateManyAttributeInputEnvelope>;
};

export type AttributeControlTypeValueCreateNestedManyWithoutContextInput = {
  connect?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeControlTypeValueCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<
    Array<AttributeControlTypeValueCreateWithoutContextInput>
  >;
  createMany?: InputMaybe<AttributeControlTypeValueCreateManyContextInputEnvelope>;
};

export type AttributeControlTypeValueCreateOrConnectWithoutAttributeInput = {
  create: AttributeControlTypeValueCreateWithoutAttributeInput;
  where: AttributeControlTypeValueWhereUniqueInput;
};

export type AttributeControlTypeValueCreateOrConnectWithoutContextInput = {
  create: AttributeControlTypeValueCreateWithoutContextInput;
  where: AttributeControlTypeValueWhereUniqueInput;
};

export type AttributeControlTypeValueCreateWithoutAttributeInput = {
  AttributeControlType?: InputMaybe<AttributeControlTypeCreateNestedOneWithoutAttributeControlTypeValueInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutAttributeControlTypeValueInput>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  controlValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeControlTypeValueCreateWithoutContextInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeControlTypeValueInput>;
  AttributeControlType?: InputMaybe<AttributeControlTypeCreateNestedOneWithoutAttributeControlTypeValueInput>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  controlValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeControlTypeValueListRelationFilter = {
  every?: InputMaybe<AttributeControlTypeValueWhereInput>;
  none?: InputMaybe<AttributeControlTypeValueWhereInput>;
  some?: InputMaybe<AttributeControlTypeValueWhereInput>;
};

export type AttributeControlTypeValueMaxAggregate = {
  __typename?: 'AttributeControlTypeValueMaxAggregate';
  attributeControlTypeId?: Maybe<Scalars['String']>;
  attributeId?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  controlValue?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeControlTypeValueMinAggregate = {
  __typename?: 'AttributeControlTypeValueMinAggregate';
  attributeControlTypeId?: Maybe<Scalars['String']>;
  attributeId?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  controlValue?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeControlTypeValueOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AttributeControlTypeValueScalarWhereInput = {
  AND?: InputMaybe<Array<AttributeControlTypeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<AttributeControlTypeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<AttributeControlTypeValueScalarWhereInput>>;
  attributeControlTypeId?: InputMaybe<StringNullableFilter>;
  attributeId?: InputMaybe<StringNullableFilter>;
  contextFKValue?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  controlValue?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeControlTypeValueUpdateManyMutationInput = {
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  controlValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeControlTypeValueUpdateManyWithWhereWithoutAttributeInput =
  {
    data: AttributeControlTypeValueUpdateManyMutationInput;
    where: AttributeControlTypeValueScalarWhereInput;
  };

export type AttributeControlTypeValueUpdateManyWithWhereWithoutContextInput = {
  data: AttributeControlTypeValueUpdateManyMutationInput;
  where: AttributeControlTypeValueScalarWhereInput;
};

export type AttributeControlTypeValueUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeControlTypeValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<
    Array<AttributeControlTypeValueCreateWithoutAttributeInput>
  >;
  createMany?: InputMaybe<AttributeControlTypeValueCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AttributeControlTypeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AttributeControlTypeValueUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<AttributeControlTypeValueUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<AttributeControlTypeValueUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type AttributeControlTypeValueUpdateManyWithoutContextInput = {
  connect?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeControlTypeValueCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<
    Array<AttributeControlTypeValueCreateWithoutContextInput>
  >;
  createMany?: InputMaybe<AttributeControlTypeValueCreateManyContextInputEnvelope>;
  delete?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AttributeControlTypeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<AttributeControlTypeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AttributeControlTypeValueUpdateWithWhereUniqueWithoutContextInput>
  >;
  updateMany?: InputMaybe<
    Array<AttributeControlTypeValueUpdateManyWithWhereWithoutContextInput>
  >;
  upsert?: InputMaybe<
    Array<AttributeControlTypeValueUpsertWithWhereUniqueWithoutContextInput>
  >;
};

export type AttributeControlTypeValueUpdateWithWhereUniqueWithoutAttributeInput =
  {
    data: AttributeControlTypeValueUpdateWithoutAttributeInput;
    where: AttributeControlTypeValueWhereUniqueInput;
  };

export type AttributeControlTypeValueUpdateWithWhereUniqueWithoutContextInput =
  {
    data: AttributeControlTypeValueUpdateWithoutContextInput;
    where: AttributeControlTypeValueWhereUniqueInput;
  };

export type AttributeControlTypeValueUpdateWithoutAttributeInput = {
  AttributeControlType?: InputMaybe<AttributeControlTypeUpdateOneWithoutAttributeControlTypeValueInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutAttributeControlTypeValueInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  controlValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeControlTypeValueUpdateWithoutContextInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeControlTypeValueInput>;
  AttributeControlType?: InputMaybe<AttributeControlTypeUpdateOneWithoutAttributeControlTypeValueInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  controlValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeControlTypeValueUpsertWithWhereUniqueWithoutAttributeInput =
  {
    create: AttributeControlTypeValueCreateWithoutAttributeInput;
    update: AttributeControlTypeValueUpdateWithoutAttributeInput;
    where: AttributeControlTypeValueWhereUniqueInput;
  };

export type AttributeControlTypeValueUpsertWithWhereUniqueWithoutContextInput =
  {
    create: AttributeControlTypeValueCreateWithoutContextInput;
    update: AttributeControlTypeValueUpdateWithoutContextInput;
    where: AttributeControlTypeValueWhereUniqueInput;
  };

export type AttributeControlTypeValueWhereInput = {
  AND?: InputMaybe<Array<AttributeControlTypeValueWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  AttributeControlType?: InputMaybe<AttributeControlTypeRelationFilter>;
  Context?: InputMaybe<ContextRelationFilter>;
  NOT?: InputMaybe<Array<AttributeControlTypeValueWhereInput>>;
  OR?: InputMaybe<Array<AttributeControlTypeValueWhereInput>>;
  attributeControlTypeId?: InputMaybe<StringNullableFilter>;
  attributeId?: InputMaybe<StringNullableFilter>;
  contextFKValue?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  controlValue?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeControlTypeValueWhereUniqueInput = {
  attributeControlTypeId_controlValue_attributeId?: InputMaybe<AttributeControlTypeValueAttributeControlTypeIdControlValueAttributeIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type AttributeControlTypeWhereInput = {
  AND?: InputMaybe<Array<AttributeControlTypeWhereInput>>;
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueListRelationFilter>;
  NOT?: InputMaybe<Array<AttributeControlTypeWhereInput>>;
  OR?: InputMaybe<Array<AttributeControlTypeWhereInput>>;
  controlField?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeControlTypeWhereUniqueInput = {
  controlField?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
};

export type AttributeCount = {
  __typename?: 'AttributeCount';
  AttributeControlTypeValue: Scalars['Int'];
  AttributeValue: Scalars['Int'];
  Attribute_TL: Scalars['Int'];
  CategoryAttribute: Scalars['Int'];
  CategoryHeaderAttributeValue: Scalars['Int'];
  CustomerEnrollmentValue: Scalars['Int'];
  EnrollmentAttribute: Scalars['Int'];
  ProductCustomAttributeValues: Scalars['Int'];
  ProductVariantAttributeValue: Scalars['Int'];
};

export type AttributeCountAggregate = {
  __typename?: 'AttributeCountAggregate';
  _all: Scalars['Int'];
  attributeTypeId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AttributeCreateNestedOneWithoutAttributeControlTypeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutAttributeControlTypeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutAttributeControlTypeValueInput>;
};

export type AttributeCreateNestedOneWithoutAttributeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutAttributeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutAttributeValueInput>;
};

export type AttributeCreateNestedOneWithoutAttribute_TlInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutAttribute_TlInput>;
  create?: InputMaybe<AttributeCreateWithoutAttribute_TlInput>;
};

export type AttributeCreateNestedOneWithoutCategoryAttributeInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutCategoryAttributeInput>;
  create?: InputMaybe<AttributeCreateWithoutCategoryAttributeInput>;
};

export type AttributeCreateNestedOneWithoutCategoryHeaderAttributeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutCategoryHeaderAttributeValueInput>;
};

export type AttributeCreateNestedOneWithoutCustomerEnrollmentValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutCustomerEnrollmentValueInput>;
  create?: InputMaybe<AttributeCreateWithoutCustomerEnrollmentValueInput>;
};

export type AttributeCreateNestedOneWithoutEnrollmentAttributeInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutEnrollmentAttributeInput>;
  create?: InputMaybe<AttributeCreateWithoutEnrollmentAttributeInput>;
};

export type AttributeCreateNestedOneWithoutProductCustomAttributeValuesInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutProductCustomAttributeValuesInput>;
  create?: InputMaybe<AttributeCreateWithoutProductCustomAttributeValuesInput>;
};

export type AttributeCreateNestedOneWithoutProductVariantAttributeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutProductVariantAttributeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutProductVariantAttributeValueInput>;
};

export type AttributeCreateOrConnectWithoutAttributeControlTypeValueInput = {
  create: AttributeCreateWithoutAttributeControlTypeValueInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutAttributeValueInput = {
  create: AttributeCreateWithoutAttributeValueInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutAttribute_TlInput = {
  create: AttributeCreateWithoutAttribute_TlInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutCategoryAttributeInput = {
  create: AttributeCreateWithoutCategoryAttributeInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutCategoryHeaderAttributeValueInput = {
  create: AttributeCreateWithoutCategoryHeaderAttributeValueInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutCustomerEnrollmentValueInput = {
  create: AttributeCreateWithoutCustomerEnrollmentValueInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutEnrollmentAttributeInput = {
  create: AttributeCreateWithoutEnrollmentAttributeInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutProductCustomAttributeValuesInput = {
  create: AttributeCreateWithoutProductCustomAttributeValuesInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateOrConnectWithoutProductVariantAttributeValueInput = {
  create: AttributeCreateWithoutProductVariantAttributeValueInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeCreateWithoutAttributeControlTypeValueInput = {
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutAttribute_TlInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutCategoryAttributeInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutCategoryHeaderAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutCustomerEnrollmentValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutEnrollmentAttributeInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutProductCustomAttributeValuesInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateWithoutProductVariantAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeCreateNestedOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeCreateNestedManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeInputArray = {
  name: Scalars['String'];
  value: Scalars['String'];
};

export type AttributeListRelationFilter = {
  every?: InputMaybe<AttributeWhereInput>;
  none?: InputMaybe<AttributeWhereInput>;
  some?: InputMaybe<AttributeWhereInput>;
};

export type AttributeMaxAggregate = {
  __typename?: 'AttributeMaxAggregate';
  attributeTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeMinAggregate = {
  __typename?: 'AttributeMinAggregate';
  attributeTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeRelationFilter = {
  is?: InputMaybe<AttributeWhereInput>;
  isNot?: InputMaybe<AttributeWhereInput>;
};

export type AttributeType = {
  __typename?: 'AttributeType';
  Attribute?: Maybe<Array<Attribute>>;
  _count: AttributeTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeTypeCount = {
  __typename?: 'AttributeTypeCount';
  Attribute: Scalars['Int'];
};

export type AttributeTypeCountAggregate = {
  __typename?: 'AttributeTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AttributeTypeCreateNestedOneWithoutAttributeInput = {
  connect?: InputMaybe<AttributeTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeTypeCreateOrConnectWithoutAttributeInput>;
  create?: InputMaybe<AttributeTypeCreateWithoutAttributeInput>;
};

export type AttributeTypeCreateOrConnectWithoutAttributeInput = {
  create: AttributeTypeCreateWithoutAttributeInput;
  where: AttributeTypeWhereUniqueInput;
};

export type AttributeTypeCreateWithoutAttributeInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeTypeMaxAggregate = {
  __typename?: 'AttributeTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeTypeMinAggregate = {
  __typename?: 'AttributeTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeTypeRelationFilter = {
  is?: InputMaybe<AttributeTypeWhereInput>;
  isNot?: InputMaybe<AttributeTypeWhereInput>;
};

export type AttributeTypeUpdateOneWithoutAttributeInput = {
  connect?: InputMaybe<AttributeTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeTypeCreateOrConnectWithoutAttributeInput>;
  create?: InputMaybe<AttributeTypeCreateWithoutAttributeInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeTypeUpdateWithoutAttributeInput>;
  upsert?: InputMaybe<AttributeTypeUpsertWithoutAttributeInput>;
};

export type AttributeTypeUpdateWithoutAttributeInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeTypeUpsertWithoutAttributeInput = {
  create: AttributeTypeCreateWithoutAttributeInput;
  update: AttributeTypeUpdateWithoutAttributeInput;
};

export type AttributeTypeWhereInput = {
  AND?: InputMaybe<Array<AttributeTypeWhereInput>>;
  Attribute?: InputMaybe<AttributeListRelationFilter>;
  NOT?: InputMaybe<Array<AttributeTypeWhereInput>>;
  OR?: InputMaybe<Array<AttributeTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type AttributeUpdateOneRequiredWithoutProductCustomAttributeValuesInput =
  {
    connect?: InputMaybe<AttributeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutProductCustomAttributeValuesInput>;
    create?: InputMaybe<AttributeCreateWithoutProductCustomAttributeValuesInput>;
    update?: InputMaybe<AttributeUpdateWithoutProductCustomAttributeValuesInput>;
    upsert?: InputMaybe<AttributeUpsertWithoutProductCustomAttributeValuesInput>;
  };

export type AttributeUpdateOneWithoutAttributeControlTypeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutAttributeControlTypeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutAttributeControlTypeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutAttributeControlTypeValueInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutAttributeControlTypeValueInput>;
};

export type AttributeUpdateOneWithoutAttributeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutAttributeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutAttributeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutAttributeValueInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutAttributeValueInput>;
};

export type AttributeUpdateOneWithoutAttribute_TlInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutAttribute_TlInput>;
  create?: InputMaybe<AttributeCreateWithoutAttribute_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutAttribute_TlInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutAttribute_TlInput>;
};

export type AttributeUpdateOneWithoutCategoryAttributeInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutCategoryAttributeInput>;
  create?: InputMaybe<AttributeCreateWithoutCategoryAttributeInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutCategoryAttributeInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutCategoryAttributeInput>;
};

export type AttributeUpdateOneWithoutCategoryHeaderAttributeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutCategoryHeaderAttributeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutCategoryHeaderAttributeValueInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutCategoryHeaderAttributeValueInput>;
};

export type AttributeUpdateOneWithoutCustomerEnrollmentValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutCustomerEnrollmentValueInput>;
  create?: InputMaybe<AttributeCreateWithoutCustomerEnrollmentValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutCustomerEnrollmentValueInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutCustomerEnrollmentValueInput>;
};

export type AttributeUpdateOneWithoutEnrollmentAttributeInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutEnrollmentAttributeInput>;
  create?: InputMaybe<AttributeCreateWithoutEnrollmentAttributeInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutEnrollmentAttributeInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutEnrollmentAttributeInput>;
};

export type AttributeUpdateOneWithoutProductVariantAttributeValueInput = {
  connect?: InputMaybe<AttributeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeCreateOrConnectWithoutProductVariantAttributeValueInput>;
  create?: InputMaybe<AttributeCreateWithoutProductVariantAttributeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeUpdateWithoutProductVariantAttributeValueInput>;
  upsert?: InputMaybe<AttributeUpsertWithoutProductVariantAttributeValueInput>;
};

export type AttributeUpdateWithoutAttributeControlTypeValueInput = {
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutAttribute_TlInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutCategoryAttributeInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutCategoryHeaderAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutCustomerEnrollmentValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutEnrollmentAttributeInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutProductCustomAttributeValuesInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdateWithoutProductVariantAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutAttributeInput>;
  AttributeType?: InputMaybe<AttributeTypeUpdateOneWithoutAttributeInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateManyWithoutAttributeInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutAttributeInput>;
  CategoryAttribute?: InputMaybe<CategoryAttributeUpdateManyWithoutAttributeInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutAttributeInput>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpsertWithoutAttributeControlTypeValueInput = {
  create: AttributeCreateWithoutAttributeControlTypeValueInput;
  update: AttributeUpdateWithoutAttributeControlTypeValueInput;
};

export type AttributeUpsertWithoutAttributeValueInput = {
  create: AttributeCreateWithoutAttributeValueInput;
  update: AttributeUpdateWithoutAttributeValueInput;
};

export type AttributeUpsertWithoutAttribute_TlInput = {
  create: AttributeCreateWithoutAttribute_TlInput;
  update: AttributeUpdateWithoutAttribute_TlInput;
};

export type AttributeUpsertWithoutCategoryAttributeInput = {
  create: AttributeCreateWithoutCategoryAttributeInput;
  update: AttributeUpdateWithoutCategoryAttributeInput;
};

export type AttributeUpsertWithoutCategoryHeaderAttributeValueInput = {
  create: AttributeCreateWithoutCategoryHeaderAttributeValueInput;
  update: AttributeUpdateWithoutCategoryHeaderAttributeValueInput;
};

export type AttributeUpsertWithoutCustomerEnrollmentValueInput = {
  create: AttributeCreateWithoutCustomerEnrollmentValueInput;
  update: AttributeUpdateWithoutCustomerEnrollmentValueInput;
};

export type AttributeUpsertWithoutEnrollmentAttributeInput = {
  create: AttributeCreateWithoutEnrollmentAttributeInput;
  update: AttributeUpdateWithoutEnrollmentAttributeInput;
};

export type AttributeUpsertWithoutProductCustomAttributeValuesInput = {
  create: AttributeCreateWithoutProductCustomAttributeValuesInput;
  update: AttributeUpdateWithoutProductCustomAttributeValuesInput;
};

export type AttributeUpsertWithoutProductVariantAttributeValueInput = {
  create: AttributeCreateWithoutProductVariantAttributeValueInput;
  update: AttributeUpdateWithoutProductVariantAttributeValueInput;
};

export type AttributeValue = {
  __typename?: 'AttributeValue';
  Attribute?: Maybe<Attribute>;
  AttributeValue_TL?: Maybe<Array<AttributeValue_Tl>>;
  BundleArrtibuteValueAssets?: Maybe<Array<BundleArrtibuteValueAssets>>;
  BundleAttributeValues?: Maybe<Array<BundleAttributeValues>>;
  BundleMiscs?: Maybe<Array<BundleMisc>>;
  CategoryHeaderAttributeValue?: Maybe<Array<CategoryHeaderAttributeValue>>;
  CustomerEnrollmentValue?: Maybe<Array<CustomerEnrollmentValue>>;
  ProductVariants?: Maybe<Array<ProductVariantAttributeValue>>;
  Products?: Maybe<Array<ProductAttributeValue>>;
  _count: AttributeValueCount;
  additionalInfo?: Maybe<Scalars['String']>;
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeValueAttributeIdNameCompoundUniqueInput = {
  attributeId: Scalars['String'];
  name: Scalars['String'];
};

export type AttributeValueCount = {
  __typename?: 'AttributeValueCount';
  AttributeValue_TL: Scalars['Int'];
  BundleArrtibuteValueAssets: Scalars['Int'];
  BundleAttributeValues: Scalars['Int'];
  BundleMiscs: Scalars['Int'];
  CategoryHeaderAttributeValue: Scalars['Int'];
  CustomerEnrollmentValue: Scalars['Int'];
  ProductVariants: Scalars['Int'];
  Products: Scalars['Int'];
};

export type AttributeValueCountAggregate = {
  __typename?: 'AttributeValueCountAggregate';
  _all: Scalars['Int'];
  additionalInfo: Scalars['Int'];
  attributeId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AttributeValueCreateManyAttributeInput = {
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateManyAttributeInputEnvelope = {
  data: Array<AttributeValueCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttributeValueCreateNestedManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<AttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<AttributeValueCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<AttributeValueCreateManyAttributeInputEnvelope>;
};

export type AttributeValueCreateNestedOneWithoutAttributeValue_TlInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutAttributeValue_TlInput>;
  create?: InputMaybe<AttributeValueCreateWithoutAttributeValue_TlInput>;
};

export type AttributeValueCreateNestedOneWithoutBundleArrtibuteValueAssetsInput =
  {
    connect?: InputMaybe<AttributeValueWhereUniqueInput>;
    connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutBundleArrtibuteValueAssetsInput>;
    create?: InputMaybe<AttributeValueCreateWithoutBundleArrtibuteValueAssetsInput>;
  };

export type AttributeValueCreateNestedOneWithoutBundleAttributeValuesInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutBundleAttributeValuesInput>;
  create?: InputMaybe<AttributeValueCreateWithoutBundleAttributeValuesInput>;
};

export type AttributeValueCreateNestedOneWithoutBundleMiscsInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutBundleMiscsInput>;
  create?: InputMaybe<AttributeValueCreateWithoutBundleMiscsInput>;
};

export type AttributeValueCreateNestedOneWithoutCategoryHeaderAttributeValueInput =
  {
    connect?: InputMaybe<AttributeValueWhereUniqueInput>;
    connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
    create?: InputMaybe<AttributeValueCreateWithoutCategoryHeaderAttributeValueInput>;
  };

export type AttributeValueCreateNestedOneWithoutCustomerEnrollmentValueInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutCustomerEnrollmentValueInput>;
  create?: InputMaybe<AttributeValueCreateWithoutCustomerEnrollmentValueInput>;
};

export type AttributeValueCreateNestedOneWithoutProductVariantsInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutProductVariantsInput>;
  create?: InputMaybe<AttributeValueCreateWithoutProductVariantsInput>;
};

export type AttributeValueCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<AttributeValueCreateWithoutProductsInput>;
};

export type AttributeValueCreateOrConnectWithoutAttributeInput = {
  create: AttributeValueCreateWithoutAttributeInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueCreateOrConnectWithoutAttributeValue_TlInput = {
  create: AttributeValueCreateWithoutAttributeValue_TlInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueCreateOrConnectWithoutBundleArrtibuteValueAssetsInput =
  {
    create: AttributeValueCreateWithoutBundleArrtibuteValueAssetsInput;
    where: AttributeValueWhereUniqueInput;
  };

export type AttributeValueCreateOrConnectWithoutBundleAttributeValuesInput = {
  create: AttributeValueCreateWithoutBundleAttributeValuesInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueCreateOrConnectWithoutBundleMiscsInput = {
  create: AttributeValueCreateWithoutBundleMiscsInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueCreateOrConnectWithoutCategoryHeaderAttributeValueInput =
  {
    create: AttributeValueCreateWithoutCategoryHeaderAttributeValueInput;
    where: AttributeValueWhereUniqueInput;
  };

export type AttributeValueCreateOrConnectWithoutCustomerEnrollmentValueInput = {
  create: AttributeValueCreateWithoutCustomerEnrollmentValueInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueCreateOrConnectWithoutProductVariantsInput = {
  create: AttributeValueCreateWithoutProductVariantsInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueCreateOrConnectWithoutProductsInput = {
  create: AttributeValueCreateWithoutProductsInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueCreateWithoutAttributeInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutAttributeValue_TlInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutBundleArrtibuteValueAssetsInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutBundleAttributeValuesInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutBundleMiscsInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutCategoryHeaderAttributeValueInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutCustomerEnrollmentValueInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutProductVariantsInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueCreateWithoutProductsInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValueListRelationFilter = {
  every?: InputMaybe<AttributeValueWhereInput>;
  none?: InputMaybe<AttributeValueWhereInput>;
  some?: InputMaybe<AttributeValueWhereInput>;
};

export type AttributeValueMaxAggregate = {
  __typename?: 'AttributeValueMaxAggregate';
  additionalInfo?: Maybe<Scalars['String']>;
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeValueMinAggregate = {
  __typename?: 'AttributeValueMinAggregate';
  additionalInfo?: Maybe<Scalars['String']>;
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeValueRelationFilter = {
  is?: InputMaybe<AttributeValueWhereInput>;
  isNot?: InputMaybe<AttributeValueWhereInput>;
};

export type AttributeValueScalarWhereInput = {
  AND?: InputMaybe<Array<AttributeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<AttributeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<AttributeValueScalarWhereInput>>;
  additionalInfo?: InputMaybe<StringNullableFilter>;
  attributeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeValueUpdateManyMutationInput = {
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateManyWithWhereWithoutAttributeInput = {
  data: AttributeValueUpdateManyMutationInput;
  where: AttributeValueScalarWhereInput;
};

export type AttributeValueUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<AttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<AttributeValueCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<AttributeValueCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<AttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<AttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AttributeValueUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<AttributeValueUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<AttributeValueUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type AttributeValueUpdateOneRequiredWithoutProductsInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<AttributeValueCreateWithoutProductsInput>;
  update?: InputMaybe<AttributeValueUpdateWithoutProductsInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutProductsInput>;
};

export type AttributeValueUpdateOneWithoutAttributeValue_TlInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutAttributeValue_TlInput>;
  create?: InputMaybe<AttributeValueCreateWithoutAttributeValue_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeValueUpdateWithoutAttributeValue_TlInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutAttributeValue_TlInput>;
};

export type AttributeValueUpdateOneWithoutBundleArrtibuteValueAssetsInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutBundleArrtibuteValueAssetsInput>;
  create?: InputMaybe<AttributeValueCreateWithoutBundleArrtibuteValueAssetsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeValueUpdateWithoutBundleArrtibuteValueAssetsInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutBundleArrtibuteValueAssetsInput>;
};

export type AttributeValueUpdateOneWithoutBundleAttributeValuesInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutBundleAttributeValuesInput>;
  create?: InputMaybe<AttributeValueCreateWithoutBundleAttributeValuesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeValueUpdateWithoutBundleAttributeValuesInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutBundleAttributeValuesInput>;
};

export type AttributeValueUpdateOneWithoutBundleMiscsInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutBundleMiscsInput>;
  create?: InputMaybe<AttributeValueCreateWithoutBundleMiscsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeValueUpdateWithoutBundleMiscsInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutBundleMiscsInput>;
};

export type AttributeValueUpdateOneWithoutCategoryHeaderAttributeValueInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
  create?: InputMaybe<AttributeValueCreateWithoutCategoryHeaderAttributeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeValueUpdateWithoutCategoryHeaderAttributeValueInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutCategoryHeaderAttributeValueInput>;
};

export type AttributeValueUpdateOneWithoutCustomerEnrollmentValueInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutCustomerEnrollmentValueInput>;
  create?: InputMaybe<AttributeValueCreateWithoutCustomerEnrollmentValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeValueUpdateWithoutCustomerEnrollmentValueInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutCustomerEnrollmentValueInput>;
};

export type AttributeValueUpdateOneWithoutProductVariantsInput = {
  connect?: InputMaybe<AttributeValueWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AttributeValueCreateOrConnectWithoutProductVariantsInput>;
  create?: InputMaybe<AttributeValueCreateWithoutProductVariantsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AttributeValueUpdateWithoutProductVariantsInput>;
  upsert?: InputMaybe<AttributeValueUpsertWithoutProductVariantsInput>;
};

export type AttributeValueUpdateWithWhereUniqueWithoutAttributeInput = {
  data: AttributeValueUpdateWithoutAttributeInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueUpdateWithoutAttributeInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutAttributeValue_TlInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutBundleArrtibuteValueAssetsInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutBundleAttributeValuesInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutBundleMiscsInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutCategoryHeaderAttributeValueInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutCustomerEnrollmentValueInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutProductVariantsInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  Products?: InputMaybe<ProductAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpdateWithoutProductsInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttributeValueInput>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutAttributeValueInput>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutAttributeValueInput>;
  BundleMiscs?: InputMaybe<BundleMiscUpdateManyWithoutMiscAttributeValuesInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput>;
  additionalInfo?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValueUpsertWithWhereUniqueWithoutAttributeInput = {
  create: AttributeValueCreateWithoutAttributeInput;
  update: AttributeValueUpdateWithoutAttributeInput;
  where: AttributeValueWhereUniqueInput;
};

export type AttributeValueUpsertWithoutAttributeValue_TlInput = {
  create: AttributeValueCreateWithoutAttributeValue_TlInput;
  update: AttributeValueUpdateWithoutAttributeValue_TlInput;
};

export type AttributeValueUpsertWithoutBundleArrtibuteValueAssetsInput = {
  create: AttributeValueCreateWithoutBundleArrtibuteValueAssetsInput;
  update: AttributeValueUpdateWithoutBundleArrtibuteValueAssetsInput;
};

export type AttributeValueUpsertWithoutBundleAttributeValuesInput = {
  create: AttributeValueCreateWithoutBundleAttributeValuesInput;
  update: AttributeValueUpdateWithoutBundleAttributeValuesInput;
};

export type AttributeValueUpsertWithoutBundleMiscsInput = {
  create: AttributeValueCreateWithoutBundleMiscsInput;
  update: AttributeValueUpdateWithoutBundleMiscsInput;
};

export type AttributeValueUpsertWithoutCategoryHeaderAttributeValueInput = {
  create: AttributeValueCreateWithoutCategoryHeaderAttributeValueInput;
  update: AttributeValueUpdateWithoutCategoryHeaderAttributeValueInput;
};

export type AttributeValueUpsertWithoutCustomerEnrollmentValueInput = {
  create: AttributeValueCreateWithoutCustomerEnrollmentValueInput;
  update: AttributeValueUpdateWithoutCustomerEnrollmentValueInput;
};

export type AttributeValueUpsertWithoutProductVariantsInput = {
  create: AttributeValueCreateWithoutProductVariantsInput;
  update: AttributeValueUpdateWithoutProductVariantsInput;
};

export type AttributeValueUpsertWithoutProductsInput = {
  create: AttributeValueCreateWithoutProductsInput;
  update: AttributeValueUpdateWithoutProductsInput;
};

export type AttributeValueWhereInput = {
  AND?: InputMaybe<Array<AttributeValueWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlListRelationFilter>;
  BundleArrtibuteValueAssets?: InputMaybe<BundleArrtibuteValueAssetsListRelationFilter>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesListRelationFilter>;
  BundleMiscs?: InputMaybe<BundleMiscListRelationFilter>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueListRelationFilter>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueListRelationFilter>;
  NOT?: InputMaybe<Array<AttributeValueWhereInput>>;
  OR?: InputMaybe<Array<AttributeValueWhereInput>>;
  ProductVariants?: InputMaybe<ProductVariantAttributeValueListRelationFilter>;
  Products?: InputMaybe<ProductAttributeValueListRelationFilter>;
  additionalInfo?: InputMaybe<StringNullableFilter>;
  attributeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeValueWhereUniqueInput = {
  attributeId_name?: InputMaybe<AttributeValueAttributeIdNameCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type AttributeValue_Tl = {
  __typename?: 'AttributeValue_TL';
  AttributeValue?: Maybe<AttributeValue>;
  Language?: Maybe<Language>;
  attributeValueId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  languageId: Scalars['String'];
  name: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeValue_TlAttributeValueIdLanguageIdCompoundUniqueInput = {
  attributeValueId: Scalars['String'];
  languageId: Scalars['String'];
};

export type AttributeValue_TlCountAggregate = {
  __typename?: 'AttributeValue_TLCountAggregate';
  _all: Scalars['Int'];
  attributeValueId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  languageId: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AttributeValue_TlCreateManyAttributeValueInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  languageId: Scalars['String'];
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValue_TlCreateManyAttributeValueInputEnvelope = {
  data: Array<AttributeValue_TlCreateManyAttributeValueInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttributeValue_TlCreateManyLanguageInput = {
  attributeValueId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValue_TlCreateManyLanguageInputEnvelope = {
  data: Array<AttributeValue_TlCreateManyLanguageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttributeValue_TlCreateNestedManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeValue_TlCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<Array<AttributeValue_TlCreateWithoutAttributeValueInput>>;
  createMany?: InputMaybe<AttributeValue_TlCreateManyAttributeValueInputEnvelope>;
};

export type AttributeValue_TlCreateNestedManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeValue_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<AttributeValue_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<AttributeValue_TlCreateManyLanguageInputEnvelope>;
};

export type AttributeValue_TlCreateOrConnectWithoutAttributeValueInput = {
  create: AttributeValue_TlCreateWithoutAttributeValueInput;
  where: AttributeValue_TlWhereUniqueInput;
};

export type AttributeValue_TlCreateOrConnectWithoutLanguageInput = {
  create: AttributeValue_TlCreateWithoutLanguageInput;
  where: AttributeValue_TlWhereUniqueInput;
};

export type AttributeValue_TlCreateWithoutAttributeValueInput = {
  Language?: InputMaybe<LanguageCreateNestedOneWithoutAttributeValue_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValue_TlCreateWithoutLanguageInput = {
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutAttributeValue_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AttributeValue_TlListRelationFilter = {
  every?: InputMaybe<AttributeValue_TlWhereInput>;
  none?: InputMaybe<AttributeValue_TlWhereInput>;
  some?: InputMaybe<AttributeValue_TlWhereInput>;
};

export type AttributeValue_TlMaxAggregate = {
  __typename?: 'AttributeValue_TLMaxAggregate';
  attributeValueId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeValue_TlMinAggregate = {
  __typename?: 'AttributeValue_TLMinAggregate';
  attributeValueId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AttributeValue_TlNameLanguageIdAttributeValueIdCompoundUniqueInput =
  {
    attributeValueId: Scalars['String'];
    languageId: Scalars['String'];
    name: Scalars['String'];
  };

export type AttributeValue_TlScalarWhereInput = {
  AND?: InputMaybe<Array<AttributeValue_TlScalarWhereInput>>;
  NOT?: InputMaybe<Array<AttributeValue_TlScalarWhereInput>>;
  OR?: InputMaybe<Array<AttributeValue_TlScalarWhereInput>>;
  attributeValueId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  languageId?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeValue_TlUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValue_TlUpdateManyWithWhereWithoutAttributeValueInput = {
  data: AttributeValue_TlUpdateManyMutationInput;
  where: AttributeValue_TlScalarWhereInput;
};

export type AttributeValue_TlUpdateManyWithWhereWithoutLanguageInput = {
  data: AttributeValue_TlUpdateManyMutationInput;
  where: AttributeValue_TlScalarWhereInput;
};

export type AttributeValue_TlUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeValue_TlCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<Array<AttributeValue_TlCreateWithoutAttributeValueInput>>;
  createMany?: InputMaybe<AttributeValue_TlCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AttributeValue_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AttributeValue_TlUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<AttributeValue_TlUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<AttributeValue_TlUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type AttributeValue_TlUpdateManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<AttributeValue_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<AttributeValue_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<AttributeValue_TlCreateManyLanguageInputEnvelope>;
  delete?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AttributeValue_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<AttributeValue_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<AttributeValue_TlUpdateWithWhereUniqueWithoutLanguageInput>
  >;
  updateMany?: InputMaybe<
    Array<AttributeValue_TlUpdateManyWithWhereWithoutLanguageInput>
  >;
  upsert?: InputMaybe<
    Array<AttributeValue_TlUpsertWithWhereUniqueWithoutLanguageInput>
  >;
};

export type AttributeValue_TlUpdateWithWhereUniqueWithoutAttributeValueInput = {
  data: AttributeValue_TlUpdateWithoutAttributeValueInput;
  where: AttributeValue_TlWhereUniqueInput;
};

export type AttributeValue_TlUpdateWithWhereUniqueWithoutLanguageInput = {
  data: AttributeValue_TlUpdateWithoutLanguageInput;
  where: AttributeValue_TlWhereUniqueInput;
};

export type AttributeValue_TlUpdateWithoutAttributeValueInput = {
  Language?: InputMaybe<LanguageUpdateOneWithoutAttributeValue_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValue_TlUpdateWithoutLanguageInput = {
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutAttributeValue_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeValue_TlUpsertWithWhereUniqueWithoutAttributeValueInput = {
  create: AttributeValue_TlCreateWithoutAttributeValueInput;
  update: AttributeValue_TlUpdateWithoutAttributeValueInput;
  where: AttributeValue_TlWhereUniqueInput;
};

export type AttributeValue_TlUpsertWithWhereUniqueWithoutLanguageInput = {
  create: AttributeValue_TlCreateWithoutLanguageInput;
  update: AttributeValue_TlUpdateWithoutLanguageInput;
  where: AttributeValue_TlWhereUniqueInput;
};

export type AttributeValue_TlWhereInput = {
  AND?: InputMaybe<Array<AttributeValue_TlWhereInput>>;
  AttributeValue?: InputMaybe<AttributeValueRelationFilter>;
  Language?: InputMaybe<LanguageRelationFilter>;
  NOT?: InputMaybe<Array<AttributeValue_TlWhereInput>>;
  OR?: InputMaybe<Array<AttributeValue_TlWhereInput>>;
  attributeValueId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  languageId?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeValue_TlWhereUniqueInput = {
  attributeValueId_languageId?: InputMaybe<AttributeValue_TlAttributeValueIdLanguageIdCompoundUniqueInput>;
  name_languageId_attributeValueId?: InputMaybe<AttributeValue_TlNameLanguageIdAttributeValueIdCompoundUniqueInput>;
};

export type AttributeWhereInput = {
  AND?: InputMaybe<Array<AttributeWhereInput>>;
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueListRelationFilter>;
  AttributeType?: InputMaybe<AttributeTypeRelationFilter>;
  AttributeValue?: InputMaybe<AttributeValueListRelationFilter>;
  Attribute_TL?: InputMaybe<Attribute_TlListRelationFilter>;
  CategoryAttribute?: InputMaybe<CategoryAttributeListRelationFilter>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueListRelationFilter>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueListRelationFilter>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeListRelationFilter>;
  NOT?: InputMaybe<Array<AttributeWhereInput>>;
  OR?: InputMaybe<Array<AttributeWhereInput>>;
  ProductCustomAttributeValues?: InputMaybe<ProductCustomAttributeValueListRelationFilter>;
  ProductVariantAttributeValue?: InputMaybe<ProductVariantAttributeValueListRelationFilter>;
  attributeTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AttributeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Attribute_Tl = {
  __typename?: 'Attribute_TL';
  Attribute?: Maybe<Attribute>;
  Language?: Maybe<Language>;
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type Attribute_TlCountAggregate = {
  __typename?: 'Attribute_TLCountAggregate';
  _all: Scalars['Int'];
  attributeId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  languageId: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type Attribute_TlCreateManyAttributeInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  languageId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Attribute_TlCreateManyAttributeInputEnvelope = {
  data: Array<Attribute_TlCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type Attribute_TlCreateManyLanguageInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Attribute_TlCreateManyLanguageInputEnvelope = {
  data: Array<Attribute_TlCreateManyLanguageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type Attribute_TlCreateNestedManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Attribute_TlCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<Attribute_TlCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<Attribute_TlCreateManyAttributeInputEnvelope>;
};

export type Attribute_TlCreateNestedManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Attribute_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<Attribute_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<Attribute_TlCreateManyLanguageInputEnvelope>;
};

export type Attribute_TlCreateOrConnectWithoutAttributeInput = {
  create: Attribute_TlCreateWithoutAttributeInput;
  where: Attribute_TlWhereUniqueInput;
};

export type Attribute_TlCreateOrConnectWithoutLanguageInput = {
  create: Attribute_TlCreateWithoutLanguageInput;
  where: Attribute_TlWhereUniqueInput;
};

export type Attribute_TlCreateWithoutAttributeInput = {
  Language?: InputMaybe<LanguageCreateNestedOneWithoutAttribute_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Attribute_TlCreateWithoutLanguageInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutAttribute_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Attribute_TlListRelationFilter = {
  every?: InputMaybe<Attribute_TlWhereInput>;
  none?: InputMaybe<Attribute_TlWhereInput>;
  some?: InputMaybe<Attribute_TlWhereInput>;
};

export type Attribute_TlMaxAggregate = {
  __typename?: 'Attribute_TLMaxAggregate';
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type Attribute_TlMinAggregate = {
  __typename?: 'Attribute_TLMinAggregate';
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type Attribute_TlNameLanguageIdAttributeIdCompoundUniqueInput = {
  attributeId: Scalars['String'];
  languageId: Scalars['String'];
  name: Scalars['String'];
};

export type Attribute_TlScalarWhereInput = {
  AND?: InputMaybe<Array<Attribute_TlScalarWhereInput>>;
  NOT?: InputMaybe<Array<Attribute_TlScalarWhereInput>>;
  OR?: InputMaybe<Array<Attribute_TlScalarWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  languageId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type Attribute_TlUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Attribute_TlUpdateManyWithWhereWithoutAttributeInput = {
  data: Attribute_TlUpdateManyMutationInput;
  where: Attribute_TlScalarWhereInput;
};

export type Attribute_TlUpdateManyWithWhereWithoutLanguageInput = {
  data: Attribute_TlUpdateManyMutationInput;
  where: Attribute_TlScalarWhereInput;
};

export type Attribute_TlUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Attribute_TlCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<Attribute_TlCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<Attribute_TlCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<Attribute_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<Attribute_TlUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<Attribute_TlUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<Attribute_TlUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type Attribute_TlUpdateManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Attribute_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<Attribute_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<Attribute_TlCreateManyLanguageInputEnvelope>;
  delete?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<Attribute_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<Attribute_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<Attribute_TlUpdateWithWhereUniqueWithoutLanguageInput>
  >;
  updateMany?: InputMaybe<
    Array<Attribute_TlUpdateManyWithWhereWithoutLanguageInput>
  >;
  upsert?: InputMaybe<
    Array<Attribute_TlUpsertWithWhereUniqueWithoutLanguageInput>
  >;
};

export type Attribute_TlUpdateWithWhereUniqueWithoutAttributeInput = {
  data: Attribute_TlUpdateWithoutAttributeInput;
  where: Attribute_TlWhereUniqueInput;
};

export type Attribute_TlUpdateWithWhereUniqueWithoutLanguageInput = {
  data: Attribute_TlUpdateWithoutLanguageInput;
  where: Attribute_TlWhereUniqueInput;
};

export type Attribute_TlUpdateWithoutAttributeInput = {
  Language?: InputMaybe<LanguageUpdateOneWithoutAttribute_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Attribute_TlUpdateWithoutLanguageInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutAttribute_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Attribute_TlUpsertWithWhereUniqueWithoutAttributeInput = {
  create: Attribute_TlCreateWithoutAttributeInput;
  update: Attribute_TlUpdateWithoutAttributeInput;
  where: Attribute_TlWhereUniqueInput;
};

export type Attribute_TlUpsertWithWhereUniqueWithoutLanguageInput = {
  create: Attribute_TlCreateWithoutLanguageInput;
  update: Attribute_TlUpdateWithoutLanguageInput;
  where: Attribute_TlWhereUniqueInput;
};

export type Attribute_TlWhereInput = {
  AND?: InputMaybe<Array<Attribute_TlWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  Language?: InputMaybe<LanguageRelationFilter>;
  NOT?: InputMaybe<Array<Attribute_TlWhereInput>>;
  OR?: InputMaybe<Array<Attribute_TlWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  languageId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type Attribute_TlWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name_languageId_attributeId?: InputMaybe<Attribute_TlNameLanguageIdAttributeIdCompoundUniqueInput>;
};

export type Audit = {
  __typename?: 'Audit';
  AuditDetail?: Maybe<Array<AuditDetail>>;
  AuditField?: Maybe<AuditField>;
  _count: AuditCount;
  auditFieldId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  previousValue?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditCount = {
  __typename?: 'AuditCount';
  AuditDetail: Scalars['Int'];
};

export type AuditCountAggregate = {
  __typename?: 'AuditCountAggregate';
  _all: Scalars['Int'];
  auditFieldId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  previousValue: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AuditDetail = {
  __typename?: 'AuditDetail';
  Audit?: Maybe<Audit>;
  auditId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  entityState?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  keyValues?: Maybe<Scalars['String']>;
  newValues?: Maybe<Scalars['String']>;
  oldValues?: Maybe<Scalars['String']>;
  referenceKeyValues?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditDetailCountAggregate = {
  __typename?: 'AuditDetailCountAggregate';
  _all: Scalars['Int'];
  auditId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  entityState: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  keyValues: Scalars['Int'];
  newValues: Scalars['Int'];
  oldValues: Scalars['Int'];
  referenceKeyValues: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AuditDetailMaxAggregate = {
  __typename?: 'AuditDetailMaxAggregate';
  auditId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  entityState?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  keyValues?: Maybe<Scalars['String']>;
  newValues?: Maybe<Scalars['String']>;
  oldValues?: Maybe<Scalars['String']>;
  referenceKeyValues?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditDetailMinAggregate = {
  __typename?: 'AuditDetailMinAggregate';
  auditId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  entityState?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  keyValues?: Maybe<Scalars['String']>;
  newValues?: Maybe<Scalars['String']>;
  oldValues?: Maybe<Scalars['String']>;
  referenceKeyValues?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditField = {
  __typename?: 'AuditField';
  Audit?: Maybe<Array<Audit>>;
  AuditTable?: Maybe<AuditTable>;
  _count: AuditFieldCount;
  auditTableId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditFieldCount = {
  __typename?: 'AuditFieldCount';
  Audit: Scalars['Int'];
};

export type AuditFieldCountAggregate = {
  __typename?: 'AuditFieldCountAggregate';
  _all: Scalars['Int'];
  auditTableId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AuditFieldMaxAggregate = {
  __typename?: 'AuditFieldMaxAggregate';
  auditTableId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditFieldMinAggregate = {
  __typename?: 'AuditFieldMinAggregate';
  auditTableId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditMaxAggregate = {
  __typename?: 'AuditMaxAggregate';
  auditFieldId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  previousValue?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditMinAggregate = {
  __typename?: 'AuditMinAggregate';
  auditFieldId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  previousValue?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditTable = {
  __typename?: 'AuditTable';
  AuditField?: Maybe<Array<AuditField>>;
  _count: AuditTableCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditTableCount = {
  __typename?: 'AuditTableCount';
  AuditField: Scalars['Int'];
};

export type AuditTableCountAggregate = {
  __typename?: 'AuditTableCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AuditTableMaxAggregate = {
  __typename?: 'AuditTableMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuditTableMinAggregate = {
  __typename?: 'AuditTableMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuthLoginInput = {
  email: Scalars['String'];
  password: Scalars['String'];
};

export type AuthenticationStrategy = {
  __typename?: 'AuthenticationStrategy';
  UserSession?: Maybe<Array<Session>>;
  Users?: Maybe<Array<UserAuthenticationStrategy>>;
  _count: AuthenticationStrategyCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  provider: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuthenticationStrategyCount = {
  __typename?: 'AuthenticationStrategyCount';
  UserSession: Scalars['Int'];
  Users: Scalars['Int'];
};

export type AuthenticationStrategyCountAggregate = {
  __typename?: 'AuthenticationStrategyCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  provider: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type AuthenticationStrategyCreateNestedOneWithoutUserSessionInput = {
  connect?: InputMaybe<AuthenticationStrategyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AuthenticationStrategyCreateOrConnectWithoutUserSessionInput>;
  create?: InputMaybe<AuthenticationStrategyCreateWithoutUserSessionInput>;
};

export type AuthenticationStrategyCreateNestedOneWithoutUsersInput = {
  connect?: InputMaybe<AuthenticationStrategyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AuthenticationStrategyCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<AuthenticationStrategyCreateWithoutUsersInput>;
};

export type AuthenticationStrategyCreateOrConnectWithoutUserSessionInput = {
  create: AuthenticationStrategyCreateWithoutUserSessionInput;
  where: AuthenticationStrategyWhereUniqueInput;
};

export type AuthenticationStrategyCreateOrConnectWithoutUsersInput = {
  create: AuthenticationStrategyCreateWithoutUsersInput;
  where: AuthenticationStrategyWhereUniqueInput;
};

export type AuthenticationStrategyCreateWithoutUserSessionInput = {
  Users?: InputMaybe<UserAuthenticationStrategyCreateNestedManyWithoutAuthenticationStrategyInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  provider: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AuthenticationStrategyCreateWithoutUsersInput = {
  UserSession?: InputMaybe<SessionCreateNestedManyWithoutAuthenticationStrategyInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  provider: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type AuthenticationStrategyMaxAggregate = {
  __typename?: 'AuthenticationStrategyMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  provider?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuthenticationStrategyMinAggregate = {
  __typename?: 'AuthenticationStrategyMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  provider?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type AuthenticationStrategyRelationFilter = {
  is?: InputMaybe<AuthenticationStrategyWhereInput>;
  isNot?: InputMaybe<AuthenticationStrategyWhereInput>;
};

export type AuthenticationStrategyUpdateOneRequiredWithoutUsersInput = {
  connect?: InputMaybe<AuthenticationStrategyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AuthenticationStrategyCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<AuthenticationStrategyCreateWithoutUsersInput>;
  update?: InputMaybe<AuthenticationStrategyUpdateWithoutUsersInput>;
  upsert?: InputMaybe<AuthenticationStrategyUpsertWithoutUsersInput>;
};

export type AuthenticationStrategyUpdateOneWithoutUserSessionInput = {
  connect?: InputMaybe<AuthenticationStrategyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AuthenticationStrategyCreateOrConnectWithoutUserSessionInput>;
  create?: InputMaybe<AuthenticationStrategyCreateWithoutUserSessionInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AuthenticationStrategyUpdateWithoutUserSessionInput>;
  upsert?: InputMaybe<AuthenticationStrategyUpsertWithoutUserSessionInput>;
};

export type AuthenticationStrategyUpdateWithoutUserSessionInput = {
  Users?: InputMaybe<UserAuthenticationStrategyUpdateManyWithoutAuthenticationStrategyInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  provider?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AuthenticationStrategyUpdateWithoutUsersInput = {
  UserSession?: InputMaybe<SessionUpdateManyWithoutAuthenticationStrategyInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  provider?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AuthenticationStrategyUpsertWithoutUserSessionInput = {
  create: AuthenticationStrategyCreateWithoutUserSessionInput;
  update: AuthenticationStrategyUpdateWithoutUserSessionInput;
};

export type AuthenticationStrategyUpsertWithoutUsersInput = {
  create: AuthenticationStrategyCreateWithoutUsersInput;
  update: AuthenticationStrategyUpdateWithoutUsersInput;
};

export type AuthenticationStrategyWhereInput = {
  AND?: InputMaybe<Array<AuthenticationStrategyWhereInput>>;
  NOT?: InputMaybe<Array<AuthenticationStrategyWhereInput>>;
  OR?: InputMaybe<Array<AuthenticationStrategyWhereInput>>;
  UserSession?: InputMaybe<SessionListRelationFilter>;
  Users?: InputMaybe<UserAuthenticationStrategyListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  provider?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type AuthenticationStrategyWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  provider?: InputMaybe<Scalars['String']>;
};

export type BoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type Brand = {
  __typename?: 'Brand';
  BrandAsset?: Maybe<Array<BrandAsset>>;
  BrandRelation?: Maybe<BrandRelation>;
  Customer?: Maybe<Customer>;
  GeoLocationZone?: Maybe<GeoLocationZone>;
  Geolocations?: Maybe<Array<BrandGeolocation>>;
  Products?: Maybe<Array<Product>>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  _count: BrandCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  decription?: Maybe<Scalars['String']>;
  geoLocationZoneId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  relationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type BrandAsset = {
  __typename?: 'BrandAsset';
  Asset?: Maybe<Asset>;
  Brand?: Maybe<Brand>;
  assetId: Scalars['String'];
  brandId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandAssetBrandIdAssetIdCompoundUniqueInput = {
  assetId: Scalars['String'];
  brandId: Scalars['String'];
};

export type BrandAssetCountAggregate = {
  __typename?: 'BrandAssetCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  brandId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  internalName: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BrandAssetCreateManyBrandInput = {
  assetId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandAssetCreateManyBrandInputEnvelope = {
  data: Array<BrandAssetCreateManyBrandInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BrandAssetCreateNestedManyWithoutBrandInput = {
  connect?: InputMaybe<Array<BrandAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandAssetCreateOrConnectWithoutBrandInput>
  >;
  create?: InputMaybe<Array<BrandAssetCreateWithoutBrandInput>>;
  createMany?: InputMaybe<BrandAssetCreateManyBrandInputEnvelope>;
};

export type BrandAssetCreateNestedOneWithoutAssetInput = {
  connect?: InputMaybe<BrandAssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandAssetCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<BrandAssetCreateWithoutAssetInput>;
};

export type BrandAssetCreateOrConnectWithoutAssetInput = {
  create: BrandAssetCreateWithoutAssetInput;
  where: BrandAssetWhereUniqueInput;
};

export type BrandAssetCreateOrConnectWithoutBrandInput = {
  create: BrandAssetCreateWithoutBrandInput;
  where: BrandAssetWhereUniqueInput;
};

export type BrandAssetCreateWithoutAssetInput = {
  Brand?: InputMaybe<BrandCreateNestedOneWithoutBrandAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandAssetCreateWithoutBrandInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutBrandAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandAssetListRelationFilter = {
  every?: InputMaybe<BrandAssetWhereInput>;
  none?: InputMaybe<BrandAssetWhereInput>;
  some?: InputMaybe<BrandAssetWhereInput>;
};

export type BrandAssetMaxAggregate = {
  __typename?: 'BrandAssetMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  brandId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandAssetMinAggregate = {
  __typename?: 'BrandAssetMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  brandId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandAssetOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BrandAssetOrderByWithRelationInput = {
  Asset?: InputMaybe<AssetOrderByWithRelationInput>;
  Brand?: InputMaybe<BrandOrderByWithRelationInput>;
  assetId?: InputMaybe<SortOrder>;
  brandId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  internalName?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type BrandAssetRelationFilter = {
  is?: InputMaybe<BrandAssetWhereInput>;
  isNot?: InputMaybe<BrandAssetWhereInput>;
};

export type BrandAssetScalarWhereInput = {
  AND?: InputMaybe<Array<BrandAssetScalarWhereInput>>;
  NOT?: InputMaybe<Array<BrandAssetScalarWhereInput>>;
  OR?: InputMaybe<Array<BrandAssetScalarWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  brandId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BrandAssetUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandAssetUpdateManyWithWhereWithoutBrandInput = {
  data: BrandAssetUpdateManyMutationInput;
  where: BrandAssetScalarWhereInput;
};

export type BrandAssetUpdateManyWithoutBrandInput = {
  connect?: InputMaybe<Array<BrandAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandAssetCreateOrConnectWithoutBrandInput>
  >;
  create?: InputMaybe<Array<BrandAssetCreateWithoutBrandInput>>;
  createMany?: InputMaybe<BrandAssetCreateManyBrandInputEnvelope>;
  delete?: InputMaybe<Array<BrandAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BrandAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BrandAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<BrandAssetWhereUniqueInput>>;
  update?: InputMaybe<Array<BrandAssetUpdateWithWhereUniqueWithoutBrandInput>>;
  updateMany?: InputMaybe<
    Array<BrandAssetUpdateManyWithWhereWithoutBrandInput>
  >;
  upsert?: InputMaybe<Array<BrandAssetUpsertWithWhereUniqueWithoutBrandInput>>;
};

export type BrandAssetUpdateOneWithoutAssetInput = {
  connect?: InputMaybe<BrandAssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandAssetCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<BrandAssetCreateWithoutAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BrandAssetUpdateWithoutAssetInput>;
  upsert?: InputMaybe<BrandAssetUpsertWithoutAssetInput>;
};

export type BrandAssetUpdateWithWhereUniqueWithoutBrandInput = {
  data: BrandAssetUpdateWithoutBrandInput;
  where: BrandAssetWhereUniqueInput;
};

export type BrandAssetUpdateWithoutAssetInput = {
  Brand?: InputMaybe<BrandUpdateOneWithoutBrandAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandAssetUpdateWithoutBrandInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutBrandAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandAssetUpsertWithWhereUniqueWithoutBrandInput = {
  create: BrandAssetCreateWithoutBrandInput;
  update: BrandAssetUpdateWithoutBrandInput;
  where: BrandAssetWhereUniqueInput;
};

export type BrandAssetUpsertWithoutAssetInput = {
  create: BrandAssetCreateWithoutAssetInput;
  update: BrandAssetUpdateWithoutAssetInput;
};

export type BrandAssetWhereInput = {
  AND?: InputMaybe<Array<BrandAssetWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  Brand?: InputMaybe<BrandRelationFilter>;
  NOT?: InputMaybe<Array<BrandAssetWhereInput>>;
  OR?: InputMaybe<Array<BrandAssetWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  brandId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BrandAssetWhereUniqueInput = {
  assetId?: InputMaybe<Scalars['String']>;
  brandId_assetId?: InputMaybe<BrandAssetBrandIdAssetIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type BrandCount = {
  __typename?: 'BrandCount';
  BrandAsset: Scalars['Int'];
  Geolocations: Scalars['Int'];
  Products: Scalars['Int'];
};

export type BrandCountAggregate = {
  __typename?: 'BrandCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  decription: Scalars['Int'];
  geoLocationZoneId: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isGeoRestricted: Scalars['Int'];
  isPriceVisible: Scalars['Int'];
  isRemoved: Scalars['Int'];
  logoAssetId: Scalars['Int'];
  name: Scalars['Int'];
  relationId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workFlowContextInstanceId: Scalars['Int'];
};

export type BrandCreateInput = {
  BrandRelation?: InputMaybe<BrandRelationCreateNestedOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutBrandInput>;
  assetFile: Array<FileInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  relationId?: InputMaybe<Scalars['String']>;
  relationshiptype?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandCreateManyCustomerInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  geoLocationZoneId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  relationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
};

export type BrandCreateManyCustomerInputEnvelope = {
  data: Array<BrandCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BrandCreateManyGeoLocationZoneInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  relationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
};

export type BrandCreateManyGeoLocationZoneInputEnvelope = {
  data: Array<BrandCreateManyGeoLocationZoneInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BrandCreateManyWorkFlowContextInstanceInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  geoLocationZoneId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  relationId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandCreateManyWorkFlowContextInstanceInputEnvelope = {
  data: Array<BrandCreateManyWorkFlowContextInstanceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BrandCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BrandCreateOrConnectWithoutCustomerInput>>;
  create?: InputMaybe<Array<BrandCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<BrandCreateManyCustomerInputEnvelope>;
};

export type BrandCreateNestedManyWithoutGeoLocationZoneInput = {
  connect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandCreateOrConnectWithoutGeoLocationZoneInput>
  >;
  create?: InputMaybe<Array<BrandCreateWithoutGeoLocationZoneInput>>;
  createMany?: InputMaybe<BrandCreateManyGeoLocationZoneInputEnvelope>;
};

export type BrandCreateNestedManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<BrandCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<BrandCreateManyWorkFlowContextInstanceInputEnvelope>;
};

export type BrandCreateNestedOneWithoutBrandAssetInput = {
  connect?: InputMaybe<BrandWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandCreateOrConnectWithoutBrandAssetInput>;
  create?: InputMaybe<BrandCreateWithoutBrandAssetInput>;
};

export type BrandCreateNestedOneWithoutGeolocationsInput = {
  connect?: InputMaybe<BrandWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandCreateOrConnectWithoutGeolocationsInput>;
  create?: InputMaybe<BrandCreateWithoutGeolocationsInput>;
};

export type BrandCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<BrandWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<BrandCreateWithoutProductsInput>;
};

export type BrandCreateOrConnectWithoutBrandAssetInput = {
  create: BrandCreateWithoutBrandAssetInput;
  where: BrandWhereUniqueInput;
};

export type BrandCreateOrConnectWithoutCustomerInput = {
  create: BrandCreateWithoutCustomerInput;
  where: BrandWhereUniqueInput;
};

export type BrandCreateOrConnectWithoutGeoLocationZoneInput = {
  create: BrandCreateWithoutGeoLocationZoneInput;
  where: BrandWhereUniqueInput;
};

export type BrandCreateOrConnectWithoutGeolocationsInput = {
  create: BrandCreateWithoutGeolocationsInput;
  where: BrandWhereUniqueInput;
};

export type BrandCreateOrConnectWithoutProductsInput = {
  create: BrandCreateWithoutProductsInput;
  where: BrandWhereUniqueInput;
};

export type BrandCreateOrConnectWithoutWorkFlowContextInstanceInput = {
  create: BrandCreateWithoutWorkFlowContextInstanceInput;
  where: BrandWhereUniqueInput;
};

export type BrandCreateWithoutBrandAssetInput = {
  BrandRelation?: InputMaybe<BrandRelationCreateNestedOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationCreateNestedManyWithoutBrandInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutBrandInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandCreateWithoutCustomerInput = {
  BrandAsset?: InputMaybe<BrandAssetCreateNestedManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationCreateNestedOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationCreateNestedManyWithoutBrandInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutBrandInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandCreateWithoutGeoLocationZoneInput = {
  BrandAsset?: InputMaybe<BrandAssetCreateNestedManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationCreateNestedOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationCreateNestedManyWithoutBrandInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutBrandInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandCreateWithoutGeolocationsInput = {
  BrandAsset?: InputMaybe<BrandAssetCreateNestedManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationCreateNestedOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutBrandInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutBrandInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandCreateWithoutProductsInput = {
  BrandAsset?: InputMaybe<BrandAssetCreateNestedManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationCreateNestedOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationCreateNestedManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutBrandInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandCreateWithoutWorkFlowContextInstanceInput = {
  BrandAsset?: InputMaybe<BrandAssetCreateNestedManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationCreateNestedOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationCreateNestedManyWithoutBrandInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutBrandInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  decription?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandGeoLocationAttributeArray = {
  geolocationId: Scalars['String'];
  isInclude?: InputMaybe<Scalars['Boolean']>;
};

export type BrandGeoLocationInputDto = {
  Geolocation: Array<BrandGeoLocationAttributeArray>;
  brandId: Scalars['String'];
};

export type BrandGeolocation = {
  __typename?: 'BrandGeolocation';
  Brand?: Maybe<Brand>;
  GeoLocation?: Maybe<GeoLocation>;
  brandId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  geoLocationId: Scalars['String'];
  isInclude?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandGeolocationBrandIdGeoLocationIdCompoundUniqueInput = {
  brandId: Scalars['String'];
  geoLocationId: Scalars['String'];
};

export type BrandGeolocationCountAggregate = {
  __typename?: 'BrandGeolocationCountAggregate';
  _all: Scalars['Int'];
  brandId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  geoLocationId: Scalars['Int'];
  isInclude: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BrandGeolocationCreateManyBrandInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  geoLocationId: Scalars['String'];
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandGeolocationCreateManyBrandInputEnvelope = {
  data: Array<BrandGeolocationCreateManyBrandInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BrandGeolocationCreateManyGeoLocationInput = {
  brandId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandGeolocationCreateManyGeoLocationInputEnvelope = {
  data: Array<BrandGeolocationCreateManyGeoLocationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BrandGeolocationCreateNestedManyWithoutBrandInput = {
  connect?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandGeolocationCreateOrConnectWithoutBrandInput>
  >;
  create?: InputMaybe<Array<BrandGeolocationCreateWithoutBrandInput>>;
  createMany?: InputMaybe<BrandGeolocationCreateManyBrandInputEnvelope>;
};

export type BrandGeolocationCreateNestedManyWithoutGeoLocationInput = {
  connect?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandGeolocationCreateOrConnectWithoutGeoLocationInput>
  >;
  create?: InputMaybe<Array<BrandGeolocationCreateWithoutGeoLocationInput>>;
  createMany?: InputMaybe<BrandGeolocationCreateManyGeoLocationInputEnvelope>;
};

export type BrandGeolocationCreateOrConnectWithoutBrandInput = {
  create: BrandGeolocationCreateWithoutBrandInput;
  where: BrandGeolocationWhereUniqueInput;
};

export type BrandGeolocationCreateOrConnectWithoutGeoLocationInput = {
  create: BrandGeolocationCreateWithoutGeoLocationInput;
  where: BrandGeolocationWhereUniqueInput;
};

export type BrandGeolocationCreateWithoutBrandInput = {
  GeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutBrandsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandGeolocationCreateWithoutGeoLocationInput = {
  Brand?: InputMaybe<BrandCreateNestedOneWithoutGeolocationsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandGeolocationListRelationFilter = {
  every?: InputMaybe<BrandGeolocationWhereInput>;
  none?: InputMaybe<BrandGeolocationWhereInput>;
  some?: InputMaybe<BrandGeolocationWhereInput>;
};

export type BrandGeolocationMaxAggregate = {
  __typename?: 'BrandGeolocationMaxAggregate';
  brandId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  isInclude?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandGeolocationMinAggregate = {
  __typename?: 'BrandGeolocationMinAggregate';
  brandId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  isInclude?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandGeolocationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BrandGeolocationScalarWhereInput = {
  AND?: InputMaybe<Array<BrandGeolocationScalarWhereInput>>;
  NOT?: InputMaybe<Array<BrandGeolocationScalarWhereInput>>;
  OR?: InputMaybe<Array<BrandGeolocationScalarWhereInput>>;
  brandId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  geoLocationId?: InputMaybe<StringFilter>;
  isInclude?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BrandGeolocationUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandGeolocationUpdateManyWithWhereWithoutBrandInput = {
  data: BrandGeolocationUpdateManyMutationInput;
  where: BrandGeolocationScalarWhereInput;
};

export type BrandGeolocationUpdateManyWithWhereWithoutGeoLocationInput = {
  data: BrandGeolocationUpdateManyMutationInput;
  where: BrandGeolocationScalarWhereInput;
};

export type BrandGeolocationUpdateManyWithoutBrandInput = {
  connect?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandGeolocationCreateOrConnectWithoutBrandInput>
  >;
  create?: InputMaybe<Array<BrandGeolocationCreateWithoutBrandInput>>;
  createMany?: InputMaybe<BrandGeolocationCreateManyBrandInputEnvelope>;
  delete?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BrandGeolocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  set?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BrandGeolocationUpdateWithWhereUniqueWithoutBrandInput>
  >;
  updateMany?: InputMaybe<
    Array<BrandGeolocationUpdateManyWithWhereWithoutBrandInput>
  >;
  upsert?: InputMaybe<
    Array<BrandGeolocationUpsertWithWhereUniqueWithoutBrandInput>
  >;
};

export type BrandGeolocationUpdateManyWithoutGeoLocationInput = {
  connect?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandGeolocationCreateOrConnectWithoutGeoLocationInput>
  >;
  create?: InputMaybe<Array<BrandGeolocationCreateWithoutGeoLocationInput>>;
  createMany?: InputMaybe<BrandGeolocationCreateManyGeoLocationInputEnvelope>;
  delete?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BrandGeolocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  set?: InputMaybe<Array<BrandGeolocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BrandGeolocationUpdateWithWhereUniqueWithoutGeoLocationInput>
  >;
  updateMany?: InputMaybe<
    Array<BrandGeolocationUpdateManyWithWhereWithoutGeoLocationInput>
  >;
  upsert?: InputMaybe<
    Array<BrandGeolocationUpsertWithWhereUniqueWithoutGeoLocationInput>
  >;
};

export type BrandGeolocationUpdateWithWhereUniqueWithoutBrandInput = {
  data: BrandGeolocationUpdateWithoutBrandInput;
  where: BrandGeolocationWhereUniqueInput;
};

export type BrandGeolocationUpdateWithWhereUniqueWithoutGeoLocationInput = {
  data: BrandGeolocationUpdateWithoutGeoLocationInput;
  where: BrandGeolocationWhereUniqueInput;
};

export type BrandGeolocationUpdateWithoutBrandInput = {
  GeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutBrandsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandGeolocationUpdateWithoutGeoLocationInput = {
  Brand?: InputMaybe<BrandUpdateOneWithoutGeolocationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandGeolocationUpsertWithWhereUniqueWithoutBrandInput = {
  create: BrandGeolocationCreateWithoutBrandInput;
  update: BrandGeolocationUpdateWithoutBrandInput;
  where: BrandGeolocationWhereUniqueInput;
};

export type BrandGeolocationUpsertWithWhereUniqueWithoutGeoLocationInput = {
  create: BrandGeolocationCreateWithoutGeoLocationInput;
  update: BrandGeolocationUpdateWithoutGeoLocationInput;
  where: BrandGeolocationWhereUniqueInput;
};

export type BrandGeolocationWhereInput = {
  AND?: InputMaybe<Array<BrandGeolocationWhereInput>>;
  Brand?: InputMaybe<BrandRelationFilter>;
  GeoLocation?: InputMaybe<GeoLocationRelationFilter>;
  NOT?: InputMaybe<Array<BrandGeolocationWhereInput>>;
  OR?: InputMaybe<Array<BrandGeolocationWhereInput>>;
  brandId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  geoLocationId?: InputMaybe<StringFilter>;
  isInclude?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BrandGeolocationWhereUniqueInput = {
  brandId_geoLocationId?: InputMaybe<BrandGeolocationBrandIdGeoLocationIdCompoundUniqueInput>;
};

export type BrandListDto = {
  __typename?: 'BrandListDTO';
  BrandRelation?: Maybe<BrandRelation>;
  Customer?: Maybe<Customer>;
  GeoLocationZone?: Maybe<GeoLocationZone>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  decription?: Maybe<Scalars['String']>;
  geoLocationZoneId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  logoURL?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  rating?: Maybe<Scalars['Float']>;
  relationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type BrandListRelationFilter = {
  every?: InputMaybe<BrandWhereInput>;
  none?: InputMaybe<BrandWhereInput>;
  some?: InputMaybe<BrandWhereInput>;
};

export type BrandMaxAggregate = {
  __typename?: 'BrandMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  decription?: Maybe<Scalars['String']>;
  geoLocationZoneId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  relationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type BrandMinAggregate = {
  __typename?: 'BrandMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  decription?: Maybe<Scalars['String']>;
  geoLocationZoneId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  relationId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type BrandOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BrandOrderByWithRelationInput = {
  BrandAsset?: InputMaybe<BrandAssetOrderByRelationAggregateInput>;
  BrandRelation?: InputMaybe<BrandRelationOrderByWithRelationInput>;
  Customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneOrderByWithRelationInput>;
  Geolocations?: InputMaybe<BrandGeolocationOrderByRelationAggregateInput>;
  Products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceOrderByWithRelationInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  decription?: InputMaybe<SortOrder>;
  geoLocationZoneId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isGeoRestricted?: InputMaybe<SortOrder>;
  isPriceVisible?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  logoAssetId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  relationId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
  workFlowContextInstanceId?: InputMaybe<SortOrder>;
};

export type BrandOrderByWithRelationInputDto = {
  createdAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type BrandRelation = {
  __typename?: 'BrandRelation';
  Brand?: Maybe<Array<Brand>>;
  _count: BrandRelationCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandRelationCount = {
  __typename?: 'BrandRelationCount';
  Brand: Scalars['Int'];
};

export type BrandRelationCountAggregate = {
  __typename?: 'BrandRelationCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BrandRelationCreateNestedOneWithoutBrandInput = {
  connect?: InputMaybe<BrandRelationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandRelationCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<BrandRelationCreateWithoutBrandInput>;
};

export type BrandRelationCreateOrConnectWithoutBrandInput = {
  create: BrandRelationCreateWithoutBrandInput;
  where: BrandRelationWhereUniqueInput;
};

export type BrandRelationCreateWithoutBrandInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BrandRelationFilter = {
  is?: InputMaybe<BrandWhereInput>;
  isNot?: InputMaybe<BrandWhereInput>;
};

export type BrandRelationMaxAggregate = {
  __typename?: 'BrandRelationMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandRelationMinAggregate = {
  __typename?: 'BrandRelationMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BrandRelationOrderByWithRelationInput = {
  Brand?: InputMaybe<BrandOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type BrandRelationRelationFilter = {
  is?: InputMaybe<BrandRelationWhereInput>;
  isNot?: InputMaybe<BrandRelationWhereInput>;
};

export type BrandRelationUpdateOneWithoutBrandInput = {
  connect?: InputMaybe<BrandRelationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandRelationCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<BrandRelationCreateWithoutBrandInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BrandRelationUpdateWithoutBrandInput>;
  upsert?: InputMaybe<BrandRelationUpsertWithoutBrandInput>;
};

export type BrandRelationUpdateWithoutBrandInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandRelationUpsertWithoutBrandInput = {
  create: BrandRelationCreateWithoutBrandInput;
  update: BrandRelationUpdateWithoutBrandInput;
};

export type BrandRelationWhereInput = {
  AND?: InputMaybe<Array<BrandRelationWhereInput>>;
  Brand?: InputMaybe<BrandListRelationFilter>;
  NOT?: InputMaybe<Array<BrandRelationWhereInput>>;
  OR?: InputMaybe<Array<BrandRelationWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BrandRelationWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type BrandScalarWhereInput = {
  AND?: InputMaybe<Array<BrandScalarWhereInput>>;
  NOT?: InputMaybe<Array<BrandScalarWhereInput>>;
  OR?: InputMaybe<Array<BrandScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  decription?: InputMaybe<StringNullableFilter>;
  geoLocationZoneId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isGeoRestricted?: InputMaybe<BoolNullableFilter>;
  isPriceVisible?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  logoAssetId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  relationId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type BrandUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandUpdateManyWithWhereWithoutCustomerInput = {
  data: BrandUpdateManyMutationInput;
  where: BrandScalarWhereInput;
};

export type BrandUpdateManyWithWhereWithoutGeoLocationZoneInput = {
  data: BrandUpdateManyMutationInput;
  where: BrandScalarWhereInput;
};

export type BrandUpdateManyWithWhereWithoutWorkFlowContextInstanceInput = {
  data: BrandUpdateManyMutationInput;
  where: BrandScalarWhereInput;
};

export type BrandUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BrandCreateOrConnectWithoutCustomerInput>>;
  create?: InputMaybe<Array<BrandCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<BrandCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<BrandWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BrandScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  set?: InputMaybe<Array<BrandWhereUniqueInput>>;
  update?: InputMaybe<Array<BrandUpdateWithWhereUniqueWithoutCustomerInput>>;
  updateMany?: InputMaybe<Array<BrandUpdateManyWithWhereWithoutCustomerInput>>;
  upsert?: InputMaybe<Array<BrandUpsertWithWhereUniqueWithoutCustomerInput>>;
};

export type BrandUpdateManyWithoutGeoLocationZoneInput = {
  connect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandCreateOrConnectWithoutGeoLocationZoneInput>
  >;
  create?: InputMaybe<Array<BrandCreateWithoutGeoLocationZoneInput>>;
  createMany?: InputMaybe<BrandCreateManyGeoLocationZoneInputEnvelope>;
  delete?: InputMaybe<Array<BrandWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BrandScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  set?: InputMaybe<Array<BrandWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BrandUpdateWithWhereUniqueWithoutGeoLocationZoneInput>
  >;
  updateMany?: InputMaybe<
    Array<BrandUpdateManyWithWhereWithoutGeoLocationZoneInput>
  >;
  upsert?: InputMaybe<
    Array<BrandUpsertWithWhereUniqueWithoutGeoLocationZoneInput>
  >;
};

export type BrandUpdateManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BrandCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<BrandCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<BrandCreateManyWorkFlowContextInstanceInputEnvelope>;
  delete?: InputMaybe<Array<BrandWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BrandScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BrandWhereUniqueInput>>;
  set?: InputMaybe<Array<BrandWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BrandUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
  updateMany?: InputMaybe<
    Array<BrandUpdateManyWithWhereWithoutWorkFlowContextInstanceInput>
  >;
  upsert?: InputMaybe<
    Array<BrandUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
};

export type BrandUpdateOneWithoutBrandAssetInput = {
  connect?: InputMaybe<BrandWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandCreateOrConnectWithoutBrandAssetInput>;
  create?: InputMaybe<BrandCreateWithoutBrandAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BrandUpdateWithoutBrandAssetInput>;
  upsert?: InputMaybe<BrandUpsertWithoutBrandAssetInput>;
};

export type BrandUpdateOneWithoutGeolocationsInput = {
  connect?: InputMaybe<BrandWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandCreateOrConnectWithoutGeolocationsInput>;
  create?: InputMaybe<BrandCreateWithoutGeolocationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BrandUpdateWithoutGeolocationsInput>;
  upsert?: InputMaybe<BrandUpsertWithoutGeolocationsInput>;
};

export type BrandUpdateOneWithoutProductsInput = {
  connect?: InputMaybe<BrandWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BrandCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<BrandCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BrandUpdateWithoutProductsInput>;
  upsert?: InputMaybe<BrandUpsertWithoutProductsInput>;
};

export type BrandUpdateWithWhereUniqueWithoutCustomerInput = {
  data: BrandUpdateWithoutCustomerInput;
  where: BrandWhereUniqueInput;
};

export type BrandUpdateWithWhereUniqueWithoutGeoLocationZoneInput = {
  data: BrandUpdateWithoutGeoLocationZoneInput;
  where: BrandWhereUniqueInput;
};

export type BrandUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  data: BrandUpdateWithoutWorkFlowContextInstanceInput;
  where: BrandWhereUniqueInput;
};

export type BrandUpdateWithoutBrandAssetInput = {
  BrandRelation?: InputMaybe<BrandRelationUpdateOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationUpdateManyWithoutBrandInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutBrandInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandUpdateWithoutCustomerInput = {
  BrandAsset?: InputMaybe<BrandAssetUpdateManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationUpdateOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationUpdateManyWithoutBrandInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutBrandInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandUpdateWithoutGeoLocationZoneInput = {
  BrandAsset?: InputMaybe<BrandAssetUpdateManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationUpdateOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationUpdateManyWithoutBrandInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutBrandInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandUpdateWithoutGeolocationsInput = {
  BrandAsset?: InputMaybe<BrandAssetUpdateManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationUpdateOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutBrandInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutBrandInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandUpdateWithoutProductsInput = {
  BrandAsset?: InputMaybe<BrandAssetUpdateManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationUpdateOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationUpdateManyWithoutBrandInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutBrandInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandUpdateWithoutWorkFlowContextInstanceInput = {
  BrandAsset?: InputMaybe<BrandAssetUpdateManyWithoutBrandInput>;
  BrandRelation?: InputMaybe<BrandRelationUpdateOneWithoutBrandInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutBrandInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutBrandInput>;
  Geolocations?: InputMaybe<BrandGeolocationUpdateManyWithoutBrandInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutBrandInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  decription?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BrandUpsertWithWhereUniqueWithoutCustomerInput = {
  create: BrandCreateWithoutCustomerInput;
  update: BrandUpdateWithoutCustomerInput;
  where: BrandWhereUniqueInput;
};

export type BrandUpsertWithWhereUniqueWithoutGeoLocationZoneInput = {
  create: BrandCreateWithoutGeoLocationZoneInput;
  update: BrandUpdateWithoutGeoLocationZoneInput;
  where: BrandWhereUniqueInput;
};

export type BrandUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  create: BrandCreateWithoutWorkFlowContextInstanceInput;
  update: BrandUpdateWithoutWorkFlowContextInstanceInput;
  where: BrandWhereUniqueInput;
};

export type BrandUpsertWithoutBrandAssetInput = {
  create: BrandCreateWithoutBrandAssetInput;
  update: BrandUpdateWithoutBrandAssetInput;
};

export type BrandUpsertWithoutGeolocationsInput = {
  create: BrandCreateWithoutGeolocationsInput;
  update: BrandUpdateWithoutGeolocationsInput;
};

export type BrandUpsertWithoutProductsInput = {
  create: BrandCreateWithoutProductsInput;
  update: BrandUpdateWithoutProductsInput;
};

export type BrandWhereInput = {
  AND?: InputMaybe<Array<BrandWhereInput>>;
  BrandAsset?: InputMaybe<BrandAssetListRelationFilter>;
  BrandRelation?: InputMaybe<BrandRelationRelationFilter>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneRelationFilter>;
  Geolocations?: InputMaybe<BrandGeolocationListRelationFilter>;
  NOT?: InputMaybe<Array<BrandWhereInput>>;
  OR?: InputMaybe<Array<BrandWhereInput>>;
  Products?: InputMaybe<ProductListRelationFilter>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  decription?: InputMaybe<StringNullableFilter>;
  geoLocationZoneId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isGeoRestricted?: InputMaybe<BoolNullableFilter>;
  isPriceVisible?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  logoAssetId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  relationId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type BrandWhereInputDto = {
  AND?: InputMaybe<Array<BrandWhereInputDto>>;
  NOT?: InputMaybe<Array<BrandWhereInputDto>>;
  OR?: InputMaybe<Array<BrandWhereInputDto>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type BrandWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Bundle = {
  __typename?: 'Bundle';
  AttributeValues?: Maybe<Array<BundleAttributeValues>>;
  BulkConfigrations?: Maybe<Array<BundleBulkConfigrations>>;
  MiscAttributeValues?: Maybe<Array<BundleMisc>>;
  Product?: Maybe<Product>;
  Varients?: Maybe<Array<BundleItem>>;
  _count: BundleCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  currentStockUnits?: Maybe<Scalars['Int']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  hsn?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mRPrice?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssets = {
  __typename?: 'BundleArrtibuteValueAssets';
  Asset?: Maybe<Asset>;
  AttributeValue?: Maybe<AttributeValue>;
  BundleAttributeValues?: Maybe<BundleAttributeValues>;
  assetId: Scalars['String'];
  attributeValueId: Scalars['String'];
  bundleAttributeValuesAttributeValueId?: Maybe<Scalars['String']>;
  bundleAttributeValuesBundleId?: Maybe<Scalars['String']>;
  bundleId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsAttributeValueIdAssetIdCompoundUniqueInput =
  {
    assetId: Scalars['String'];
    attributeValueId: Scalars['String'];
  };

export type BundleArrtibuteValueAssetsCountAggregate = {
  __typename?: 'BundleArrtibuteValueAssetsCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  attributeValueId: Scalars['Int'];
  bundleAttributeValuesAttributeValueId: Scalars['Int'];
  bundleAttributeValuesBundleId: Scalars['Int'];
  bundleId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BundleArrtibuteValueAssetsCreateManyAssetInput = {
  attributeValueId: Scalars['String'];
  bundleAttributeValuesAttributeValueId?: InputMaybe<Scalars['String']>;
  bundleAttributeValuesBundleId?: InputMaybe<Scalars['String']>;
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsCreateManyAssetInputEnvelope = {
  data: Array<BundleArrtibuteValueAssetsCreateManyAssetInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleArrtibuteValueAssetsCreateManyAttributeValueInput = {
  assetId: Scalars['String'];
  bundleAttributeValuesAttributeValueId?: InputMaybe<Scalars['String']>;
  bundleAttributeValuesBundleId?: InputMaybe<Scalars['String']>;
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsCreateManyAttributeValueInputEnvelope = {
  data: Array<BundleArrtibuteValueAssetsCreateManyAttributeValueInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleArrtibuteValueAssetsCreateManyBundleAttributeValuesInput = {
  assetId: Scalars['String'];
  attributeValueId: Scalars['String'];
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsCreateManyBundleAttributeValuesInputEnvelope =
  {
    data: Array<BundleArrtibuteValueAssetsCreateManyBundleAttributeValuesInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type BundleArrtibuteValueAssetsCreateNestedManyWithoutAssetInput = {
  connect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleArrtibuteValueAssetsCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<BundleArrtibuteValueAssetsCreateWithoutAssetInput>>;
  createMany?: InputMaybe<BundleArrtibuteValueAssetsCreateManyAssetInputEnvelope>;
};

export type BundleArrtibuteValueAssetsCreateNestedManyWithoutAttributeValueInput =
  {
    connect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<BundleArrtibuteValueAssetsCreateOrConnectWithoutAttributeValueInput>
    >;
    create?: InputMaybe<
      Array<BundleArrtibuteValueAssetsCreateWithoutAttributeValueInput>
    >;
    createMany?: InputMaybe<BundleArrtibuteValueAssetsCreateManyAttributeValueInputEnvelope>;
  };

export type BundleArrtibuteValueAssetsCreateNestedManyWithoutBundleAttributeValuesInput =
  {
    connect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<BundleArrtibuteValueAssetsCreateOrConnectWithoutBundleAttributeValuesInput>
    >;
    create?: InputMaybe<
      Array<BundleArrtibuteValueAssetsCreateWithoutBundleAttributeValuesInput>
    >;
    createMany?: InputMaybe<BundleArrtibuteValueAssetsCreateManyBundleAttributeValuesInputEnvelope>;
  };

export type BundleArrtibuteValueAssetsCreateOrConnectWithoutAssetInput = {
  create: BundleArrtibuteValueAssetsCreateWithoutAssetInput;
  where: BundleArrtibuteValueAssetsWhereUniqueInput;
};

export type BundleArrtibuteValueAssetsCreateOrConnectWithoutAttributeValueInput =
  {
    create: BundleArrtibuteValueAssetsCreateWithoutAttributeValueInput;
    where: BundleArrtibuteValueAssetsWhereUniqueInput;
  };

export type BundleArrtibuteValueAssetsCreateOrConnectWithoutBundleAttributeValuesInput =
  {
    create: BundleArrtibuteValueAssetsCreateWithoutBundleAttributeValuesInput;
    where: BundleArrtibuteValueAssetsWhereUniqueInput;
  };

export type BundleArrtibuteValueAssetsCreateWithoutAssetInput = {
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutBundleArrtibuteValueAssetsInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedOneWithoutAssetsInput>;
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsCreateWithoutAttributeValueInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutBundleArrtibuteValuesInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedOneWithoutAssetsInput>;
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsCreateWithoutBundleAttributeValuesInput =
  {
    Asset?: InputMaybe<AssetCreateNestedOneWithoutBundleArrtibuteValuesInput>;
    AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutBundleArrtibuteValueAssetsInput>;
    bundleId: Scalars['String'];
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type BundleArrtibuteValueAssetsListRelationFilter = {
  every?: InputMaybe<BundleArrtibuteValueAssetsWhereInput>;
  none?: InputMaybe<BundleArrtibuteValueAssetsWhereInput>;
  some?: InputMaybe<BundleArrtibuteValueAssetsWhereInput>;
};

export type BundleArrtibuteValueAssetsMaxAggregate = {
  __typename?: 'BundleArrtibuteValueAssetsMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  bundleAttributeValuesAttributeValueId?: Maybe<Scalars['String']>;
  bundleAttributeValuesBundleId?: Maybe<Scalars['String']>;
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsMinAggregate = {
  __typename?: 'BundleArrtibuteValueAssetsMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  bundleAttributeValuesAttributeValueId?: Maybe<Scalars['String']>;
  bundleAttributeValuesBundleId?: Maybe<Scalars['String']>;
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleArrtibuteValueAssetsOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BundleArrtibuteValueAssetsScalarWhereInput = {
  AND?: InputMaybe<Array<BundleArrtibuteValueAssetsScalarWhereInput>>;
  NOT?: InputMaybe<Array<BundleArrtibuteValueAssetsScalarWhereInput>>;
  OR?: InputMaybe<Array<BundleArrtibuteValueAssetsScalarWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  attributeValueId?: InputMaybe<StringFilter>;
  bundleAttributeValuesAttributeValueId?: InputMaybe<StringNullableFilter>;
  bundleAttributeValuesBundleId?: InputMaybe<StringNullableFilter>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleArrtibuteValueAssetsUpdateManyMutationInput = {
  bundleId?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleArrtibuteValueAssetsUpdateManyWithWhereWithoutAssetInput = {
  data: BundleArrtibuteValueAssetsUpdateManyMutationInput;
  where: BundleArrtibuteValueAssetsScalarWhereInput;
};

export type BundleArrtibuteValueAssetsUpdateManyWithWhereWithoutAttributeValueInput =
  {
    data: BundleArrtibuteValueAssetsUpdateManyMutationInput;
    where: BundleArrtibuteValueAssetsScalarWhereInput;
  };

export type BundleArrtibuteValueAssetsUpdateManyWithWhereWithoutBundleAttributeValuesInput =
  {
    data: BundleArrtibuteValueAssetsUpdateManyMutationInput;
    where: BundleArrtibuteValueAssetsScalarWhereInput;
  };

export type BundleArrtibuteValueAssetsUpdateManyWithoutAssetInput = {
  connect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleArrtibuteValueAssetsCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<BundleArrtibuteValueAssetsCreateWithoutAssetInput>>;
  createMany?: InputMaybe<BundleArrtibuteValueAssetsCreateManyAssetInputEnvelope>;
  delete?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleArrtibuteValueAssetsScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BundleArrtibuteValueAssetsUpdateWithWhereUniqueWithoutAssetInput>
  >;
  updateMany?: InputMaybe<
    Array<BundleArrtibuteValueAssetsUpdateManyWithWhereWithoutAssetInput>
  >;
  upsert?: InputMaybe<
    Array<BundleArrtibuteValueAssetsUpsertWithWhereUniqueWithoutAssetInput>
  >;
};

export type BundleArrtibuteValueAssetsUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleArrtibuteValueAssetsCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<BundleArrtibuteValueAssetsCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<BundleArrtibuteValueAssetsCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleArrtibuteValueAssetsScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BundleArrtibuteValueAssetsUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<BundleArrtibuteValueAssetsUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<BundleArrtibuteValueAssetsUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type BundleArrtibuteValueAssetsUpdateManyWithoutBundleAttributeValuesInput =
  {
    connect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<BundleArrtibuteValueAssetsCreateOrConnectWithoutBundleAttributeValuesInput>
    >;
    create?: InputMaybe<
      Array<BundleArrtibuteValueAssetsCreateWithoutBundleAttributeValuesInput>
    >;
    createMany?: InputMaybe<BundleArrtibuteValueAssetsCreateManyBundleAttributeValuesInputEnvelope>;
    delete?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
    deleteMany?: InputMaybe<Array<BundleArrtibuteValueAssetsScalarWhereInput>>;
    disconnect?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
    set?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereUniqueInput>>;
    update?: InputMaybe<
      Array<BundleArrtibuteValueAssetsUpdateWithWhereUniqueWithoutBundleAttributeValuesInput>
    >;
    updateMany?: InputMaybe<
      Array<BundleArrtibuteValueAssetsUpdateManyWithWhereWithoutBundleAttributeValuesInput>
    >;
    upsert?: InputMaybe<
      Array<BundleArrtibuteValueAssetsUpsertWithWhereUniqueWithoutBundleAttributeValuesInput>
    >;
  };

export type BundleArrtibuteValueAssetsUpdateWithWhereUniqueWithoutAssetInput = {
  data: BundleArrtibuteValueAssetsUpdateWithoutAssetInput;
  where: BundleArrtibuteValueAssetsWhereUniqueInput;
};

export type BundleArrtibuteValueAssetsUpdateWithWhereUniqueWithoutAttributeValueInput =
  {
    data: BundleArrtibuteValueAssetsUpdateWithoutAttributeValueInput;
    where: BundleArrtibuteValueAssetsWhereUniqueInput;
  };

export type BundleArrtibuteValueAssetsUpdateWithWhereUniqueWithoutBundleAttributeValuesInput =
  {
    data: BundleArrtibuteValueAssetsUpdateWithoutBundleAttributeValuesInput;
    where: BundleArrtibuteValueAssetsWhereUniqueInput;
  };

export type BundleArrtibuteValueAssetsUpdateWithoutAssetInput = {
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutBundleArrtibuteValueAssetsInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateOneWithoutAssetsInput>;
  bundleId?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleArrtibuteValueAssetsUpdateWithoutAttributeValueInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutBundleArrtibuteValuesInput>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesUpdateOneWithoutAssetsInput>;
  bundleId?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleArrtibuteValueAssetsUpdateWithoutBundleAttributeValuesInput =
  {
    Asset?: InputMaybe<AssetUpdateOneWithoutBundleArrtibuteValuesInput>;
    AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutBundleArrtibuteValueAssetsInput>;
    bundleId?: InputMaybe<StringFieldUpdateOperationsInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type BundleArrtibuteValueAssetsUpsertWithWhereUniqueWithoutAssetInput = {
  create: BundleArrtibuteValueAssetsCreateWithoutAssetInput;
  update: BundleArrtibuteValueAssetsUpdateWithoutAssetInput;
  where: BundleArrtibuteValueAssetsWhereUniqueInput;
};

export type BundleArrtibuteValueAssetsUpsertWithWhereUniqueWithoutAttributeValueInput =
  {
    create: BundleArrtibuteValueAssetsCreateWithoutAttributeValueInput;
    update: BundleArrtibuteValueAssetsUpdateWithoutAttributeValueInput;
    where: BundleArrtibuteValueAssetsWhereUniqueInput;
  };

export type BundleArrtibuteValueAssetsUpsertWithWhereUniqueWithoutBundleAttributeValuesInput =
  {
    create: BundleArrtibuteValueAssetsCreateWithoutBundleAttributeValuesInput;
    update: BundleArrtibuteValueAssetsUpdateWithoutBundleAttributeValuesInput;
    where: BundleArrtibuteValueAssetsWhereUniqueInput;
  };

export type BundleArrtibuteValueAssetsWhereInput = {
  AND?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  AttributeValue?: InputMaybe<AttributeValueRelationFilter>;
  BundleAttributeValues?: InputMaybe<BundleAttributeValuesRelationFilter>;
  NOT?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereInput>>;
  OR?: InputMaybe<Array<BundleArrtibuteValueAssetsWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  attributeValueId?: InputMaybe<StringFilter>;
  bundleAttributeValuesAttributeValueId?: InputMaybe<StringNullableFilter>;
  bundleAttributeValuesBundleId?: InputMaybe<StringNullableFilter>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleArrtibuteValueAssetsWhereUniqueInput = {
  attributeValueId_assetId?: InputMaybe<BundleArrtibuteValueAssetsAttributeValueIdAssetIdCompoundUniqueInput>;
};

export type BundleAttributeValues = {
  __typename?: 'BundleAttributeValues';
  Assets?: Maybe<Array<BundleArrtibuteValueAssets>>;
  AttributeValue?: Maybe<AttributeValue>;
  Bundle?: Maybe<Bundle>;
  _count: BundleAttributeValuesCount;
  attributeValueId: Scalars['String'];
  bundleId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleAttributeValuesBundleIdAttributeValueIdCompoundUniqueInput = {
  attributeValueId: Scalars['String'];
  bundleId: Scalars['String'];
};

export type BundleAttributeValuesCount = {
  __typename?: 'BundleAttributeValuesCount';
  Assets: Scalars['Int'];
};

export type BundleAttributeValuesCountAggregate = {
  __typename?: 'BundleAttributeValuesCountAggregate';
  _all: Scalars['Int'];
  attributeValueId: Scalars['Int'];
  bundleId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BundleAttributeValuesCreateManyAttributeValueInput = {
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleAttributeValuesCreateManyAttributeValueInputEnvelope = {
  data: Array<BundleAttributeValuesCreateManyAttributeValueInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleAttributeValuesCreateManyBundleInput = {
  attributeValueId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleAttributeValuesCreateManyBundleInputEnvelope = {
  data: Array<BundleAttributeValuesCreateManyBundleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleAttributeValuesCreateNestedManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleAttributeValuesCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<BundleAttributeValuesCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<BundleAttributeValuesCreateManyAttributeValueInputEnvelope>;
};

export type BundleAttributeValuesCreateNestedManyWithoutBundleInput = {
  connect?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleAttributeValuesCreateOrConnectWithoutBundleInput>
  >;
  create?: InputMaybe<Array<BundleAttributeValuesCreateWithoutBundleInput>>;
  createMany?: InputMaybe<BundleAttributeValuesCreateManyBundleInputEnvelope>;
};

export type BundleAttributeValuesCreateNestedOneWithoutAssetsInput = {
  connect?: InputMaybe<BundleAttributeValuesWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleAttributeValuesCreateOrConnectWithoutAssetsInput>;
  create?: InputMaybe<BundleAttributeValuesCreateWithoutAssetsInput>;
};

export type BundleAttributeValuesCreateOrConnectWithoutAssetsInput = {
  create: BundleAttributeValuesCreateWithoutAssetsInput;
  where: BundleAttributeValuesWhereUniqueInput;
};

export type BundleAttributeValuesCreateOrConnectWithoutAttributeValueInput = {
  create: BundleAttributeValuesCreateWithoutAttributeValueInput;
  where: BundleAttributeValuesWhereUniqueInput;
};

export type BundleAttributeValuesCreateOrConnectWithoutBundleInput = {
  create: BundleAttributeValuesCreateWithoutBundleInput;
  where: BundleAttributeValuesWhereUniqueInput;
};

export type BundleAttributeValuesCreateWithoutAssetsInput = {
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutBundleAttributeValuesInput>;
  Bundle?: InputMaybe<BundleCreateNestedOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleAttributeValuesCreateWithoutAttributeValueInput = {
  Assets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutBundleAttributeValuesInput>;
  Bundle?: InputMaybe<BundleCreateNestedOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleAttributeValuesCreateWithoutBundleInput = {
  Assets?: InputMaybe<BundleArrtibuteValueAssetsCreateNestedManyWithoutBundleAttributeValuesInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutBundleAttributeValuesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleAttributeValuesListRelationFilter = {
  every?: InputMaybe<BundleAttributeValuesWhereInput>;
  none?: InputMaybe<BundleAttributeValuesWhereInput>;
  some?: InputMaybe<BundleAttributeValuesWhereInput>;
};

export type BundleAttributeValuesMaxAggregate = {
  __typename?: 'BundleAttributeValuesMaxAggregate';
  attributeValueId?: Maybe<Scalars['String']>;
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleAttributeValuesMinAggregate = {
  __typename?: 'BundleAttributeValuesMinAggregate';
  attributeValueId?: Maybe<Scalars['String']>;
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleAttributeValuesRelationFilter = {
  is?: InputMaybe<BundleAttributeValuesWhereInput>;
  isNot?: InputMaybe<BundleAttributeValuesWhereInput>;
};

export type BundleAttributeValuesScalarWhereInput = {
  AND?: InputMaybe<Array<BundleAttributeValuesScalarWhereInput>>;
  NOT?: InputMaybe<Array<BundleAttributeValuesScalarWhereInput>>;
  OR?: InputMaybe<Array<BundleAttributeValuesScalarWhereInput>>;
  attributeValueId?: InputMaybe<StringFilter>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleAttributeValuesUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleAttributeValuesUpdateManyWithWhereWithoutAttributeValueInput =
  {
    data: BundleAttributeValuesUpdateManyMutationInput;
    where: BundleAttributeValuesScalarWhereInput;
  };

export type BundleAttributeValuesUpdateManyWithWhereWithoutBundleInput = {
  data: BundleAttributeValuesUpdateManyMutationInput;
  where: BundleAttributeValuesScalarWhereInput;
};

export type BundleAttributeValuesUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleAttributeValuesCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<BundleAttributeValuesCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<BundleAttributeValuesCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleAttributeValuesScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BundleAttributeValuesUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<BundleAttributeValuesUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<BundleAttributeValuesUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type BundleAttributeValuesUpdateManyWithoutBundleInput = {
  connect?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleAttributeValuesCreateOrConnectWithoutBundleInput>
  >;
  create?: InputMaybe<Array<BundleAttributeValuesCreateWithoutBundleInput>>;
  createMany?: InputMaybe<BundleAttributeValuesCreateManyBundleInputEnvelope>;
  delete?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleAttributeValuesScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleAttributeValuesWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BundleAttributeValuesUpdateWithWhereUniqueWithoutBundleInput>
  >;
  updateMany?: InputMaybe<
    Array<BundleAttributeValuesUpdateManyWithWhereWithoutBundleInput>
  >;
  upsert?: InputMaybe<
    Array<BundleAttributeValuesUpsertWithWhereUniqueWithoutBundleInput>
  >;
};

export type BundleAttributeValuesUpdateOneWithoutAssetsInput = {
  connect?: InputMaybe<BundleAttributeValuesWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleAttributeValuesCreateOrConnectWithoutAssetsInput>;
  create?: InputMaybe<BundleAttributeValuesCreateWithoutAssetsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BundleAttributeValuesUpdateWithoutAssetsInput>;
  upsert?: InputMaybe<BundleAttributeValuesUpsertWithoutAssetsInput>;
};

export type BundleAttributeValuesUpdateWithWhereUniqueWithoutAttributeValueInput =
  {
    data: BundleAttributeValuesUpdateWithoutAttributeValueInput;
    where: BundleAttributeValuesWhereUniqueInput;
  };

export type BundleAttributeValuesUpdateWithWhereUniqueWithoutBundleInput = {
  data: BundleAttributeValuesUpdateWithoutBundleInput;
  where: BundleAttributeValuesWhereUniqueInput;
};

export type BundleAttributeValuesUpdateWithoutAssetsInput = {
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutBundleAttributeValuesInput>;
  Bundle?: InputMaybe<BundleUpdateOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleAttributeValuesUpdateWithoutAttributeValueInput = {
  Assets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutBundleAttributeValuesInput>;
  Bundle?: InputMaybe<BundleUpdateOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleAttributeValuesUpdateWithoutBundleInput = {
  Assets?: InputMaybe<BundleArrtibuteValueAssetsUpdateManyWithoutBundleAttributeValuesInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutBundleAttributeValuesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleAttributeValuesUpsertWithWhereUniqueWithoutAttributeValueInput =
  {
    create: BundleAttributeValuesCreateWithoutAttributeValueInput;
    update: BundleAttributeValuesUpdateWithoutAttributeValueInput;
    where: BundleAttributeValuesWhereUniqueInput;
  };

export type BundleAttributeValuesUpsertWithWhereUniqueWithoutBundleInput = {
  create: BundleAttributeValuesCreateWithoutBundleInput;
  update: BundleAttributeValuesUpdateWithoutBundleInput;
  where: BundleAttributeValuesWhereUniqueInput;
};

export type BundleAttributeValuesUpsertWithoutAssetsInput = {
  create: BundleAttributeValuesCreateWithoutAssetsInput;
  update: BundleAttributeValuesUpdateWithoutAssetsInput;
};

export type BundleAttributeValuesWhereInput = {
  AND?: InputMaybe<Array<BundleAttributeValuesWhereInput>>;
  Assets?: InputMaybe<BundleArrtibuteValueAssetsListRelationFilter>;
  AttributeValue?: InputMaybe<AttributeValueRelationFilter>;
  Bundle?: InputMaybe<BundleRelationFilter>;
  NOT?: InputMaybe<Array<BundleAttributeValuesWhereInput>>;
  OR?: InputMaybe<Array<BundleAttributeValuesWhereInput>>;
  attributeValueId?: InputMaybe<StringFilter>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleAttributeValuesWhereUniqueInput = {
  bundleId_attributeValueId?: InputMaybe<BundleAttributeValuesBundleIdAttributeValueIdCompoundUniqueInput>;
};

export type BundleAvgAggregate = {
  __typename?: 'BundleAvgAggregate';
  currentStockUnits?: Maybe<Scalars['Float']>;
  discount?: Maybe<Scalars['Float']>;
  mRPrice?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Float']>;
  unitPrice?: Maybe<Scalars['Float']>;
};

export type BundleBulkConfigrations = {
  __typename?: 'BundleBulkConfigrations';
  Bundles?: Maybe<Bundle>;
  bulkDiscount: Scalars['Float'];
  bulkPrice: Scalars['Float'];
  bundleId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  moq: Scalars['Int'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleBulkConfigrationsAvgAggregate = {
  __typename?: 'BundleBulkConfigrationsAvgAggregate';
  bulkDiscount?: Maybe<Scalars['Float']>;
  bulkPrice?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Float']>;
};

export type BundleBulkConfigrationsCountAggregate = {
  __typename?: 'BundleBulkConfigrationsCountAggregate';
  _all: Scalars['Int'];
  bulkDiscount: Scalars['Int'];
  bulkPrice: Scalars['Int'];
  bundleId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  moq: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BundleBulkConfigrationsCreateManyBundlesInput = {
  bulkDiscount: Scalars['Float'];
  bulkPrice: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  moq: Scalars['Int'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleBulkConfigrationsCreateManyBundlesInputEnvelope = {
  data: Array<BundleBulkConfigrationsCreateManyBundlesInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleBulkConfigrationsCreateNestedManyWithoutBundlesInput = {
  connect?: InputMaybe<Array<BundleBulkConfigrationsWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleBulkConfigrationsCreateOrConnectWithoutBundlesInput>
  >;
  create?: InputMaybe<Array<BundleBulkConfigrationsCreateWithoutBundlesInput>>;
  createMany?: InputMaybe<BundleBulkConfigrationsCreateManyBundlesInputEnvelope>;
};

export type BundleBulkConfigrationsCreateOrConnectWithoutBundlesInput = {
  create: BundleBulkConfigrationsCreateWithoutBundlesInput;
  where: BundleBulkConfigrationsWhereUniqueInput;
};

export type BundleBulkConfigrationsCreateWithoutBundlesInput = {
  bulkDiscount: Scalars['Float'];
  bulkPrice: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  moq: Scalars['Int'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleBulkConfigrationsListRelationFilter = {
  every?: InputMaybe<BundleBulkConfigrationsWhereInput>;
  none?: InputMaybe<BundleBulkConfigrationsWhereInput>;
  some?: InputMaybe<BundleBulkConfigrationsWhereInput>;
};

export type BundleBulkConfigrationsMaxAggregate = {
  __typename?: 'BundleBulkConfigrationsMaxAggregate';
  bulkDiscount?: Maybe<Scalars['Float']>;
  bulkPrice?: Maybe<Scalars['Float']>;
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  moq?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleBulkConfigrationsMinAggregate = {
  __typename?: 'BundleBulkConfigrationsMinAggregate';
  bulkDiscount?: Maybe<Scalars['Float']>;
  bulkPrice?: Maybe<Scalars['Float']>;
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  moq?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleBulkConfigrationsScalarWhereInput = {
  AND?: InputMaybe<Array<BundleBulkConfigrationsScalarWhereInput>>;
  NOT?: InputMaybe<Array<BundleBulkConfigrationsScalarWhereInput>>;
  OR?: InputMaybe<Array<BundleBulkConfigrationsScalarWhereInput>>;
  bulkDiscount?: InputMaybe<FloatFilter>;
  bulkPrice?: InputMaybe<FloatFilter>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  moq?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleBulkConfigrationsSumAggregate = {
  __typename?: 'BundleBulkConfigrationsSumAggregate';
  bulkDiscount?: Maybe<Scalars['Float']>;
  bulkPrice?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Int']>;
};

export type BundleBulkConfigrationsUpdateManyMutationInput = {
  bulkDiscount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  bulkPrice?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  moq?: InputMaybe<IntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleBulkConfigrationsUpdateManyWithWhereWithoutBundlesInput = {
  data: BundleBulkConfigrationsUpdateManyMutationInput;
  where: BundleBulkConfigrationsScalarWhereInput;
};

export type BundleBulkConfigrationsUpdateManyWithoutBundlesInput = {
  connect?: InputMaybe<Array<BundleBulkConfigrationsWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleBulkConfigrationsCreateOrConnectWithoutBundlesInput>
  >;
  create?: InputMaybe<Array<BundleBulkConfigrationsCreateWithoutBundlesInput>>;
  createMany?: InputMaybe<BundleBulkConfigrationsCreateManyBundlesInputEnvelope>;
  delete?: InputMaybe<Array<BundleBulkConfigrationsWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleBulkConfigrationsScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleBulkConfigrationsWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleBulkConfigrationsWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BundleBulkConfigrationsUpdateWithWhereUniqueWithoutBundlesInput>
  >;
  updateMany?: InputMaybe<
    Array<BundleBulkConfigrationsUpdateManyWithWhereWithoutBundlesInput>
  >;
  upsert?: InputMaybe<
    Array<BundleBulkConfigrationsUpsertWithWhereUniqueWithoutBundlesInput>
  >;
};

export type BundleBulkConfigrationsUpdateWithWhereUniqueWithoutBundlesInput = {
  data: BundleBulkConfigrationsUpdateWithoutBundlesInput;
  where: BundleBulkConfigrationsWhereUniqueInput;
};

export type BundleBulkConfigrationsUpdateWithoutBundlesInput = {
  bulkDiscount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  bulkPrice?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  moq?: InputMaybe<IntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleBulkConfigrationsUpsertWithWhereUniqueWithoutBundlesInput = {
  create: BundleBulkConfigrationsCreateWithoutBundlesInput;
  update: BundleBulkConfigrationsUpdateWithoutBundlesInput;
  where: BundleBulkConfigrationsWhereUniqueInput;
};

export type BundleBulkConfigrationsWhereInput = {
  AND?: InputMaybe<Array<BundleBulkConfigrationsWhereInput>>;
  Bundles?: InputMaybe<BundleRelationFilter>;
  NOT?: InputMaybe<Array<BundleBulkConfigrationsWhereInput>>;
  OR?: InputMaybe<Array<BundleBulkConfigrationsWhereInput>>;
  bulkDiscount?: InputMaybe<FloatFilter>;
  bulkPrice?: InputMaybe<FloatFilter>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  moq?: InputMaybe<IntFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleBulkConfigrationsWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type BundleCount = {
  __typename?: 'BundleCount';
  AttributeValues: Scalars['Int'];
  BulkConfigrations: Scalars['Int'];
  MiscAttributeValues: Scalars['Int'];
  Varients: Scalars['Int'];
};

export type BundleCountAggregate = {
  __typename?: 'BundleCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  currentStockUnits: Scalars['Int'];
  description: Scalars['Int'];
  discount: Scalars['Int'];
  hsn: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  mRPrice: Scalars['Int'];
  moq: Scalars['Int'];
  name: Scalars['Int'];
  productId: Scalars['Int'];
  unitPrice: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BundleCreateManyProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  currentStockUnits?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mRPrice?: InputMaybe<Scalars['Float']>;
  moq?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleCreateManyProductInputEnvelope = {
  data: Array<BundleCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<BundleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BundleCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<BundleCreateWithoutProductInput>>;
  createMany?: InputMaybe<BundleCreateManyProductInputEnvelope>;
};

export type BundleCreateNestedOneWithoutAttributeValuesInput = {
  connect?: InputMaybe<BundleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleCreateOrConnectWithoutAttributeValuesInput>;
  create?: InputMaybe<BundleCreateWithoutAttributeValuesInput>;
};

export type BundleCreateNestedOneWithoutMiscAttributeValuesInput = {
  connect?: InputMaybe<BundleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleCreateOrConnectWithoutMiscAttributeValuesInput>;
  create?: InputMaybe<BundleCreateWithoutMiscAttributeValuesInput>;
};

export type BundleCreateNestedOneWithoutVarientsInput = {
  connect?: InputMaybe<BundleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleCreateOrConnectWithoutVarientsInput>;
  create?: InputMaybe<BundleCreateWithoutVarientsInput>;
};

export type BundleCreateOrConnectWithoutAttributeValuesInput = {
  create: BundleCreateWithoutAttributeValuesInput;
  where: BundleWhereUniqueInput;
};

export type BundleCreateOrConnectWithoutMiscAttributeValuesInput = {
  create: BundleCreateWithoutMiscAttributeValuesInput;
  where: BundleWhereUniqueInput;
};

export type BundleCreateOrConnectWithoutProductInput = {
  create: BundleCreateWithoutProductInput;
  where: BundleWhereUniqueInput;
};

export type BundleCreateOrConnectWithoutVarientsInput = {
  create: BundleCreateWithoutVarientsInput;
  where: BundleWhereUniqueInput;
};

export type BundleCreateWithoutAttributeValuesInput = {
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsCreateNestedManyWithoutBundlesInput>;
  MiscAttributeValues?: InputMaybe<BundleMiscCreateNestedManyWithoutBundleInput>;
  Product?: InputMaybe<ProductCreateNestedOneWithoutBundlesInput>;
  Varients?: InputMaybe<BundleItemCreateNestedManyWithoutBundleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  currentStockUnits?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mRPrice?: InputMaybe<Scalars['Float']>;
  moq?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleCreateWithoutMiscAttributeValuesInput = {
  AttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutBundleInput>;
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsCreateNestedManyWithoutBundlesInput>;
  Product?: InputMaybe<ProductCreateNestedOneWithoutBundlesInput>;
  Varients?: InputMaybe<BundleItemCreateNestedManyWithoutBundleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  currentStockUnits?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mRPrice?: InputMaybe<Scalars['Float']>;
  moq?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleCreateWithoutProductInput = {
  AttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutBundleInput>;
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsCreateNestedManyWithoutBundlesInput>;
  MiscAttributeValues?: InputMaybe<BundleMiscCreateNestedManyWithoutBundleInput>;
  Varients?: InputMaybe<BundleItemCreateNestedManyWithoutBundleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  currentStockUnits?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mRPrice?: InputMaybe<Scalars['Float']>;
  moq?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleCreateWithoutVarientsInput = {
  AttributeValues?: InputMaybe<BundleAttributeValuesCreateNestedManyWithoutBundleInput>;
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsCreateNestedManyWithoutBundlesInput>;
  MiscAttributeValues?: InputMaybe<BundleMiscCreateNestedManyWithoutBundleInput>;
  Product?: InputMaybe<ProductCreateNestedOneWithoutBundlesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  currentStockUnits?: InputMaybe<Scalars['Int']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mRPrice?: InputMaybe<Scalars['Float']>;
  moq?: InputMaybe<Scalars['Int']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleItem = {
  __typename?: 'BundleItem';
  Bundle?: Maybe<Bundle>;
  Variant?: Maybe<ProductVariant>;
  bundleId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productVariantId: Scalars['String'];
  quantity?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleItemAvgAggregate = {
  __typename?: 'BundleItemAvgAggregate';
  quantity?: Maybe<Scalars['Float']>;
};

export type BundleItemBundleIdProductVariantIdCompoundUniqueInput = {
  bundleId: Scalars['String'];
  productVariantId: Scalars['String'];
};

export type BundleItemCountAggregate = {
  __typename?: 'BundleItemCountAggregate';
  _all: Scalars['Int'];
  bundleId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  productVariantId: Scalars['Int'];
  quantity: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BundleItemCreateManyBundleInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  productVariantId: Scalars['String'];
  quantity?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleItemCreateManyBundleInputEnvelope = {
  data: Array<BundleItemCreateManyBundleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleItemCreateManyVariantInput = {
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  quantity?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleItemCreateManyVariantInputEnvelope = {
  data: Array<BundleItemCreateManyVariantInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleItemCreateNestedManyWithoutBundleInput = {
  connect?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleItemCreateOrConnectWithoutBundleInput>
  >;
  create?: InputMaybe<Array<BundleItemCreateWithoutBundleInput>>;
  createMany?: InputMaybe<BundleItemCreateManyBundleInputEnvelope>;
};

export type BundleItemCreateNestedManyWithoutVariantInput = {
  connect?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleItemCreateOrConnectWithoutVariantInput>
  >;
  create?: InputMaybe<Array<BundleItemCreateWithoutVariantInput>>;
  createMany?: InputMaybe<BundleItemCreateManyVariantInputEnvelope>;
};

export type BundleItemCreateOrConnectWithoutBundleInput = {
  create: BundleItemCreateWithoutBundleInput;
  where: BundleItemWhereUniqueInput;
};

export type BundleItemCreateOrConnectWithoutVariantInput = {
  create: BundleItemCreateWithoutVariantInput;
  where: BundleItemWhereUniqueInput;
};

export type BundleItemCreateWithoutBundleInput = {
  Variant?: InputMaybe<ProductVariantCreateNestedOneWithoutBundlesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  quantity?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleItemCreateWithoutVariantInput = {
  Bundle?: InputMaybe<BundleCreateNestedOneWithoutVarientsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  quantity?: InputMaybe<Scalars['Int']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleItemListRelationFilter = {
  every?: InputMaybe<BundleItemWhereInput>;
  none?: InputMaybe<BundleItemWhereInput>;
  some?: InputMaybe<BundleItemWhereInput>;
};

export type BundleItemMaxAggregate = {
  __typename?: 'BundleItemMaxAggregate';
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productVariantId?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleItemMinAggregate = {
  __typename?: 'BundleItemMinAggregate';
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productVariantId?: Maybe<Scalars['String']>;
  quantity?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleItemScalarWhereInput = {
  AND?: InputMaybe<Array<BundleItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<BundleItemScalarWhereInput>>;
  OR?: InputMaybe<Array<BundleItemScalarWhereInput>>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productVariantId?: InputMaybe<StringFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleItemSumAggregate = {
  __typename?: 'BundleItemSumAggregate';
  quantity?: Maybe<Scalars['Int']>;
};

export type BundleItemUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleItemUpdateManyWithWhereWithoutBundleInput = {
  data: BundleItemUpdateManyMutationInput;
  where: BundleItemScalarWhereInput;
};

export type BundleItemUpdateManyWithWhereWithoutVariantInput = {
  data: BundleItemUpdateManyMutationInput;
  where: BundleItemScalarWhereInput;
};

export type BundleItemUpdateManyWithoutBundleInput = {
  connect?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleItemCreateOrConnectWithoutBundleInput>
  >;
  create?: InputMaybe<Array<BundleItemCreateWithoutBundleInput>>;
  createMany?: InputMaybe<BundleItemCreateManyBundleInputEnvelope>;
  delete?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  update?: InputMaybe<Array<BundleItemUpdateWithWhereUniqueWithoutBundleInput>>;
  updateMany?: InputMaybe<
    Array<BundleItemUpdateManyWithWhereWithoutBundleInput>
  >;
  upsert?: InputMaybe<Array<BundleItemUpsertWithWhereUniqueWithoutBundleInput>>;
};

export type BundleItemUpdateManyWithoutVariantInput = {
  connect?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleItemCreateOrConnectWithoutVariantInput>
  >;
  create?: InputMaybe<Array<BundleItemCreateWithoutVariantInput>>;
  createMany?: InputMaybe<BundleItemCreateManyVariantInputEnvelope>;
  delete?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleItemWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BundleItemUpdateWithWhereUniqueWithoutVariantInput>
  >;
  updateMany?: InputMaybe<
    Array<BundleItemUpdateManyWithWhereWithoutVariantInput>
  >;
  upsert?: InputMaybe<
    Array<BundleItemUpsertWithWhereUniqueWithoutVariantInput>
  >;
};

export type BundleItemUpdateWithWhereUniqueWithoutBundleInput = {
  data: BundleItemUpdateWithoutBundleInput;
  where: BundleItemWhereUniqueInput;
};

export type BundleItemUpdateWithWhereUniqueWithoutVariantInput = {
  data: BundleItemUpdateWithoutVariantInput;
  where: BundleItemWhereUniqueInput;
};

export type BundleItemUpdateWithoutBundleInput = {
  Variant?: InputMaybe<ProductVariantUpdateOneWithoutBundlesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleItemUpdateWithoutVariantInput = {
  Bundle?: InputMaybe<BundleUpdateOneWithoutVarientsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleItemUpsertWithWhereUniqueWithoutBundleInput = {
  create: BundleItemCreateWithoutBundleInput;
  update: BundleItemUpdateWithoutBundleInput;
  where: BundleItemWhereUniqueInput;
};

export type BundleItemUpsertWithWhereUniqueWithoutVariantInput = {
  create: BundleItemCreateWithoutVariantInput;
  update: BundleItemUpdateWithoutVariantInput;
  where: BundleItemWhereUniqueInput;
};

export type BundleItemWhereInput = {
  AND?: InputMaybe<Array<BundleItemWhereInput>>;
  Bundle?: InputMaybe<BundleRelationFilter>;
  NOT?: InputMaybe<Array<BundleItemWhereInput>>;
  OR?: InputMaybe<Array<BundleItemWhereInput>>;
  Variant?: InputMaybe<ProductVariantRelationFilter>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productVariantId?: InputMaybe<StringFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleItemWhereUniqueInput = {
  bundleId_productVariantId?: InputMaybe<BundleItemBundleIdProductVariantIdCompoundUniqueInput>;
};

export type BundleListRelationFilter = {
  every?: InputMaybe<BundleWhereInput>;
  none?: InputMaybe<BundleWhereInput>;
  some?: InputMaybe<BundleWhereInput>;
};

export type BundleMaxAggregate = {
  __typename?: 'BundleMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  currentStockUnits?: Maybe<Scalars['Int']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  hsn?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mRPrice?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleMinAggregate = {
  __typename?: 'BundleMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  currentStockUnits?: Maybe<Scalars['Int']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  hsn?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mRPrice?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleMisc = {
  __typename?: 'BundleMisc';
  Bundle?: Maybe<Bundle>;
  MiscAttributeValues?: Maybe<AttributeValue>;
  bundleId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  miscAttributesId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleMiscBundleIdMiscAttributesIdCompoundUniqueInput = {
  bundleId: Scalars['String'];
  miscAttributesId: Scalars['String'];
};

export type BundleMiscCountAggregate = {
  __typename?: 'BundleMiscCountAggregate';
  _all: Scalars['Int'];
  bundleId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  miscAttributesId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type BundleMiscCreateManyBundleInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  miscAttributesId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleMiscCreateManyBundleInputEnvelope = {
  data: Array<BundleMiscCreateManyBundleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleMiscCreateManyMiscAttributeValuesInput = {
  bundleId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleMiscCreateManyMiscAttributeValuesInputEnvelope = {
  data: Array<BundleMiscCreateManyMiscAttributeValuesInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BundleMiscCreateNestedManyWithoutBundleInput = {
  connect?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleMiscCreateOrConnectWithoutBundleInput>
  >;
  create?: InputMaybe<Array<BundleMiscCreateWithoutBundleInput>>;
  createMany?: InputMaybe<BundleMiscCreateManyBundleInputEnvelope>;
};

export type BundleMiscCreateNestedManyWithoutMiscAttributeValuesInput = {
  connect?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleMiscCreateOrConnectWithoutMiscAttributeValuesInput>
  >;
  create?: InputMaybe<Array<BundleMiscCreateWithoutMiscAttributeValuesInput>>;
  createMany?: InputMaybe<BundleMiscCreateManyMiscAttributeValuesInputEnvelope>;
};

export type BundleMiscCreateOrConnectWithoutBundleInput = {
  create: BundleMiscCreateWithoutBundleInput;
  where: BundleMiscWhereUniqueInput;
};

export type BundleMiscCreateOrConnectWithoutMiscAttributeValuesInput = {
  create: BundleMiscCreateWithoutMiscAttributeValuesInput;
  where: BundleMiscWhereUniqueInput;
};

export type BundleMiscCreateWithoutBundleInput = {
  MiscAttributeValues?: InputMaybe<AttributeValueCreateNestedOneWithoutBundleMiscsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleMiscCreateWithoutMiscAttributeValuesInput = {
  Bundle?: InputMaybe<BundleCreateNestedOneWithoutMiscAttributeValuesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type BundleMiscListRelationFilter = {
  every?: InputMaybe<BundleMiscWhereInput>;
  none?: InputMaybe<BundleMiscWhereInput>;
  some?: InputMaybe<BundleMiscWhereInput>;
};

export type BundleMiscMaxAggregate = {
  __typename?: 'BundleMiscMaxAggregate';
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  miscAttributesId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleMiscMinAggregate = {
  __typename?: 'BundleMiscMinAggregate';
  bundleId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  miscAttributesId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type BundleMiscScalarWhereInput = {
  AND?: InputMaybe<Array<BundleMiscScalarWhereInput>>;
  NOT?: InputMaybe<Array<BundleMiscScalarWhereInput>>;
  OR?: InputMaybe<Array<BundleMiscScalarWhereInput>>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  miscAttributesId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleMiscUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleMiscUpdateManyWithWhereWithoutBundleInput = {
  data: BundleMiscUpdateManyMutationInput;
  where: BundleMiscScalarWhereInput;
};

export type BundleMiscUpdateManyWithWhereWithoutMiscAttributeValuesInput = {
  data: BundleMiscUpdateManyMutationInput;
  where: BundleMiscScalarWhereInput;
};

export type BundleMiscUpdateManyWithoutBundleInput = {
  connect?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleMiscCreateOrConnectWithoutBundleInput>
  >;
  create?: InputMaybe<Array<BundleMiscCreateWithoutBundleInput>>;
  createMany?: InputMaybe<BundleMiscCreateManyBundleInputEnvelope>;
  delete?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleMiscScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  update?: InputMaybe<Array<BundleMiscUpdateWithWhereUniqueWithoutBundleInput>>;
  updateMany?: InputMaybe<
    Array<BundleMiscUpdateManyWithWhereWithoutBundleInput>
  >;
  upsert?: InputMaybe<Array<BundleMiscUpsertWithWhereUniqueWithoutBundleInput>>;
};

export type BundleMiscUpdateManyWithoutMiscAttributeValuesInput = {
  connect?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<BundleMiscCreateOrConnectWithoutMiscAttributeValuesInput>
  >;
  create?: InputMaybe<Array<BundleMiscCreateWithoutMiscAttributeValuesInput>>;
  createMany?: InputMaybe<BundleMiscCreateManyMiscAttributeValuesInputEnvelope>;
  delete?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleMiscScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleMiscWhereUniqueInput>>;
  update?: InputMaybe<
    Array<BundleMiscUpdateWithWhereUniqueWithoutMiscAttributeValuesInput>
  >;
  updateMany?: InputMaybe<
    Array<BundleMiscUpdateManyWithWhereWithoutMiscAttributeValuesInput>
  >;
  upsert?: InputMaybe<
    Array<BundleMiscUpsertWithWhereUniqueWithoutMiscAttributeValuesInput>
  >;
};

export type BundleMiscUpdateWithWhereUniqueWithoutBundleInput = {
  data: BundleMiscUpdateWithoutBundleInput;
  where: BundleMiscWhereUniqueInput;
};

export type BundleMiscUpdateWithWhereUniqueWithoutMiscAttributeValuesInput = {
  data: BundleMiscUpdateWithoutMiscAttributeValuesInput;
  where: BundleMiscWhereUniqueInput;
};

export type BundleMiscUpdateWithoutBundleInput = {
  MiscAttributeValues?: InputMaybe<AttributeValueUpdateOneWithoutBundleMiscsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleMiscUpdateWithoutMiscAttributeValuesInput = {
  Bundle?: InputMaybe<BundleUpdateOneWithoutMiscAttributeValuesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleMiscUpsertWithWhereUniqueWithoutBundleInput = {
  create: BundleMiscCreateWithoutBundleInput;
  update: BundleMiscUpdateWithoutBundleInput;
  where: BundleMiscWhereUniqueInput;
};

export type BundleMiscUpsertWithWhereUniqueWithoutMiscAttributeValuesInput = {
  create: BundleMiscCreateWithoutMiscAttributeValuesInput;
  update: BundleMiscUpdateWithoutMiscAttributeValuesInput;
  where: BundleMiscWhereUniqueInput;
};

export type BundleMiscWhereInput = {
  AND?: InputMaybe<Array<BundleMiscWhereInput>>;
  Bundle?: InputMaybe<BundleRelationFilter>;
  MiscAttributeValues?: InputMaybe<AttributeValueRelationFilter>;
  NOT?: InputMaybe<Array<BundleMiscWhereInput>>;
  OR?: InputMaybe<Array<BundleMiscWhereInput>>;
  bundleId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  miscAttributesId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleMiscWhereUniqueInput = {
  bundleId_miscAttributesId?: InputMaybe<BundleMiscBundleIdMiscAttributesIdCompoundUniqueInput>;
};

export type BundleOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BundleRelationFilter = {
  is?: InputMaybe<BundleWhereInput>;
  isNot?: InputMaybe<BundleWhereInput>;
};

export type BundleScalarWhereInput = {
  AND?: InputMaybe<Array<BundleScalarWhereInput>>;
  NOT?: InputMaybe<Array<BundleScalarWhereInput>>;
  OR?: InputMaybe<Array<BundleScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  currentStockUnits?: InputMaybe<IntNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  hsn?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  mRPrice?: InputMaybe<FloatNullableFilter>;
  moq?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  productId?: InputMaybe<StringNullableFilter>;
  unitPrice?: InputMaybe<FloatNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleSumAggregate = {
  __typename?: 'BundleSumAggregate';
  currentStockUnits?: Maybe<Scalars['Int']>;
  discount?: Maybe<Scalars['Float']>;
  mRPrice?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Int']>;
  unitPrice?: Maybe<Scalars['Float']>;
};

export type BundleUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  currentStockUnits?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mRPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleUpdateManyWithWhereWithoutProductInput = {
  data: BundleUpdateManyMutationInput;
  where: BundleScalarWhereInput;
};

export type BundleUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<BundleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BundleCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<BundleCreateWithoutProductInput>>;
  createMany?: InputMaybe<BundleCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<BundleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BundleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BundleWhereUniqueInput>>;
  set?: InputMaybe<Array<BundleWhereUniqueInput>>;
  update?: InputMaybe<Array<BundleUpdateWithWhereUniqueWithoutProductInput>>;
  updateMany?: InputMaybe<Array<BundleUpdateManyWithWhereWithoutProductInput>>;
  upsert?: InputMaybe<Array<BundleUpsertWithWhereUniqueWithoutProductInput>>;
};

export type BundleUpdateOneWithoutAttributeValuesInput = {
  connect?: InputMaybe<BundleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleCreateOrConnectWithoutAttributeValuesInput>;
  create?: InputMaybe<BundleCreateWithoutAttributeValuesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BundleUpdateWithoutAttributeValuesInput>;
  upsert?: InputMaybe<BundleUpsertWithoutAttributeValuesInput>;
};

export type BundleUpdateOneWithoutMiscAttributeValuesInput = {
  connect?: InputMaybe<BundleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleCreateOrConnectWithoutMiscAttributeValuesInput>;
  create?: InputMaybe<BundleCreateWithoutMiscAttributeValuesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BundleUpdateWithoutMiscAttributeValuesInput>;
  upsert?: InputMaybe<BundleUpsertWithoutMiscAttributeValuesInput>;
};

export type BundleUpdateOneWithoutVarientsInput = {
  connect?: InputMaybe<BundleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BundleCreateOrConnectWithoutVarientsInput>;
  create?: InputMaybe<BundleCreateWithoutVarientsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BundleUpdateWithoutVarientsInput>;
  upsert?: InputMaybe<BundleUpsertWithoutVarientsInput>;
};

export type BundleUpdateWithWhereUniqueWithoutProductInput = {
  data: BundleUpdateWithoutProductInput;
  where: BundleWhereUniqueInput;
};

export type BundleUpdateWithoutAttributeValuesInput = {
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsUpdateManyWithoutBundlesInput>;
  MiscAttributeValues?: InputMaybe<BundleMiscUpdateManyWithoutBundleInput>;
  Product?: InputMaybe<ProductUpdateOneWithoutBundlesInput>;
  Varients?: InputMaybe<BundleItemUpdateManyWithoutBundleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  currentStockUnits?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mRPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleUpdateWithoutMiscAttributeValuesInput = {
  AttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutBundleInput>;
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsUpdateManyWithoutBundlesInput>;
  Product?: InputMaybe<ProductUpdateOneWithoutBundlesInput>;
  Varients?: InputMaybe<BundleItemUpdateManyWithoutBundleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  currentStockUnits?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mRPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleUpdateWithoutProductInput = {
  AttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutBundleInput>;
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsUpdateManyWithoutBundlesInput>;
  MiscAttributeValues?: InputMaybe<BundleMiscUpdateManyWithoutBundleInput>;
  Varients?: InputMaybe<BundleItemUpdateManyWithoutBundleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  currentStockUnits?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mRPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleUpdateWithoutVarientsInput = {
  AttributeValues?: InputMaybe<BundleAttributeValuesUpdateManyWithoutBundleInput>;
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsUpdateManyWithoutBundlesInput>;
  MiscAttributeValues?: InputMaybe<BundleMiscUpdateManyWithoutBundleInput>;
  Product?: InputMaybe<ProductUpdateOneWithoutBundlesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  currentStockUnits?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mRPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BundleUpsertWithWhereUniqueWithoutProductInput = {
  create: BundleCreateWithoutProductInput;
  update: BundleUpdateWithoutProductInput;
  where: BundleWhereUniqueInput;
};

export type BundleUpsertWithoutAttributeValuesInput = {
  create: BundleCreateWithoutAttributeValuesInput;
  update: BundleUpdateWithoutAttributeValuesInput;
};

export type BundleUpsertWithoutMiscAttributeValuesInput = {
  create: BundleCreateWithoutMiscAttributeValuesInput;
  update: BundleUpdateWithoutMiscAttributeValuesInput;
};

export type BundleUpsertWithoutVarientsInput = {
  create: BundleCreateWithoutVarientsInput;
  update: BundleUpdateWithoutVarientsInput;
};

export type BundleWhereInput = {
  AND?: InputMaybe<Array<BundleWhereInput>>;
  AttributeValues?: InputMaybe<BundleAttributeValuesListRelationFilter>;
  BulkConfigrations?: InputMaybe<BundleBulkConfigrationsListRelationFilter>;
  MiscAttributeValues?: InputMaybe<BundleMiscListRelationFilter>;
  NOT?: InputMaybe<Array<BundleWhereInput>>;
  OR?: InputMaybe<Array<BundleWhereInput>>;
  Product?: InputMaybe<ProductRelationFilter>;
  Varients?: InputMaybe<BundleItemListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  currentStockUnits?: InputMaybe<IntNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  hsn?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  mRPrice?: InputMaybe<FloatNullableFilter>;
  moq?: InputMaybe<IntNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  productId?: InputMaybe<StringNullableFilter>;
  unitPrice?: InputMaybe<FloatNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type BundleWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type Category = {
  __typename?: 'Category';
  Attributes?: Maybe<Array<CategoryAttribute>>;
  CategoryAsset?: Maybe<CategoryAsset>;
  CategoryLinkedCategoryHeader?: Maybe<Array<CategoryLinkedCategoryHeader>>;
  Category_TL?: Maybe<Array<Category_Tl>>;
  Products?: Maybe<Array<Product>>;
  _count: CategoryCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryAsset = {
  __typename?: 'CategoryAsset';
  Asset?: Maybe<Asset>;
  Category?: Maybe<Category>;
  assetId: Scalars['String'];
  categoryId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryAssetCategoryIdAssetIdCompoundUniqueInput = {
  assetId: Scalars['String'];
  categoryId: Scalars['String'];
};

export type CategoryAssetCountAggregate = {
  __typename?: 'CategoryAssetCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  categoryId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  internalName: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CategoryAssetCreateNestedOneWithoutAssetInput = {
  connect?: InputMaybe<CategoryAssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryAssetCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<CategoryAssetCreateWithoutAssetInput>;
};

export type CategoryAssetCreateNestedOneWithoutCategoryInput = {
  connect?: InputMaybe<CategoryAssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryAssetCreateOrConnectWithoutCategoryInput>;
  create?: InputMaybe<CategoryAssetCreateWithoutCategoryInput>;
};

export type CategoryAssetCreateOrConnectWithoutAssetInput = {
  create: CategoryAssetCreateWithoutAssetInput;
  where: CategoryAssetWhereUniqueInput;
};

export type CategoryAssetCreateOrConnectWithoutCategoryInput = {
  create: CategoryAssetCreateWithoutCategoryInput;
  where: CategoryAssetWhereUniqueInput;
};

export type CategoryAssetCreateWithoutAssetInput = {
  Category?: InputMaybe<CategoryCreateNestedOneWithoutCategoryAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryAssetCreateWithoutCategoryInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutCategoryAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryAssetMaxAggregate = {
  __typename?: 'CategoryAssetMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryAssetMinAggregate = {
  __typename?: 'CategoryAssetMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryAssetOrderByWithRelationInput = {
  Asset?: InputMaybe<AssetOrderByWithRelationInput>;
  Category?: InputMaybe<CategoryOrderByWithRelationInput>;
  assetId?: InputMaybe<SortOrder>;
  categoryId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  internalName?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type CategoryAssetRelationFilter = {
  is?: InputMaybe<CategoryAssetWhereInput>;
  isNot?: InputMaybe<CategoryAssetWhereInput>;
};

export type CategoryAssetUpdateOneWithoutAssetInput = {
  connect?: InputMaybe<CategoryAssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryAssetCreateOrConnectWithoutAssetInput>;
  create?: InputMaybe<CategoryAssetCreateWithoutAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryAssetUpdateWithoutAssetInput>;
  upsert?: InputMaybe<CategoryAssetUpsertWithoutAssetInput>;
};

export type CategoryAssetUpdateOneWithoutCategoryInput = {
  connect?: InputMaybe<CategoryAssetWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryAssetCreateOrConnectWithoutCategoryInput>;
  create?: InputMaybe<CategoryAssetCreateWithoutCategoryInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryAssetUpdateWithoutCategoryInput>;
  upsert?: InputMaybe<CategoryAssetUpsertWithoutCategoryInput>;
};

export type CategoryAssetUpdateWithoutAssetInput = {
  Category?: InputMaybe<CategoryUpdateOneWithoutCategoryAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryAssetUpdateWithoutCategoryInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutCategoryAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryAssetUpsertWithoutAssetInput = {
  create: CategoryAssetCreateWithoutAssetInput;
  update: CategoryAssetUpdateWithoutAssetInput;
};

export type CategoryAssetUpsertWithoutCategoryInput = {
  create: CategoryAssetCreateWithoutCategoryInput;
  update: CategoryAssetUpdateWithoutCategoryInput;
};

export type CategoryAssetWhereInput = {
  AND?: InputMaybe<Array<CategoryAssetWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  Category?: InputMaybe<CategoryRelationFilter>;
  NOT?: InputMaybe<Array<CategoryAssetWhereInput>>;
  OR?: InputMaybe<Array<CategoryAssetWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryAssetWhereUniqueInput = {
  assetId?: InputMaybe<Scalars['String']>;
  categoryId?: InputMaybe<Scalars['String']>;
  categoryId_assetId?: InputMaybe<CategoryAssetCategoryIdAssetIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type CategoryAttribute = {
  __typename?: 'CategoryAttribute';
  Attribute?: Maybe<Attribute>;
  Category?: Maybe<Category>;
  attributeId: Scalars['String'];
  categoryId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryAttributeCategoryIdAttributeIdCompoundUniqueInput = {
  attributeId: Scalars['String'];
  categoryId: Scalars['String'];
};

export type CategoryAttributeCountAggregate = {
  __typename?: 'CategoryAttributeCountAggregate';
  _all: Scalars['Int'];
  attributeId: Scalars['Int'];
  categoryId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CategoryAttributeCreateManyAttributeInput = {
  categoryId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryAttributeCreateManyAttributeInputEnvelope = {
  data: Array<CategoryAttributeCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryAttributeCreateManyCategoryInput = {
  attributeId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryAttributeCreateManyCategoryInputEnvelope = {
  data: Array<CategoryAttributeCreateManyCategoryInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryAttributeCreateNestedManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryAttributeCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<CategoryAttributeCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<CategoryAttributeCreateManyAttributeInputEnvelope>;
};

export type CategoryAttributeCreateNestedManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryAttributeCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<Array<CategoryAttributeCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<CategoryAttributeCreateManyCategoryInputEnvelope>;
};

export type CategoryAttributeCreateOrConnectWithoutAttributeInput = {
  create: CategoryAttributeCreateWithoutAttributeInput;
  where: CategoryAttributeWhereUniqueInput;
};

export type CategoryAttributeCreateOrConnectWithoutCategoryInput = {
  create: CategoryAttributeCreateWithoutCategoryInput;
  where: CategoryAttributeWhereUniqueInput;
};

export type CategoryAttributeCreateWithoutAttributeInput = {
  Category?: InputMaybe<CategoryCreateNestedOneWithoutAttributesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryAttributeCreateWithoutCategoryInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutCategoryAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryAttributeListRelationFilter = {
  every?: InputMaybe<CategoryAttributeWhereInput>;
  none?: InputMaybe<CategoryAttributeWhereInput>;
  some?: InputMaybe<CategoryAttributeWhereInput>;
};

export type CategoryAttributeMaxAggregate = {
  __typename?: 'CategoryAttributeMaxAggregate';
  attributeId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryAttributeMinAggregate = {
  __typename?: 'CategoryAttributeMinAggregate';
  attributeId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryAttributeOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CategoryAttributeScalarWhereInput = {
  AND?: InputMaybe<Array<CategoryAttributeScalarWhereInput>>;
  NOT?: InputMaybe<Array<CategoryAttributeScalarWhereInput>>;
  OR?: InputMaybe<Array<CategoryAttributeScalarWhereInput>>;
  attributeId?: InputMaybe<StringFilter>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryAttributeUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryAttributeUpdateManyWithWhereWithoutAttributeInput = {
  data: CategoryAttributeUpdateManyMutationInput;
  where: CategoryAttributeScalarWhereInput;
};

export type CategoryAttributeUpdateManyWithWhereWithoutCategoryInput = {
  data: CategoryAttributeUpdateManyMutationInput;
  where: CategoryAttributeScalarWhereInput;
};

export type CategoryAttributeUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryAttributeCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<CategoryAttributeCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<CategoryAttributeCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryAttributeScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryAttributeUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryAttributeUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryAttributeUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type CategoryAttributeUpdateManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryAttributeCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<Array<CategoryAttributeCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<CategoryAttributeCreateManyCategoryInputEnvelope>;
  delete?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryAttributeScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryAttributeWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryAttributeUpdateWithWhereUniqueWithoutCategoryInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryAttributeUpdateManyWithWhereWithoutCategoryInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryAttributeUpsertWithWhereUniqueWithoutCategoryInput>
  >;
};

export type CategoryAttributeUpdateWithWhereUniqueWithoutAttributeInput = {
  data: CategoryAttributeUpdateWithoutAttributeInput;
  where: CategoryAttributeWhereUniqueInput;
};

export type CategoryAttributeUpdateWithWhereUniqueWithoutCategoryInput = {
  data: CategoryAttributeUpdateWithoutCategoryInput;
  where: CategoryAttributeWhereUniqueInput;
};

export type CategoryAttributeUpdateWithoutAttributeInput = {
  Category?: InputMaybe<CategoryUpdateOneWithoutAttributesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryAttributeUpdateWithoutCategoryInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutCategoryAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryAttributeUpsertWithWhereUniqueWithoutAttributeInput = {
  create: CategoryAttributeCreateWithoutAttributeInput;
  update: CategoryAttributeUpdateWithoutAttributeInput;
  where: CategoryAttributeWhereUniqueInput;
};

export type CategoryAttributeUpsertWithWhereUniqueWithoutCategoryInput = {
  create: CategoryAttributeCreateWithoutCategoryInput;
  update: CategoryAttributeUpdateWithoutCategoryInput;
  where: CategoryAttributeWhereUniqueInput;
};

export type CategoryAttributeWhereInput = {
  AND?: InputMaybe<Array<CategoryAttributeWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  Category?: InputMaybe<CategoryRelationFilter>;
  NOT?: InputMaybe<Array<CategoryAttributeWhereInput>>;
  OR?: InputMaybe<Array<CategoryAttributeWhereInput>>;
  attributeId?: InputMaybe<StringFilter>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryAttributeWhereUniqueInput = {
  categoryId_attributeId?: InputMaybe<CategoryAttributeCategoryIdAttributeIdCompoundUniqueInput>;
};

export type CategoryCount = {
  __typename?: 'CategoryCount';
  Attributes: Scalars['Int'];
  CategoryLinkedCategoryHeader: Scalars['Int'];
  Category_TL: Scalars['Int'];
  Products: Scalars['Int'];
};

export type CategoryCountAggregate = {
  __typename?: 'CategoryCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CategoryCreateNestedOneWithoutAttributesInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<CategoryCreateWithoutAttributesInput>;
};

export type CategoryCreateNestedOneWithoutCategoryAssetInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutCategoryAssetInput>;
  create?: InputMaybe<CategoryCreateWithoutCategoryAssetInput>;
};

export type CategoryCreateNestedOneWithoutCategoryLinkedCategoryHeaderInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutCategoryLinkedCategoryHeaderInput>;
  create?: InputMaybe<CategoryCreateWithoutCategoryLinkedCategoryHeaderInput>;
};

export type CategoryCreateNestedOneWithoutCategory_TlInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutCategory_TlInput>;
  create?: InputMaybe<CategoryCreateWithoutCategory_TlInput>;
};

export type CategoryCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<CategoryCreateWithoutProductsInput>;
};

export type CategoryCreateOrConnectWithoutAttributesInput = {
  create: CategoryCreateWithoutAttributesInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryCreateOrConnectWithoutCategoryAssetInput = {
  create: CategoryCreateWithoutCategoryAssetInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryCreateOrConnectWithoutCategoryLinkedCategoryHeaderInput = {
  create: CategoryCreateWithoutCategoryLinkedCategoryHeaderInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryCreateOrConnectWithoutCategory_TlInput = {
  create: CategoryCreateWithoutCategory_TlInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryCreateOrConnectWithoutProductsInput = {
  create: CategoryCreateWithoutProductsInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryCreateWithoutAttributesInput = {
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlCreateNestedManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryCreateWithoutCategoryAssetInput = {
  Attributes?: InputMaybe<CategoryAttributeCreateNestedManyWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlCreateNestedManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryCreateWithoutCategoryLinkedCategoryHeaderInput = {
  Attributes?: InputMaybe<CategoryAttributeCreateNestedManyWithoutCategoryInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlCreateNestedManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryCreateWithoutCategory_TlInput = {
  Attributes?: InputMaybe<CategoryAttributeCreateNestedManyWithoutCategoryInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryCreateWithoutProductsInput = {
  Attributes?: InputMaybe<CategoryAttributeCreateNestedManyWithoutCategoryInput>;
  CategoryAsset?: InputMaybe<CategoryAssetCreateNestedOneWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlCreateNestedManyWithoutCategoryInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeader = {
  __typename?: 'CategoryHeader';
  Asset?: Maybe<Asset>;
  CategoryHeaderAttributeValue?: Maybe<Array<CategoryHeaderAttributeValue>>;
  CategoryHeader_TL?: Maybe<Array<CategoryHeader_Tl>>;
  CategoryLinkedCategoryHeader?: Maybe<Array<CategoryLinkedCategoryHeader>>;
  UserPreference?: Maybe<Array<UserPreference>>;
  _count: CategoryHeaderCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryHeaderAttributeValue = {
  __typename?: 'CategoryHeaderAttributeValue';
  Attribute?: Maybe<Attribute>;
  AttributeValue?: Maybe<AttributeValue>;
  CategoryHeader?: Maybe<CategoryHeader>;
  Context?: Maybe<Context>;
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  categoryHeaderId?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCountAggregate = {
  __typename?: 'CategoryHeaderAttributeValueCountAggregate';
  _all: Scalars['Int'];
  attributeId: Scalars['Int'];
  attributeValueId: Scalars['Int'];
  attributeValueText: Scalars['Int'];
  categoryHeaderId: Scalars['Int'];
  contextId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type CategoryHeaderAttributeValueCreateManyAttributeInput = {
  attributeValueId?: InputMaybe<Scalars['String']>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  categoryHeaderId?: InputMaybe<Scalars['String']>;
  contextId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCreateManyAttributeInputEnvelope = {
  data: Array<CategoryHeaderAttributeValueCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryHeaderAttributeValueCreateManyAttributeValueInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  categoryHeaderId?: InputMaybe<Scalars['String']>;
  contextId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCreateManyAttributeValueInputEnvelope =
  {
    data: Array<CategoryHeaderAttributeValueCreateManyAttributeValueInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type CategoryHeaderAttributeValueCreateManyCategoryHeaderInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  attributeValueId?: InputMaybe<Scalars['String']>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  contextId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCreateManyCategoryHeaderInputEnvelope =
  {
    data: Array<CategoryHeaderAttributeValueCreateManyCategoryHeaderInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type CategoryHeaderAttributeValueCreateManyContextInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  attributeValueId?: InputMaybe<Scalars['String']>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  categoryHeaderId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCreateManyContextInputEnvelope = {
  data: Array<CategoryHeaderAttributeValueCreateManyContextInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeInput =
  {
    connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<CategoryHeaderAttributeValueCreateOrConnectWithoutAttributeInput>
    >;
    create?: InputMaybe<
      Array<CategoryHeaderAttributeValueCreateWithoutAttributeInput>
    >;
    createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyAttributeInputEnvelope>;
  };

export type CategoryHeaderAttributeValueCreateNestedManyWithoutAttributeValueInput =
  {
    connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<CategoryHeaderAttributeValueCreateOrConnectWithoutAttributeValueInput>
    >;
    create?: InputMaybe<
      Array<CategoryHeaderAttributeValueCreateWithoutAttributeValueInput>
    >;
    createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyAttributeValueInputEnvelope>;
  };

export type CategoryHeaderAttributeValueCreateNestedManyWithoutCategoryHeaderInput =
  {
    connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<CategoryHeaderAttributeValueCreateOrConnectWithoutCategoryHeaderInput>
    >;
    create?: InputMaybe<
      Array<CategoryHeaderAttributeValueCreateWithoutCategoryHeaderInput>
    >;
    createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyCategoryHeaderInputEnvelope>;
  };

export type CategoryHeaderAttributeValueCreateNestedManyWithoutContextInput = {
  connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateWithoutContextInput>
  >;
  createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyContextInputEnvelope>;
};

export type CategoryHeaderAttributeValueCreateOrConnectWithoutAttributeInput = {
  create: CategoryHeaderAttributeValueCreateWithoutAttributeInput;
  where: CategoryHeaderAttributeValueWhereUniqueInput;
};

export type CategoryHeaderAttributeValueCreateOrConnectWithoutAttributeValueInput =
  {
    create: CategoryHeaderAttributeValueCreateWithoutAttributeValueInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueCreateOrConnectWithoutCategoryHeaderInput =
  {
    create: CategoryHeaderAttributeValueCreateWithoutCategoryHeaderInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueCreateOrConnectWithoutContextInput = {
  create: CategoryHeaderAttributeValueCreateWithoutContextInput;
  where: CategoryHeaderAttributeValueWhereUniqueInput;
};

export type CategoryHeaderAttributeValueCreateWithoutAttributeInput = {
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCreateWithoutAttributeValueInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCreateWithoutCategoryHeaderInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueCreateWithoutContextInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueListRelationFilter = {
  every?: InputMaybe<CategoryHeaderAttributeValueWhereInput>;
  none?: InputMaybe<CategoryHeaderAttributeValueWhereInput>;
  some?: InputMaybe<CategoryHeaderAttributeValueWhereInput>;
};

export type CategoryHeaderAttributeValueMaxAggregate = {
  __typename?: 'CategoryHeaderAttributeValueMaxAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  categoryHeaderId?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueMinAggregate = {
  __typename?: 'CategoryHeaderAttributeValueMinAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  categoryHeaderId?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type CategoryHeaderAttributeValueOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CategoryHeaderAttributeValueScalarWhereInput = {
  AND?: InputMaybe<Array<CategoryHeaderAttributeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<CategoryHeaderAttributeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<CategoryHeaderAttributeValueScalarWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  attributeValueId?: InputMaybe<StringNullableFilter>;
  attributeValueText?: InputMaybe<StringNullableFilter>;
  categoryHeaderId?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type CategoryHeaderAttributeValueUpdateManyMutationInput = {
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CategoryHeaderAttributeValueUpdateManyWithWhereWithoutAttributeInput =
  {
    data: CategoryHeaderAttributeValueUpdateManyMutationInput;
    where: CategoryHeaderAttributeValueScalarWhereInput;
  };

export type CategoryHeaderAttributeValueUpdateManyWithWhereWithoutAttributeValueInput =
  {
    data: CategoryHeaderAttributeValueUpdateManyMutationInput;
    where: CategoryHeaderAttributeValueScalarWhereInput;
  };

export type CategoryHeaderAttributeValueUpdateManyWithWhereWithoutCategoryHeaderInput =
  {
    data: CategoryHeaderAttributeValueUpdateManyMutationInput;
    where: CategoryHeaderAttributeValueScalarWhereInput;
  };

export type CategoryHeaderAttributeValueUpdateManyWithWhereWithoutContextInput =
  {
    data: CategoryHeaderAttributeValueUpdateManyMutationInput;
    where: CategoryHeaderAttributeValueScalarWhereInput;
  };

export type CategoryHeaderAttributeValueUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateWithoutAttributeInput>
  >;
  createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryHeaderAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type CategoryHeaderAttributeValueUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryHeaderAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type CategoryHeaderAttributeValueUpdateManyWithoutCategoryHeaderInput = {
  connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateOrConnectWithoutCategoryHeaderInput>
  >;
  create?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateWithoutCategoryHeaderInput>
  >;
  createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyCategoryHeaderInputEnvelope>;
  delete?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryHeaderAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutCategoryHeaderInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateManyWithWhereWithoutCategoryHeaderInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutCategoryHeaderInput>
  >;
};

export type CategoryHeaderAttributeValueUpdateManyWithoutContextInput = {
  connect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<
    Array<CategoryHeaderAttributeValueCreateWithoutContextInput>
  >;
  createMany?: InputMaybe<CategoryHeaderAttributeValueCreateManyContextInputEnvelope>;
  delete?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryHeaderAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryHeaderAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutContextInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpdateManyWithWhereWithoutContextInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutContextInput>
  >;
};

export type CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutAttributeInput =
  {
    data: CategoryHeaderAttributeValueUpdateWithoutAttributeInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput =
  {
    data: CategoryHeaderAttributeValueUpdateWithoutAttributeValueInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutCategoryHeaderInput =
  {
    data: CategoryHeaderAttributeValueUpdateWithoutCategoryHeaderInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueUpdateWithWhereUniqueWithoutContextInput =
  {
    data: CategoryHeaderAttributeValueUpdateWithoutContextInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueUpdateWithoutAttributeInput = {
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CategoryHeaderAttributeValueUpdateWithoutAttributeValueInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CategoryHeaderAttributeValueUpdateWithoutCategoryHeaderInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CategoryHeaderAttributeValueUpdateWithoutContextInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateOneWithoutCategoryHeaderAttributeValueInput>;
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutAttributeInput =
  {
    create: CategoryHeaderAttributeValueCreateWithoutAttributeInput;
    update: CategoryHeaderAttributeValueUpdateWithoutAttributeInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput =
  {
    create: CategoryHeaderAttributeValueCreateWithoutAttributeValueInput;
    update: CategoryHeaderAttributeValueUpdateWithoutAttributeValueInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutCategoryHeaderInput =
  {
    create: CategoryHeaderAttributeValueCreateWithoutCategoryHeaderInput;
    update: CategoryHeaderAttributeValueUpdateWithoutCategoryHeaderInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueUpsertWithWhereUniqueWithoutContextInput =
  {
    create: CategoryHeaderAttributeValueCreateWithoutContextInput;
    update: CategoryHeaderAttributeValueUpdateWithoutContextInput;
    where: CategoryHeaderAttributeValueWhereUniqueInput;
  };

export type CategoryHeaderAttributeValueWhereInput = {
  AND?: InputMaybe<Array<CategoryHeaderAttributeValueWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  AttributeValue?: InputMaybe<AttributeValueRelationFilter>;
  CategoryHeader?: InputMaybe<CategoryHeaderRelationFilter>;
  Context?: InputMaybe<ContextRelationFilter>;
  NOT?: InputMaybe<Array<CategoryHeaderAttributeValueWhereInput>>;
  OR?: InputMaybe<Array<CategoryHeaderAttributeValueWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  attributeValueId?: InputMaybe<StringNullableFilter>;
  attributeValueText?: InputMaybe<StringNullableFilter>;
  categoryHeaderId?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type CategoryHeaderAttributeValueWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type CategoryHeaderCount = {
  __typename?: 'CategoryHeaderCount';
  CategoryHeaderAttributeValue: Scalars['Int'];
  CategoryHeader_TL: Scalars['Int'];
  CategoryLinkedCategoryHeader: Scalars['Int'];
  UserPreference: Scalars['Int'];
};

export type CategoryHeaderCountAggregate = {
  __typename?: 'CategoryHeaderCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  logoAssetId: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CategoryHeaderCreateManyAssetInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeaderCreateManyAssetInputEnvelope = {
  data: Array<CategoryHeaderCreateManyAssetInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryHeaderCreateNestedManyWithoutAssetInput = {
  connect?: InputMaybe<Array<CategoryHeaderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeaderCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<CategoryHeaderCreateWithoutAssetInput>>;
  createMany?: InputMaybe<CategoryHeaderCreateManyAssetInputEnvelope>;
};

export type CategoryHeaderCreateNestedOneWithoutCategoryHeaderAttributeValueInput =
  {
    connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
    connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
    create?: InputMaybe<CategoryHeaderCreateWithoutCategoryHeaderAttributeValueInput>;
  };

export type CategoryHeaderCreateNestedOneWithoutCategoryHeader_TlInput = {
  connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutCategoryHeader_TlInput>;
  create?: InputMaybe<CategoryHeaderCreateWithoutCategoryHeader_TlInput>;
};

export type CategoryHeaderCreateNestedOneWithoutCategoryLinkedCategoryHeaderInput =
  {
    connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
    connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutCategoryLinkedCategoryHeaderInput>;
    create?: InputMaybe<CategoryHeaderCreateWithoutCategoryLinkedCategoryHeaderInput>;
  };

export type CategoryHeaderCreateNestedOneWithoutUserPreferenceInput = {
  connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutUserPreferenceInput>;
  create?: InputMaybe<CategoryHeaderCreateWithoutUserPreferenceInput>;
};

export type CategoryHeaderCreateOrConnectWithoutAssetInput = {
  create: CategoryHeaderCreateWithoutAssetInput;
  where: CategoryHeaderWhereUniqueInput;
};

export type CategoryHeaderCreateOrConnectWithoutCategoryHeaderAttributeValueInput =
  {
    create: CategoryHeaderCreateWithoutCategoryHeaderAttributeValueInput;
    where: CategoryHeaderWhereUniqueInput;
  };

export type CategoryHeaderCreateOrConnectWithoutCategoryHeader_TlInput = {
  create: CategoryHeaderCreateWithoutCategoryHeader_TlInput;
  where: CategoryHeaderWhereUniqueInput;
};

export type CategoryHeaderCreateOrConnectWithoutCategoryLinkedCategoryHeaderInput =
  {
    create: CategoryHeaderCreateWithoutCategoryLinkedCategoryHeaderInput;
    where: CategoryHeaderWhereUniqueInput;
  };

export type CategoryHeaderCreateOrConnectWithoutUserPreferenceInput = {
  create: CategoryHeaderCreateWithoutUserPreferenceInput;
  where: CategoryHeaderWhereUniqueInput;
};

export type CategoryHeaderCreateWithoutAssetInput = {
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlCreateNestedManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeaderCreateWithoutCategoryHeaderAttributeValueInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlCreateNestedManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeaderCreateWithoutCategoryHeader_TlInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutCategoryHeaderInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeaderCreateWithoutCategoryLinkedCategoryHeaderInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutCategoryHeaderInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlCreateNestedManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeaderCreateWithoutUserPreferenceInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutCategoryHeaderInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlCreateNestedManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeaderDto = {
  __typename?: 'CategoryHeaderDTO';
  Asset?: Maybe<Asset>;
  CategoryHeaderAttributeValue?: Maybe<Array<CategoryHeaderAttributeValue>>;
  CategoryHeader_TL?: Maybe<Array<CategoryHeader_Tl>>;
  CategoryLinkedCategoryHeader?: Maybe<Array<CategoryLinkedCategoryHeader>>;
  UserPreference?: Maybe<Array<UserPreference>>;
  _count: CategoryHeaderCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryHeaderListRelationFilter = {
  every?: InputMaybe<CategoryHeaderWhereInput>;
  none?: InputMaybe<CategoryHeaderWhereInput>;
  some?: InputMaybe<CategoryHeaderWhereInput>;
};

export type CategoryHeaderMaxAggregate = {
  __typename?: 'CategoryHeaderMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryHeaderMinAggregate = {
  __typename?: 'CategoryHeaderMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryHeaderOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CategoryHeaderOrderByWithRelationInputDto = {
  createdAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type CategoryHeaderRelationFilter = {
  is?: InputMaybe<CategoryHeaderWhereInput>;
  isNot?: InputMaybe<CategoryHeaderWhereInput>;
};

export type CategoryHeaderScalarWhereInput = {
  AND?: InputMaybe<Array<CategoryHeaderScalarWhereInput>>;
  NOT?: InputMaybe<Array<CategoryHeaderScalarWhereInput>>;
  OR?: InputMaybe<Array<CategoryHeaderScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  logoAssetId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryHeaderUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeaderUpdateManyWithWhereWithoutAssetInput = {
  data: CategoryHeaderUpdateManyMutationInput;
  where: CategoryHeaderScalarWhereInput;
};

export type CategoryHeaderUpdateManyWithoutAssetInput = {
  connect?: InputMaybe<Array<CategoryHeaderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeaderCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<CategoryHeaderCreateWithoutAssetInput>>;
  createMany?: InputMaybe<CategoryHeaderCreateManyAssetInputEnvelope>;
  delete?: InputMaybe<Array<CategoryHeaderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryHeaderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryHeaderWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryHeaderWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryHeaderUpdateWithWhereUniqueWithoutAssetInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryHeaderUpdateManyWithWhereWithoutAssetInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryHeaderUpsertWithWhereUniqueWithoutAssetInput>
  >;
};

export type CategoryHeaderUpdateOneWithoutCategoryHeaderAttributeValueInput = {
  connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
  create?: InputMaybe<CategoryHeaderCreateWithoutCategoryHeaderAttributeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryHeaderUpdateWithoutCategoryHeaderAttributeValueInput>;
  upsert?: InputMaybe<CategoryHeaderUpsertWithoutCategoryHeaderAttributeValueInput>;
};

export type CategoryHeaderUpdateOneWithoutCategoryHeader_TlInput = {
  connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutCategoryHeader_TlInput>;
  create?: InputMaybe<CategoryHeaderCreateWithoutCategoryHeader_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryHeaderUpdateWithoutCategoryHeader_TlInput>;
  upsert?: InputMaybe<CategoryHeaderUpsertWithoutCategoryHeader_TlInput>;
};

export type CategoryHeaderUpdateOneWithoutCategoryLinkedCategoryHeaderInput = {
  connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutCategoryLinkedCategoryHeaderInput>;
  create?: InputMaybe<CategoryHeaderCreateWithoutCategoryLinkedCategoryHeaderInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryHeaderUpdateWithoutCategoryLinkedCategoryHeaderInput>;
  upsert?: InputMaybe<CategoryHeaderUpsertWithoutCategoryLinkedCategoryHeaderInput>;
};

export type CategoryHeaderUpdateOneWithoutUserPreferenceInput = {
  connect?: InputMaybe<CategoryHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryHeaderCreateOrConnectWithoutUserPreferenceInput>;
  create?: InputMaybe<CategoryHeaderCreateWithoutUserPreferenceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryHeaderUpdateWithoutUserPreferenceInput>;
  upsert?: InputMaybe<CategoryHeaderUpsertWithoutUserPreferenceInput>;
};

export type CategoryHeaderUpdateWithWhereUniqueWithoutAssetInput = {
  data: CategoryHeaderUpdateWithoutAssetInput;
  where: CategoryHeaderWhereUniqueInput;
};

export type CategoryHeaderUpdateWithoutAssetInput = {
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlUpdateManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeaderUpdateWithoutCategoryHeaderAttributeValueInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlUpdateManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeaderUpdateWithoutCategoryHeader_TlInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutCategoryHeaderInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeaderUpdateWithoutCategoryLinkedCategoryHeaderInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutCategoryHeaderInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlUpdateManyWithoutCategoryHeaderInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeaderUpdateWithoutUserPreferenceInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutCategoryHeaderInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutCategoryHeaderInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlUpdateManyWithoutCategoryHeaderInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryHeaderInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeaderUpsertWithWhereUniqueWithoutAssetInput = {
  create: CategoryHeaderCreateWithoutAssetInput;
  update: CategoryHeaderUpdateWithoutAssetInput;
  where: CategoryHeaderWhereUniqueInput;
};

export type CategoryHeaderUpsertWithoutCategoryHeaderAttributeValueInput = {
  create: CategoryHeaderCreateWithoutCategoryHeaderAttributeValueInput;
  update: CategoryHeaderUpdateWithoutCategoryHeaderAttributeValueInput;
};

export type CategoryHeaderUpsertWithoutCategoryHeader_TlInput = {
  create: CategoryHeaderCreateWithoutCategoryHeader_TlInput;
  update: CategoryHeaderUpdateWithoutCategoryHeader_TlInput;
};

export type CategoryHeaderUpsertWithoutCategoryLinkedCategoryHeaderInput = {
  create: CategoryHeaderCreateWithoutCategoryLinkedCategoryHeaderInput;
  update: CategoryHeaderUpdateWithoutCategoryLinkedCategoryHeaderInput;
};

export type CategoryHeaderUpsertWithoutUserPreferenceInput = {
  create: CategoryHeaderCreateWithoutUserPreferenceInput;
  update: CategoryHeaderUpdateWithoutUserPreferenceInput;
};

export type CategoryHeaderWhereInput = {
  AND?: InputMaybe<Array<CategoryHeaderWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueListRelationFilter>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlListRelationFilter>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderListRelationFilter>;
  NOT?: InputMaybe<Array<CategoryHeaderWhereInput>>;
  OR?: InputMaybe<Array<CategoryHeaderWhereInput>>;
  UserPreference?: InputMaybe<UserPreferenceListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  logoAssetId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryHeaderWhereInputDto = {
  AND?: InputMaybe<Array<CategoryHeaderWhereInputDto>>;
  NOT?: InputMaybe<Array<CategoryHeaderWhereInputDto>>;
  OR?: InputMaybe<Array<CategoryHeaderWhereInputDto>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  logoAssetId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
};

export type CategoryHeaderWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type CategoryHeader_Tl = {
  __typename?: 'CategoryHeader_TL';
  CategoryHeader?: Maybe<CategoryHeader>;
  Language?: Maybe<Language>;
  categoryHeaderId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  languageId: Scalars['String'];
  name: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryHeader_TlCountAggregate = {
  __typename?: 'CategoryHeader_TLCountAggregate';
  _all: Scalars['Int'];
  categoryHeaderId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  languageId: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CategoryHeader_TlCreateManyCategoryHeaderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  languageId: Scalars['String'];
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeader_TlCreateManyCategoryHeaderInputEnvelope = {
  data: Array<CategoryHeader_TlCreateManyCategoryHeaderInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryHeader_TlCreateManyLanguageInput = {
  categoryHeaderId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeader_TlCreateManyLanguageInputEnvelope = {
  data: Array<CategoryHeader_TlCreateManyLanguageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryHeader_TlCreateNestedManyWithoutCategoryHeaderInput = {
  connect?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeader_TlCreateOrConnectWithoutCategoryHeaderInput>
  >;
  create?: InputMaybe<Array<CategoryHeader_TlCreateWithoutCategoryHeaderInput>>;
  createMany?: InputMaybe<CategoryHeader_TlCreateManyCategoryHeaderInputEnvelope>;
};

export type CategoryHeader_TlCreateNestedManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeader_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<CategoryHeader_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<CategoryHeader_TlCreateManyLanguageInputEnvelope>;
};

export type CategoryHeader_TlCreateOrConnectWithoutCategoryHeaderInput = {
  create: CategoryHeader_TlCreateWithoutCategoryHeaderInput;
  where: CategoryHeader_TlWhereUniqueInput;
};

export type CategoryHeader_TlCreateOrConnectWithoutLanguageInput = {
  create: CategoryHeader_TlCreateWithoutLanguageInput;
  where: CategoryHeader_TlWhereUniqueInput;
};

export type CategoryHeader_TlCreateWithoutCategoryHeaderInput = {
  Language?: InputMaybe<LanguageCreateNestedOneWithoutCategoryHeader_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeader_TlCreateWithoutLanguageInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedOneWithoutCategoryHeader_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryHeader_TlListRelationFilter = {
  every?: InputMaybe<CategoryHeader_TlWhereInput>;
  none?: InputMaybe<CategoryHeader_TlWhereInput>;
  some?: InputMaybe<CategoryHeader_TlWhereInput>;
};

export type CategoryHeader_TlMaxAggregate = {
  __typename?: 'CategoryHeader_TLMaxAggregate';
  categoryHeaderId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryHeader_TlMinAggregate = {
  __typename?: 'CategoryHeader_TLMinAggregate';
  categoryHeaderId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryHeader_TlNameLanguageIdCategoryHeaderIdCompoundUniqueInput =
  {
    categoryHeaderId: Scalars['String'];
    languageId: Scalars['String'];
    name: Scalars['String'];
  };

export type CategoryHeader_TlScalarWhereInput = {
  AND?: InputMaybe<Array<CategoryHeader_TlScalarWhereInput>>;
  NOT?: InputMaybe<Array<CategoryHeader_TlScalarWhereInput>>;
  OR?: InputMaybe<Array<CategoryHeader_TlScalarWhereInput>>;
  categoryHeaderId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  languageId?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryHeader_TlUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeader_TlUpdateManyWithWhereWithoutCategoryHeaderInput = {
  data: CategoryHeader_TlUpdateManyMutationInput;
  where: CategoryHeader_TlScalarWhereInput;
};

export type CategoryHeader_TlUpdateManyWithWhereWithoutLanguageInput = {
  data: CategoryHeader_TlUpdateManyMutationInput;
  where: CategoryHeader_TlScalarWhereInput;
};

export type CategoryHeader_TlUpdateManyWithoutCategoryHeaderInput = {
  connect?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeader_TlCreateOrConnectWithoutCategoryHeaderInput>
  >;
  create?: InputMaybe<Array<CategoryHeader_TlCreateWithoutCategoryHeaderInput>>;
  createMany?: InputMaybe<CategoryHeader_TlCreateManyCategoryHeaderInputEnvelope>;
  delete?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryHeader_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryHeader_TlUpdateWithWhereUniqueWithoutCategoryHeaderInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryHeader_TlUpdateManyWithWhereWithoutCategoryHeaderInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryHeader_TlUpsertWithWhereUniqueWithoutCategoryHeaderInput>
  >;
};

export type CategoryHeader_TlUpdateManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryHeader_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<CategoryHeader_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<CategoryHeader_TlCreateManyLanguageInputEnvelope>;
  delete?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryHeader_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryHeader_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryHeader_TlUpdateWithWhereUniqueWithoutLanguageInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryHeader_TlUpdateManyWithWhereWithoutLanguageInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryHeader_TlUpsertWithWhereUniqueWithoutLanguageInput>
  >;
};

export type CategoryHeader_TlUpdateWithWhereUniqueWithoutCategoryHeaderInput = {
  data: CategoryHeader_TlUpdateWithoutCategoryHeaderInput;
  where: CategoryHeader_TlWhereUniqueInput;
};

export type CategoryHeader_TlUpdateWithWhereUniqueWithoutLanguageInput = {
  data: CategoryHeader_TlUpdateWithoutLanguageInput;
  where: CategoryHeader_TlWhereUniqueInput;
};

export type CategoryHeader_TlUpdateWithoutCategoryHeaderInput = {
  Language?: InputMaybe<LanguageUpdateOneWithoutCategoryHeader_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeader_TlUpdateWithoutLanguageInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateOneWithoutCategoryHeader_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryHeader_TlUpsertWithWhereUniqueWithoutCategoryHeaderInput = {
  create: CategoryHeader_TlCreateWithoutCategoryHeaderInput;
  update: CategoryHeader_TlUpdateWithoutCategoryHeaderInput;
  where: CategoryHeader_TlWhereUniqueInput;
};

export type CategoryHeader_TlUpsertWithWhereUniqueWithoutLanguageInput = {
  create: CategoryHeader_TlCreateWithoutLanguageInput;
  update: CategoryHeader_TlUpdateWithoutLanguageInput;
  where: CategoryHeader_TlWhereUniqueInput;
};

export type CategoryHeader_TlWhereInput = {
  AND?: InputMaybe<Array<CategoryHeader_TlWhereInput>>;
  CategoryHeader?: InputMaybe<CategoryHeaderRelationFilter>;
  Language?: InputMaybe<LanguageRelationFilter>;
  NOT?: InputMaybe<Array<CategoryHeader_TlWhereInput>>;
  OR?: InputMaybe<Array<CategoryHeader_TlWhereInput>>;
  categoryHeaderId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  languageId?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryHeader_TlWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name_languageId_categoryHeaderId?: InputMaybe<CategoryHeader_TlNameLanguageIdCategoryHeaderIdCompoundUniqueInput>;
};

export type CategoryLinkedCategoryHeader = {
  __typename?: 'CategoryLinkedCategoryHeader';
  Category?: Maybe<Category>;
  CategoryHeader?: Maybe<CategoryHeader>;
  categoryHeaderId: Scalars['String'];
  categoryId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryLinkedCategoryHeaderCategoryIdCategoryHeaderIdCompoundUniqueInput =
  {
    categoryHeaderId: Scalars['String'];
    categoryId: Scalars['String'];
  };

export type CategoryLinkedCategoryHeaderCountAggregate = {
  __typename?: 'CategoryLinkedCategoryHeaderCountAggregate';
  _all: Scalars['Int'];
  categoryHeaderId: Scalars['Int'];
  categoryId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CategoryLinkedCategoryHeaderCreateManyCategoryHeaderInput = {
  categoryId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryLinkedCategoryHeaderCreateManyCategoryHeaderInputEnvelope =
  {
    data: Array<CategoryLinkedCategoryHeaderCreateManyCategoryHeaderInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type CategoryLinkedCategoryHeaderCreateManyCategoryInput = {
  categoryHeaderId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryLinkedCategoryHeaderCreateManyCategoryInputEnvelope = {
  data: Array<CategoryLinkedCategoryHeaderCreateManyCategoryInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryHeaderInput =
  {
    connect?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<CategoryLinkedCategoryHeaderCreateOrConnectWithoutCategoryHeaderInput>
    >;
    create?: InputMaybe<
      Array<CategoryLinkedCategoryHeaderCreateWithoutCategoryHeaderInput>
    >;
    createMany?: InputMaybe<CategoryLinkedCategoryHeaderCreateManyCategoryHeaderInputEnvelope>;
  };

export type CategoryLinkedCategoryHeaderCreateNestedManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderCreateWithoutCategoryInput>
  >;
  createMany?: InputMaybe<CategoryLinkedCategoryHeaderCreateManyCategoryInputEnvelope>;
};

export type CategoryLinkedCategoryHeaderCreateOrConnectWithoutCategoryHeaderInput =
  {
    create: CategoryLinkedCategoryHeaderCreateWithoutCategoryHeaderInput;
    where: CategoryLinkedCategoryHeaderWhereUniqueInput;
  };

export type CategoryLinkedCategoryHeaderCreateOrConnectWithoutCategoryInput = {
  create: CategoryLinkedCategoryHeaderCreateWithoutCategoryInput;
  where: CategoryLinkedCategoryHeaderWhereUniqueInput;
};

export type CategoryLinkedCategoryHeaderCreateWithoutCategoryHeaderInput = {
  Category?: InputMaybe<CategoryCreateNestedOneWithoutCategoryLinkedCategoryHeaderInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryLinkedCategoryHeaderCreateWithoutCategoryInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedOneWithoutCategoryLinkedCategoryHeaderInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CategoryLinkedCategoryHeaderListRelationFilter = {
  every?: InputMaybe<CategoryLinkedCategoryHeaderWhereInput>;
  none?: InputMaybe<CategoryLinkedCategoryHeaderWhereInput>;
  some?: InputMaybe<CategoryLinkedCategoryHeaderWhereInput>;
};

export type CategoryLinkedCategoryHeaderMaxAggregate = {
  __typename?: 'CategoryLinkedCategoryHeaderMaxAggregate';
  categoryHeaderId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryLinkedCategoryHeaderMinAggregate = {
  __typename?: 'CategoryLinkedCategoryHeaderMinAggregate';
  categoryHeaderId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryLinkedCategoryHeaderOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CategoryLinkedCategoryHeaderScalarWhereInput = {
  AND?: InputMaybe<Array<CategoryLinkedCategoryHeaderScalarWhereInput>>;
  NOT?: InputMaybe<Array<CategoryLinkedCategoryHeaderScalarWhereInput>>;
  OR?: InputMaybe<Array<CategoryLinkedCategoryHeaderScalarWhereInput>>;
  categoryHeaderId?: InputMaybe<StringFilter>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryLinkedCategoryHeaderUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryLinkedCategoryHeaderUpdateManyWithWhereWithoutCategoryHeaderInput =
  {
    data: CategoryLinkedCategoryHeaderUpdateManyMutationInput;
    where: CategoryLinkedCategoryHeaderScalarWhereInput;
  };

export type CategoryLinkedCategoryHeaderUpdateManyWithWhereWithoutCategoryInput =
  {
    data: CategoryLinkedCategoryHeaderUpdateManyMutationInput;
    where: CategoryLinkedCategoryHeaderScalarWhereInput;
  };

export type CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryHeaderInput = {
  connect?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderCreateOrConnectWithoutCategoryHeaderInput>
  >;
  create?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderCreateWithoutCategoryHeaderInput>
  >;
  createMany?: InputMaybe<CategoryLinkedCategoryHeaderCreateManyCategoryHeaderInputEnvelope>;
  delete?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryLinkedCategoryHeaderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderUpdateWithWhereUniqueWithoutCategoryHeaderInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderUpdateManyWithWhereWithoutCategoryHeaderInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderUpsertWithWhereUniqueWithoutCategoryHeaderInput>
  >;
};

export type CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderCreateWithoutCategoryInput>
  >;
  createMany?: InputMaybe<CategoryLinkedCategoryHeaderCreateManyCategoryInputEnvelope>;
  delete?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CategoryLinkedCategoryHeaderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  set?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderUpdateWithWhereUniqueWithoutCategoryInput>
  >;
  updateMany?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderUpdateManyWithWhereWithoutCategoryInput>
  >;
  upsert?: InputMaybe<
    Array<CategoryLinkedCategoryHeaderUpsertWithWhereUniqueWithoutCategoryInput>
  >;
};

export type CategoryLinkedCategoryHeaderUpdateWithWhereUniqueWithoutCategoryHeaderInput =
  {
    data: CategoryLinkedCategoryHeaderUpdateWithoutCategoryHeaderInput;
    where: CategoryLinkedCategoryHeaderWhereUniqueInput;
  };

export type CategoryLinkedCategoryHeaderUpdateWithWhereUniqueWithoutCategoryInput =
  {
    data: CategoryLinkedCategoryHeaderUpdateWithoutCategoryInput;
    where: CategoryLinkedCategoryHeaderWhereUniqueInput;
  };

export type CategoryLinkedCategoryHeaderUpdateWithoutCategoryHeaderInput = {
  Category?: InputMaybe<CategoryUpdateOneWithoutCategoryLinkedCategoryHeaderInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryLinkedCategoryHeaderUpdateWithoutCategoryInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateOneWithoutCategoryLinkedCategoryHeaderInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryLinkedCategoryHeaderUpsertWithWhereUniqueWithoutCategoryHeaderInput =
  {
    create: CategoryLinkedCategoryHeaderCreateWithoutCategoryHeaderInput;
    update: CategoryLinkedCategoryHeaderUpdateWithoutCategoryHeaderInput;
    where: CategoryLinkedCategoryHeaderWhereUniqueInput;
  };

export type CategoryLinkedCategoryHeaderUpsertWithWhereUniqueWithoutCategoryInput =
  {
    create: CategoryLinkedCategoryHeaderCreateWithoutCategoryInput;
    update: CategoryLinkedCategoryHeaderUpdateWithoutCategoryInput;
    where: CategoryLinkedCategoryHeaderWhereUniqueInput;
  };

export type CategoryLinkedCategoryHeaderWhereInput = {
  AND?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereInput>>;
  Category?: InputMaybe<CategoryRelationFilter>;
  CategoryHeader?: InputMaybe<CategoryHeaderRelationFilter>;
  NOT?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereInput>>;
  OR?: InputMaybe<Array<CategoryLinkedCategoryHeaderWhereInput>>;
  categoryHeaderId?: InputMaybe<StringFilter>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryLinkedCategoryHeaderWhereUniqueInput = {
  categoryId_categoryHeaderId?: InputMaybe<CategoryLinkedCategoryHeaderCategoryIdCategoryHeaderIdCompoundUniqueInput>;
};

export type CategoryMaxAggregate = {
  __typename?: 'CategoryMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryMinAggregate = {
  __typename?: 'CategoryMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CategoryOrderByWithRelationInput = {
  Attributes?: InputMaybe<CategoryAttributeOrderByRelationAggregateInput>;
  CategoryAsset?: InputMaybe<CategoryAssetOrderByWithRelationInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderOrderByRelationAggregateInput>;
  Category_TL?: InputMaybe<Category_TlOrderByRelationAggregateInput>;
  Products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type CategoryRelationFilter = {
  is?: InputMaybe<CategoryWhereInput>;
  isNot?: InputMaybe<CategoryWhereInput>;
};

export type CategoryUpdateOneWithoutAttributesInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<CategoryCreateWithoutAttributesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryUpdateWithoutAttributesInput>;
  upsert?: InputMaybe<CategoryUpsertWithoutAttributesInput>;
};

export type CategoryUpdateOneWithoutCategoryAssetInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutCategoryAssetInput>;
  create?: InputMaybe<CategoryCreateWithoutCategoryAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryUpdateWithoutCategoryAssetInput>;
  upsert?: InputMaybe<CategoryUpsertWithoutCategoryAssetInput>;
};

export type CategoryUpdateOneWithoutCategoryLinkedCategoryHeaderInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutCategoryLinkedCategoryHeaderInput>;
  create?: InputMaybe<CategoryCreateWithoutCategoryLinkedCategoryHeaderInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryUpdateWithoutCategoryLinkedCategoryHeaderInput>;
  upsert?: InputMaybe<CategoryUpsertWithoutCategoryLinkedCategoryHeaderInput>;
};

export type CategoryUpdateOneWithoutCategory_TlInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutCategory_TlInput>;
  create?: InputMaybe<CategoryCreateWithoutCategory_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryUpdateWithoutCategory_TlInput>;
  upsert?: InputMaybe<CategoryUpsertWithoutCategory_TlInput>;
};

export type CategoryUpdateOneWithoutProductsInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<CategoryCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryUpdateWithoutProductsInput>;
  upsert?: InputMaybe<CategoryUpsertWithoutProductsInput>;
};

export type CategoryUpdateWithoutAttributesInput = {
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlUpdateManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutCategoryInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpdateWithoutCategoryAssetInput = {
  Attributes?: InputMaybe<CategoryAttributeUpdateManyWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlUpdateManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutCategoryInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpdateWithoutCategoryLinkedCategoryHeaderInput = {
  Attributes?: InputMaybe<CategoryAttributeUpdateManyWithoutCategoryInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlUpdateManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutCategoryInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpdateWithoutCategory_TlInput = {
  Attributes?: InputMaybe<CategoryAttributeUpdateManyWithoutCategoryInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutCategoryInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpdateWithoutProductsInput = {
  Attributes?: InputMaybe<CategoryAttributeUpdateManyWithoutCategoryInput>;
  CategoryAsset?: InputMaybe<CategoryAssetUpdateOneWithoutCategoryInput>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderUpdateManyWithoutCategoryInput>;
  Category_TL?: InputMaybe<Category_TlUpdateManyWithoutCategoryInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpsertWithoutAttributesInput = {
  create: CategoryCreateWithoutAttributesInput;
  update: CategoryUpdateWithoutAttributesInput;
};

export type CategoryUpsertWithoutCategoryAssetInput = {
  create: CategoryCreateWithoutCategoryAssetInput;
  update: CategoryUpdateWithoutCategoryAssetInput;
};

export type CategoryUpsertWithoutCategoryLinkedCategoryHeaderInput = {
  create: CategoryCreateWithoutCategoryLinkedCategoryHeaderInput;
  update: CategoryUpdateWithoutCategoryLinkedCategoryHeaderInput;
};

export type CategoryUpsertWithoutCategory_TlInput = {
  create: CategoryCreateWithoutCategory_TlInput;
  update: CategoryUpdateWithoutCategory_TlInput;
};

export type CategoryUpsertWithoutProductsInput = {
  create: CategoryCreateWithoutProductsInput;
  update: CategoryUpdateWithoutProductsInput;
};

export type CategoryWhereInput = {
  AND?: InputMaybe<Array<CategoryWhereInput>>;
  Attributes?: InputMaybe<CategoryAttributeListRelationFilter>;
  CategoryAsset?: InputMaybe<CategoryAssetRelationFilter>;
  CategoryLinkedCategoryHeader?: InputMaybe<CategoryLinkedCategoryHeaderListRelationFilter>;
  Category_TL?: InputMaybe<Category_TlListRelationFilter>;
  NOT?: InputMaybe<Array<CategoryWhereInput>>;
  OR?: InputMaybe<Array<CategoryWhereInput>>;
  Products?: InputMaybe<ProductListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CategoryWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Category_Tl = {
  __typename?: 'Category_TL';
  Category?: Maybe<Category>;
  Language?: Maybe<Language>;
  categoryId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  languageId: Scalars['String'];
  name: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type Category_TlCategoryIdLanguageIdCompoundUniqueInput = {
  categoryId: Scalars['String'];
  languageId: Scalars['String'];
};

export type Category_TlCountAggregate = {
  __typename?: 'Category_TLCountAggregate';
  _all: Scalars['Int'];
  categoryId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  languageId: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type Category_TlCreateManyCategoryInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  languageId: Scalars['String'];
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Category_TlCreateManyCategoryInputEnvelope = {
  data: Array<Category_TlCreateManyCategoryInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type Category_TlCreateManyLanguageInput = {
  categoryId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Category_TlCreateManyLanguageInputEnvelope = {
  data: Array<Category_TlCreateManyLanguageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type Category_TlCreateNestedManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Category_TlCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<Array<Category_TlCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<Category_TlCreateManyCategoryInputEnvelope>;
};

export type Category_TlCreateNestedManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Category_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<Category_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<Category_TlCreateManyLanguageInputEnvelope>;
};

export type Category_TlCreateOrConnectWithoutCategoryInput = {
  create: Category_TlCreateWithoutCategoryInput;
  where: Category_TlWhereUniqueInput;
};

export type Category_TlCreateOrConnectWithoutLanguageInput = {
  create: Category_TlCreateWithoutLanguageInput;
  where: Category_TlWhereUniqueInput;
};

export type Category_TlCreateWithoutCategoryInput = {
  Language?: InputMaybe<LanguageCreateNestedOneWithoutCategory_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Category_TlCreateWithoutLanguageInput = {
  Category?: InputMaybe<CategoryCreateNestedOneWithoutCategory_TlInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type Category_TlListRelationFilter = {
  every?: InputMaybe<Category_TlWhereInput>;
  none?: InputMaybe<Category_TlWhereInput>;
  some?: InputMaybe<Category_TlWhereInput>;
};

export type Category_TlMaxAggregate = {
  __typename?: 'Category_TLMaxAggregate';
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type Category_TlMinAggregate = {
  __typename?: 'Category_TLMinAggregate';
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  languageId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type Category_TlNameLanguageIdCategoryIdCompoundUniqueInput = {
  categoryId: Scalars['String'];
  languageId: Scalars['String'];
  name: Scalars['String'];
};

export type Category_TlOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type Category_TlScalarWhereInput = {
  AND?: InputMaybe<Array<Category_TlScalarWhereInput>>;
  NOT?: InputMaybe<Array<Category_TlScalarWhereInput>>;
  OR?: InputMaybe<Array<Category_TlScalarWhereInput>>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  languageId?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type Category_TlUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Category_TlUpdateManyWithWhereWithoutCategoryInput = {
  data: Category_TlUpdateManyMutationInput;
  where: Category_TlScalarWhereInput;
};

export type Category_TlUpdateManyWithWhereWithoutLanguageInput = {
  data: Category_TlUpdateManyMutationInput;
  where: Category_TlScalarWhereInput;
};

export type Category_TlUpdateManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Category_TlCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<Array<Category_TlCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<Category_TlCreateManyCategoryInputEnvelope>;
  delete?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<Category_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<Category_TlUpdateWithWhereUniqueWithoutCategoryInput>
  >;
  updateMany?: InputMaybe<
    Array<Category_TlUpdateManyWithWhereWithoutCategoryInput>
  >;
  upsert?: InputMaybe<
    Array<Category_TlUpsertWithWhereUniqueWithoutCategoryInput>
  >;
};

export type Category_TlUpdateManyWithoutLanguageInput = {
  connect?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<Category_TlCreateOrConnectWithoutLanguageInput>
  >;
  create?: InputMaybe<Array<Category_TlCreateWithoutLanguageInput>>;
  createMany?: InputMaybe<Category_TlCreateManyLanguageInputEnvelope>;
  delete?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<Category_TlScalarWhereInput>>;
  disconnect?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  set?: InputMaybe<Array<Category_TlWhereUniqueInput>>;
  update?: InputMaybe<
    Array<Category_TlUpdateWithWhereUniqueWithoutLanguageInput>
  >;
  updateMany?: InputMaybe<
    Array<Category_TlUpdateManyWithWhereWithoutLanguageInput>
  >;
  upsert?: InputMaybe<
    Array<Category_TlUpsertWithWhereUniqueWithoutLanguageInput>
  >;
};

export type Category_TlUpdateWithWhereUniqueWithoutCategoryInput = {
  data: Category_TlUpdateWithoutCategoryInput;
  where: Category_TlWhereUniqueInput;
};

export type Category_TlUpdateWithWhereUniqueWithoutLanguageInput = {
  data: Category_TlUpdateWithoutLanguageInput;
  where: Category_TlWhereUniqueInput;
};

export type Category_TlUpdateWithoutCategoryInput = {
  Language?: InputMaybe<LanguageUpdateOneWithoutCategory_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Category_TlUpdateWithoutLanguageInput = {
  Category?: InputMaybe<CategoryUpdateOneWithoutCategory_TlInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type Category_TlUpsertWithWhereUniqueWithoutCategoryInput = {
  create: Category_TlCreateWithoutCategoryInput;
  update: Category_TlUpdateWithoutCategoryInput;
  where: Category_TlWhereUniqueInput;
};

export type Category_TlUpsertWithWhereUniqueWithoutLanguageInput = {
  create: Category_TlCreateWithoutLanguageInput;
  update: Category_TlUpdateWithoutLanguageInput;
  where: Category_TlWhereUniqueInput;
};

export type Category_TlWhereInput = {
  AND?: InputMaybe<Array<Category_TlWhereInput>>;
  Category?: InputMaybe<CategoryRelationFilter>;
  Language?: InputMaybe<LanguageRelationFilter>;
  NOT?: InputMaybe<Array<Category_TlWhereInput>>;
  OR?: InputMaybe<Array<Category_TlWhereInput>>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  languageId?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type Category_TlWhereUniqueInput = {
  categoryId_languageId?: InputMaybe<Category_TlCategoryIdLanguageIdCompoundUniqueInput>;
  name_languageId_categoryId?: InputMaybe<Category_TlNameLanguageIdCategoryIdCompoundUniqueInput>;
};

export type ChangePasswordInputDto = {
  newPassword: Scalars['String'];
  oldPassword: Scalars['String'];
};

export type ChangePasswordOutputDto = {
  __typename?: 'ChangePasswordOutputDTO';
  isSuccess?: Maybe<Scalars['Boolean']>;
  message: Scalars['String'];
};

export type Channel = {
  __typename?: 'Channel';
  ChannelEnrollment?: Maybe<Array<ChannelEnrollment>>;
  Configuration?: Maybe<Array<Configuration>>;
  Customer?: Maybe<Array<Customer>>;
  UserPreference?: Maybe<Array<UserPreference>>;
  UserRole?: Maybe<Array<UserRole>>;
  _count: ChannelCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ChannelCount = {
  __typename?: 'ChannelCount';
  ChannelEnrollment: Scalars['Int'];
  Configuration: Scalars['Int'];
  Customer: Scalars['Int'];
  UserPreference: Scalars['Int'];
  UserRole: Scalars['Int'];
};

export type ChannelCountAggregate = {
  __typename?: 'ChannelCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isDefault: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ChannelCreateNestedOneWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutChannelEnrollmentInput>;
  create?: InputMaybe<ChannelCreateWithoutChannelEnrollmentInput>;
};

export type ChannelCreateNestedOneWithoutConfigurationInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutConfigurationInput>;
  create?: InputMaybe<ChannelCreateWithoutConfigurationInput>;
};

export type ChannelCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<ChannelCreateWithoutCustomerInput>;
};

export type ChannelCreateNestedOneWithoutUserPreferenceInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutUserPreferenceInput>;
  create?: InputMaybe<ChannelCreateWithoutUserPreferenceInput>;
};

export type ChannelCreateNestedOneWithoutUserRoleInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutUserRoleInput>;
  create?: InputMaybe<ChannelCreateWithoutUserRoleInput>;
};

export type ChannelCreateOrConnectWithoutChannelEnrollmentInput = {
  create: ChannelCreateWithoutChannelEnrollmentInput;
  where: ChannelWhereUniqueInput;
};

export type ChannelCreateOrConnectWithoutConfigurationInput = {
  create: ChannelCreateWithoutConfigurationInput;
  where: ChannelWhereUniqueInput;
};

export type ChannelCreateOrConnectWithoutCustomerInput = {
  create: ChannelCreateWithoutCustomerInput;
  where: ChannelWhereUniqueInput;
};

export type ChannelCreateOrConnectWithoutUserPreferenceInput = {
  create: ChannelCreateWithoutUserPreferenceInput;
  where: ChannelWhereUniqueInput;
};

export type ChannelCreateOrConnectWithoutUserRoleInput = {
  create: ChannelCreateWithoutUserRoleInput;
  where: ChannelWhereUniqueInput;
};

export type ChannelCreateWithoutChannelEnrollmentInput = {
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutChannelInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ChannelCreateWithoutConfigurationInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutChannelInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ChannelCreateWithoutCustomerInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedManyWithoutChannelInput>;
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutChannelInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ChannelCreateWithoutUserPreferenceInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedManyWithoutChannelInput>;
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutChannelInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ChannelCreateWithoutUserRoleInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedManyWithoutChannelInput>;
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutChannelInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ChannelEnrollment = {
  __typename?: 'ChannelEnrollment';
  Channel?: Maybe<Channel>;
  Customer?: Maybe<Array<Customer>>;
  EnrollmentAttribute?: Maybe<Array<EnrollmentAttribute>>;
  EnrollmentPayment?: Maybe<Array<EnrollmentPayment>>;
  EnrollmentType?: Maybe<EnrollmentType>;
  WorkFlow?: Maybe<WorkFlow>;
  _count: ChannelEnrollmentCount;
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  enrollmentTypeId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
  workflowVersion?: Maybe<Scalars['Int']>;
};

export type ChannelEnrollmentAvgAggregate = {
  __typename?: 'ChannelEnrollmentAvgAggregate';
  workflowVersion?: Maybe<Scalars['Float']>;
};

export type ChannelEnrollmentChannelIdEnrollmentTypeIdCompoundUniqueInput = {
  channelId: Scalars['String'];
  enrollmentTypeId: Scalars['String'];
};

export type ChannelEnrollmentCount = {
  __typename?: 'ChannelEnrollmentCount';
  Customer: Scalars['Int'];
  EnrollmentAttribute: Scalars['Int'];
  EnrollmentPayment: Scalars['Int'];
};

export type ChannelEnrollmentCountAggregate = {
  __typename?: 'ChannelEnrollmentCountAggregate';
  _all: Scalars['Int'];
  channelId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  enrollmentTypeId: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workflowId: Scalars['Int'];
  workflowVersion: Scalars['Int'];
};

export type ChannelEnrollmentCreateManyChannelInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  enrollmentTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowId?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateManyChannelInputEnvelope = {
  data: Array<ChannelEnrollmentCreateManyChannelInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ChannelEnrollmentCreateManyEnrollmentTypeInput = {
  channelId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowId?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateManyEnrollmentTypeInputEnvelope = {
  data: Array<ChannelEnrollmentCreateManyEnrollmentTypeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ChannelEnrollmentCreateManyWorkFlowInput = {
  channelId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  enrollmentTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateManyWorkFlowInputEnvelope = {
  data: Array<ChannelEnrollmentCreateManyWorkFlowInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ChannelEnrollmentCreateNestedManyWithoutChannelInput = {
  connect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ChannelEnrollmentCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<ChannelEnrollmentCreateWithoutChannelInput>>;
  createMany?: InputMaybe<ChannelEnrollmentCreateManyChannelInputEnvelope>;
};

export type ChannelEnrollmentCreateNestedManyWithoutEnrollmentTypeInput = {
  connect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ChannelEnrollmentCreateOrConnectWithoutEnrollmentTypeInput>
  >;
  create?: InputMaybe<Array<ChannelEnrollmentCreateWithoutEnrollmentTypeInput>>;
  createMany?: InputMaybe<ChannelEnrollmentCreateManyEnrollmentTypeInputEnvelope>;
};

export type ChannelEnrollmentCreateNestedManyWithoutWorkFlowInput = {
  connect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ChannelEnrollmentCreateOrConnectWithoutWorkFlowInput>
  >;
  create?: InputMaybe<Array<ChannelEnrollmentCreateWithoutWorkFlowInput>>;
  createMany?: InputMaybe<ChannelEnrollmentCreateManyWorkFlowInputEnvelope>;
};

export type ChannelEnrollmentCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<ChannelEnrollmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelEnrollmentCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<ChannelEnrollmentCreateWithoutCustomerInput>;
};

export type ChannelEnrollmentCreateNestedOneWithoutEnrollmentAttributeInput = {
  connect?: InputMaybe<ChannelEnrollmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelEnrollmentCreateOrConnectWithoutEnrollmentAttributeInput>;
  create?: InputMaybe<ChannelEnrollmentCreateWithoutEnrollmentAttributeInput>;
};

export type ChannelEnrollmentCreateNestedOneWithoutEnrollmentPaymentInput = {
  connect?: InputMaybe<ChannelEnrollmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelEnrollmentCreateOrConnectWithoutEnrollmentPaymentInput>;
  create?: InputMaybe<ChannelEnrollmentCreateWithoutEnrollmentPaymentInput>;
};

export type ChannelEnrollmentCreateOrConnectWithoutChannelInput = {
  create: ChannelEnrollmentCreateWithoutChannelInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentCreateOrConnectWithoutCustomerInput = {
  create: ChannelEnrollmentCreateWithoutCustomerInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentCreateOrConnectWithoutEnrollmentAttributeInput = {
  create: ChannelEnrollmentCreateWithoutEnrollmentAttributeInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentCreateOrConnectWithoutEnrollmentPaymentInput = {
  create: ChannelEnrollmentCreateWithoutEnrollmentPaymentInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentCreateOrConnectWithoutEnrollmentTypeInput = {
  create: ChannelEnrollmentCreateWithoutEnrollmentTypeInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentCreateOrConnectWithoutWorkFlowInput = {
  create: ChannelEnrollmentCreateWithoutWorkFlowInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentCreateWithoutChannelInput = {
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateWithoutCustomerInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateWithoutEnrollmentAttributeInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateWithoutEnrollmentPaymentInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateWithoutEnrollmentTypeInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentCreateWithoutWorkFlowInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowVersion?: InputMaybe<Scalars['Int']>;
};

export type ChannelEnrollmentListRelationFilter = {
  every?: InputMaybe<ChannelEnrollmentWhereInput>;
  none?: InputMaybe<ChannelEnrollmentWhereInput>;
  some?: InputMaybe<ChannelEnrollmentWhereInput>;
};

export type ChannelEnrollmentMaxAggregate = {
  __typename?: 'ChannelEnrollmentMaxAggregate';
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  enrollmentTypeId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
  workflowVersion?: Maybe<Scalars['Int']>;
};

export type ChannelEnrollmentMinAggregate = {
  __typename?: 'ChannelEnrollmentMinAggregate';
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  enrollmentTypeId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
  workflowVersion?: Maybe<Scalars['Int']>;
};

export type ChannelEnrollmentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ChannelEnrollmentOrderByWithRelationInput = {
  Channel?: InputMaybe<ChannelOrderByWithRelationInput>;
  Customer?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeOrderByRelationAggregateInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentOrderByRelationAggregateInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeOrderByWithRelationInput>;
  WorkFlow?: InputMaybe<WorkFlowOrderByWithRelationInput>;
  channelId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  enrollmentTypeId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
  workflowId?: InputMaybe<SortOrder>;
  workflowVersion?: InputMaybe<SortOrder>;
};

export type ChannelEnrollmentRelationFilter = {
  is?: InputMaybe<ChannelEnrollmentWhereInput>;
  isNot?: InputMaybe<ChannelEnrollmentWhereInput>;
};

export type ChannelEnrollmentScalarWhereInput = {
  AND?: InputMaybe<Array<ChannelEnrollmentScalarWhereInput>>;
  NOT?: InputMaybe<Array<ChannelEnrollmentScalarWhereInput>>;
  OR?: InputMaybe<Array<ChannelEnrollmentScalarWhereInput>>;
  channelId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  enrollmentTypeId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowId?: InputMaybe<StringNullableFilter>;
  workflowVersion?: InputMaybe<IntNullableFilter>;
};

export type ChannelEnrollmentSumAggregate = {
  __typename?: 'ChannelEnrollmentSumAggregate';
  workflowVersion?: Maybe<Scalars['Int']>;
};

export type ChannelEnrollmentUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workflowVersion?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type ChannelEnrollmentUpdateManyWithWhereWithoutChannelInput = {
  data: ChannelEnrollmentUpdateManyMutationInput;
  where: ChannelEnrollmentScalarWhereInput;
};

export type ChannelEnrollmentUpdateManyWithWhereWithoutEnrollmentTypeInput = {
  data: ChannelEnrollmentUpdateManyMutationInput;
  where: ChannelEnrollmentScalarWhereInput;
};

export type ChannelEnrollmentUpdateManyWithWhereWithoutWorkFlowInput = {
  data: ChannelEnrollmentUpdateManyMutationInput;
  where: ChannelEnrollmentScalarWhereInput;
};

export type ChannelEnrollmentUpdateManyWithoutChannelInput = {
  connect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ChannelEnrollmentCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<ChannelEnrollmentCreateWithoutChannelInput>>;
  createMany?: InputMaybe<ChannelEnrollmentCreateManyChannelInputEnvelope>;
  delete?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ChannelEnrollmentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  set?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ChannelEnrollmentUpdateWithWhereUniqueWithoutChannelInput>
  >;
  updateMany?: InputMaybe<
    Array<ChannelEnrollmentUpdateManyWithWhereWithoutChannelInput>
  >;
  upsert?: InputMaybe<
    Array<ChannelEnrollmentUpsertWithWhereUniqueWithoutChannelInput>
  >;
};

export type ChannelEnrollmentUpdateManyWithoutEnrollmentTypeInput = {
  connect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ChannelEnrollmentCreateOrConnectWithoutEnrollmentTypeInput>
  >;
  create?: InputMaybe<Array<ChannelEnrollmentCreateWithoutEnrollmentTypeInput>>;
  createMany?: InputMaybe<ChannelEnrollmentCreateManyEnrollmentTypeInputEnvelope>;
  delete?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ChannelEnrollmentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  set?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ChannelEnrollmentUpdateWithWhereUniqueWithoutEnrollmentTypeInput>
  >;
  updateMany?: InputMaybe<
    Array<ChannelEnrollmentUpdateManyWithWhereWithoutEnrollmentTypeInput>
  >;
  upsert?: InputMaybe<
    Array<ChannelEnrollmentUpsertWithWhereUniqueWithoutEnrollmentTypeInput>
  >;
};

export type ChannelEnrollmentUpdateManyWithoutWorkFlowInput = {
  connect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ChannelEnrollmentCreateOrConnectWithoutWorkFlowInput>
  >;
  create?: InputMaybe<Array<ChannelEnrollmentCreateWithoutWorkFlowInput>>;
  createMany?: InputMaybe<ChannelEnrollmentCreateManyWorkFlowInputEnvelope>;
  delete?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ChannelEnrollmentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  set?: InputMaybe<Array<ChannelEnrollmentWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ChannelEnrollmentUpdateWithWhereUniqueWithoutWorkFlowInput>
  >;
  updateMany?: InputMaybe<
    Array<ChannelEnrollmentUpdateManyWithWhereWithoutWorkFlowInput>
  >;
  upsert?: InputMaybe<
    Array<ChannelEnrollmentUpsertWithWhereUniqueWithoutWorkFlowInput>
  >;
};

export type ChannelEnrollmentUpdateOneWithoutCustomerInput = {
  connect?: InputMaybe<ChannelEnrollmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelEnrollmentCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<ChannelEnrollmentCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelEnrollmentUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<ChannelEnrollmentUpsertWithoutCustomerInput>;
};

export type ChannelEnrollmentUpdateOneWithoutEnrollmentAttributeInput = {
  connect?: InputMaybe<ChannelEnrollmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelEnrollmentCreateOrConnectWithoutEnrollmentAttributeInput>;
  create?: InputMaybe<ChannelEnrollmentCreateWithoutEnrollmentAttributeInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelEnrollmentUpdateWithoutEnrollmentAttributeInput>;
  upsert?: InputMaybe<ChannelEnrollmentUpsertWithoutEnrollmentAttributeInput>;
};

export type ChannelEnrollmentUpdateOneWithoutEnrollmentPaymentInput = {
  connect?: InputMaybe<ChannelEnrollmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelEnrollmentCreateOrConnectWithoutEnrollmentPaymentInput>;
  create?: InputMaybe<ChannelEnrollmentCreateWithoutEnrollmentPaymentInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelEnrollmentUpdateWithoutEnrollmentPaymentInput>;
  upsert?: InputMaybe<ChannelEnrollmentUpsertWithoutEnrollmentPaymentInput>;
};

export type ChannelEnrollmentUpdateWithWhereUniqueWithoutChannelInput = {
  data: ChannelEnrollmentUpdateWithoutChannelInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentUpdateWithWhereUniqueWithoutEnrollmentTypeInput = {
  data: ChannelEnrollmentUpdateWithoutEnrollmentTypeInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentUpdateWithWhereUniqueWithoutWorkFlowInput = {
  data: ChannelEnrollmentUpdateWithoutWorkFlowInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentUpdateWithoutChannelInput = {
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workflowVersion?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type ChannelEnrollmentUpdateWithoutCustomerInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workflowVersion?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type ChannelEnrollmentUpdateWithoutEnrollmentAttributeInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workflowVersion?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type ChannelEnrollmentUpdateWithoutEnrollmentPaymentInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workflowVersion?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type ChannelEnrollmentUpdateWithoutEnrollmentTypeInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutChannelEnrollmentInput>;
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workflowVersion?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type ChannelEnrollmentUpdateWithoutWorkFlowInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutChannelEnrollmentInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutChannelEnrollmentInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutChannelEnrollmentInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  workflowVersion?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type ChannelEnrollmentUpsertWithWhereUniqueWithoutChannelInput = {
  create: ChannelEnrollmentCreateWithoutChannelInput;
  update: ChannelEnrollmentUpdateWithoutChannelInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentUpsertWithWhereUniqueWithoutEnrollmentTypeInput = {
  create: ChannelEnrollmentCreateWithoutEnrollmentTypeInput;
  update: ChannelEnrollmentUpdateWithoutEnrollmentTypeInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentUpsertWithWhereUniqueWithoutWorkFlowInput = {
  create: ChannelEnrollmentCreateWithoutWorkFlowInput;
  update: ChannelEnrollmentUpdateWithoutWorkFlowInput;
  where: ChannelEnrollmentWhereUniqueInput;
};

export type ChannelEnrollmentUpsertWithoutCustomerInput = {
  create: ChannelEnrollmentCreateWithoutCustomerInput;
  update: ChannelEnrollmentUpdateWithoutCustomerInput;
};

export type ChannelEnrollmentUpsertWithoutEnrollmentAttributeInput = {
  create: ChannelEnrollmentCreateWithoutEnrollmentAttributeInput;
  update: ChannelEnrollmentUpdateWithoutEnrollmentAttributeInput;
};

export type ChannelEnrollmentUpsertWithoutEnrollmentPaymentInput = {
  create: ChannelEnrollmentCreateWithoutEnrollmentPaymentInput;
  update: ChannelEnrollmentUpdateWithoutEnrollmentPaymentInput;
};

export type ChannelEnrollmentWhereInput = {
  AND?: InputMaybe<Array<ChannelEnrollmentWhereInput>>;
  Channel?: InputMaybe<ChannelRelationFilter>;
  Customer?: InputMaybe<CustomerListRelationFilter>;
  EnrollmentAttribute?: InputMaybe<EnrollmentAttributeListRelationFilter>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentListRelationFilter>;
  EnrollmentType?: InputMaybe<EnrollmentTypeRelationFilter>;
  NOT?: InputMaybe<Array<ChannelEnrollmentWhereInput>>;
  OR?: InputMaybe<Array<ChannelEnrollmentWhereInput>>;
  WorkFlow?: InputMaybe<WorkFlowRelationFilter>;
  channelId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  enrollmentTypeId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowId?: InputMaybe<StringNullableFilter>;
  workflowVersion?: InputMaybe<IntNullableFilter>;
};

export type ChannelEnrollmentWhereUniqueInput = {
  channelId_enrollmentTypeId?: InputMaybe<ChannelEnrollmentChannelIdEnrollmentTypeIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type ChannelMaxAggregate = {
  __typename?: 'ChannelMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ChannelMinAggregate = {
  __typename?: 'ChannelMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ChannelOrderByWithRelationInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentOrderByRelationAggregateInput>;
  Configuration?: InputMaybe<ConfigurationOrderByRelationAggregateInput>;
  Customer?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  UserPreference?: InputMaybe<UserPreferenceOrderByRelationAggregateInput>;
  UserRole?: InputMaybe<UserRoleOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isDefault?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type ChannelRelationFilter = {
  is?: InputMaybe<ChannelWhereInput>;
  isNot?: InputMaybe<ChannelWhereInput>;
};

export type ChannelUpdateOneWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutChannelEnrollmentInput>;
  create?: InputMaybe<ChannelCreateWithoutChannelEnrollmentInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelUpdateWithoutChannelEnrollmentInput>;
  upsert?: InputMaybe<ChannelUpsertWithoutChannelEnrollmentInput>;
};

export type ChannelUpdateOneWithoutConfigurationInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutConfigurationInput>;
  create?: InputMaybe<ChannelCreateWithoutConfigurationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelUpdateWithoutConfigurationInput>;
  upsert?: InputMaybe<ChannelUpsertWithoutConfigurationInput>;
};

export type ChannelUpdateOneWithoutCustomerInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<ChannelCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<ChannelUpsertWithoutCustomerInput>;
};

export type ChannelUpdateOneWithoutUserPreferenceInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutUserPreferenceInput>;
  create?: InputMaybe<ChannelCreateWithoutUserPreferenceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelUpdateWithoutUserPreferenceInput>;
  upsert?: InputMaybe<ChannelUpsertWithoutUserPreferenceInput>;
};

export type ChannelUpdateOneWithoutUserRoleInput = {
  connect?: InputMaybe<ChannelWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ChannelCreateOrConnectWithoutUserRoleInput>;
  create?: InputMaybe<ChannelCreateWithoutUserRoleInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ChannelUpdateWithoutUserRoleInput>;
  upsert?: InputMaybe<ChannelUpsertWithoutUserRoleInput>;
};

export type ChannelUpdateWithoutChannelEnrollmentInput = {
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutChannelInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChannelUpdateWithoutConfigurationInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutChannelInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChannelUpdateWithoutCustomerInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateManyWithoutChannelInput>;
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutChannelInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChannelUpdateWithoutUserPreferenceInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateManyWithoutChannelInput>;
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutChannelInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChannelUpdateWithoutUserRoleInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateManyWithoutChannelInput>;
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutChannelInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutChannelInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutChannelInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ChannelUpsertWithoutChannelEnrollmentInput = {
  create: ChannelCreateWithoutChannelEnrollmentInput;
  update: ChannelUpdateWithoutChannelEnrollmentInput;
};

export type ChannelUpsertWithoutConfigurationInput = {
  create: ChannelCreateWithoutConfigurationInput;
  update: ChannelUpdateWithoutConfigurationInput;
};

export type ChannelUpsertWithoutCustomerInput = {
  create: ChannelCreateWithoutCustomerInput;
  update: ChannelUpdateWithoutCustomerInput;
};

export type ChannelUpsertWithoutUserPreferenceInput = {
  create: ChannelCreateWithoutUserPreferenceInput;
  update: ChannelUpdateWithoutUserPreferenceInput;
};

export type ChannelUpsertWithoutUserRoleInput = {
  create: ChannelCreateWithoutUserRoleInput;
  update: ChannelUpdateWithoutUserRoleInput;
};

export type ChannelWhereInput = {
  AND?: InputMaybe<Array<ChannelWhereInput>>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentListRelationFilter>;
  Configuration?: InputMaybe<ConfigurationListRelationFilter>;
  Customer?: InputMaybe<CustomerListRelationFilter>;
  NOT?: InputMaybe<Array<ChannelWhereInput>>;
  OR?: InputMaybe<Array<ChannelWhereInput>>;
  UserPreference?: InputMaybe<UserPreferenceListRelationFilter>;
  UserRole?: InputMaybe<UserRoleListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isDefault?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ChannelWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Configuration = {
  __typename?: 'Configuration';
  AssetStoreConfiguration?: Maybe<Array<AssetStoreConfiguration>>;
  Channel?: Maybe<Channel>;
  ConfigurationAsset?: Maybe<Array<ConfigurationAsset>>;
  ConfigurationParameterContext?: Maybe<ConfigurationParameterContext>;
  Context?: Maybe<Context>;
  _count: ConfigurationCount;
  channelId?: Maybe<Scalars['String']>;
  configValue?: Maybe<Scalars['String']>;
  configurationParameterContextId?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationAsset = {
  __typename?: 'ConfigurationAsset';
  Configuration?: Maybe<Configuration>;
  assetId?: Maybe<Scalars['String']>;
  configurationId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationAssetConfigurationIdAssetIdCompoundUniqueInput = {
  assetId: Scalars['String'];
  configurationId: Scalars['String'];
};

export type ConfigurationAssetCountAggregate = {
  __typename?: 'ConfigurationAssetCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  configurationId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ConfigurationAssetCreateManyConfigurationInput = {
  assetId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationAssetCreateManyConfigurationInputEnvelope = {
  data: Array<ConfigurationAssetCreateManyConfigurationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ConfigurationAssetCreateNestedManyWithoutConfigurationInput = {
  connect?: InputMaybe<Array<ConfigurationAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationAssetCreateOrConnectWithoutConfigurationInput>
  >;
  create?: InputMaybe<Array<ConfigurationAssetCreateWithoutConfigurationInput>>;
  createMany?: InputMaybe<ConfigurationAssetCreateManyConfigurationInputEnvelope>;
};

export type ConfigurationAssetCreateOrConnectWithoutConfigurationInput = {
  create: ConfigurationAssetCreateWithoutConfigurationInput;
  where: ConfigurationAssetWhereUniqueInput;
};

export type ConfigurationAssetCreateWithoutConfigurationInput = {
  assetId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationAssetListRelationFilter = {
  every?: InputMaybe<ConfigurationAssetWhereInput>;
  none?: InputMaybe<ConfigurationAssetWhereInput>;
  some?: InputMaybe<ConfigurationAssetWhereInput>;
};

export type ConfigurationAssetMaxAggregate = {
  __typename?: 'ConfigurationAssetMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  configurationId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationAssetMinAggregate = {
  __typename?: 'ConfigurationAssetMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  configurationId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationAssetScalarWhereInput = {
  AND?: InputMaybe<Array<ConfigurationAssetScalarWhereInput>>;
  NOT?: InputMaybe<Array<ConfigurationAssetScalarWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationAssetScalarWhereInput>>;
  assetId?: InputMaybe<StringNullableFilter>;
  configurationId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationAssetUpdateManyMutationInput = {
  assetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationAssetUpdateManyWithWhereWithoutConfigurationInput = {
  data: ConfigurationAssetUpdateManyMutationInput;
  where: ConfigurationAssetScalarWhereInput;
};

export type ConfigurationAssetUpdateManyWithoutConfigurationInput = {
  connect?: InputMaybe<Array<ConfigurationAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationAssetCreateOrConnectWithoutConfigurationInput>
  >;
  create?: InputMaybe<Array<ConfigurationAssetCreateWithoutConfigurationInput>>;
  createMany?: InputMaybe<ConfigurationAssetCreateManyConfigurationInputEnvelope>;
  delete?: InputMaybe<Array<ConfigurationAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ConfigurationAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ConfigurationAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<ConfigurationAssetWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ConfigurationAssetUpdateWithWhereUniqueWithoutConfigurationInput>
  >;
  updateMany?: InputMaybe<
    Array<ConfigurationAssetUpdateManyWithWhereWithoutConfigurationInput>
  >;
  upsert?: InputMaybe<
    Array<ConfigurationAssetUpsertWithWhereUniqueWithoutConfigurationInput>
  >;
};

export type ConfigurationAssetUpdateWithWhereUniqueWithoutConfigurationInput = {
  data: ConfigurationAssetUpdateWithoutConfigurationInput;
  where: ConfigurationAssetWhereUniqueInput;
};

export type ConfigurationAssetUpdateWithoutConfigurationInput = {
  assetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationAssetUpsertWithWhereUniqueWithoutConfigurationInput = {
  create: ConfigurationAssetCreateWithoutConfigurationInput;
  update: ConfigurationAssetUpdateWithoutConfigurationInput;
  where: ConfigurationAssetWhereUniqueInput;
};

export type ConfigurationAssetWhereInput = {
  AND?: InputMaybe<Array<ConfigurationAssetWhereInput>>;
  Configuration?: InputMaybe<ConfigurationRelationFilter>;
  NOT?: InputMaybe<Array<ConfigurationAssetWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationAssetWhereInput>>;
  assetId?: InputMaybe<StringNullableFilter>;
  configurationId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationAssetWhereUniqueInput = {
  configurationId_assetId?: InputMaybe<ConfigurationAssetConfigurationIdAssetIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type ConfigurationConfigurationParameterContextIdChannelIdCompoundUniqueInput =
  {
    channelId: Scalars['String'];
    configurationParameterContextId: Scalars['String'];
  };

export type ConfigurationContext = {
  __typename?: 'ConfigurationContext';
  ConfigurationParameterContext?: Maybe<Array<ConfigurationParameterContext>>;
  Context?: Maybe<Context>;
  _count: ConfigurationContextCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  entityName?: Maybe<Scalars['String']>;
  fkValueRequired?: Maybe<Scalars['Boolean']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  parentContextId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationContextCount = {
  __typename?: 'ConfigurationContextCount';
  ConfigurationParameterContext: Scalars['Int'];
};

export type ConfigurationContextCountAggregate = {
  __typename?: 'ConfigurationContextCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  entityName: Scalars['Int'];
  fkValueRequired: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  parentContextId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ConfigurationContextCreateManyContextInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  entityName?: InputMaybe<Scalars['String']>;
  fkValueRequired?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationContextCreateManyContextInputEnvelope = {
  data: Array<ConfigurationContextCreateManyContextInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ConfigurationContextCreateNestedManyWithoutContextInput = {
  connect?: InputMaybe<Array<ConfigurationContextWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationContextCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<Array<ConfigurationContextCreateWithoutContextInput>>;
  createMany?: InputMaybe<ConfigurationContextCreateManyContextInputEnvelope>;
};

export type ConfigurationContextCreateNestedOneWithoutConfigurationParameterContextInput =
  {
    connect?: InputMaybe<ConfigurationContextWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ConfigurationContextCreateOrConnectWithoutConfigurationParameterContextInput>;
    create?: InputMaybe<ConfigurationContextCreateWithoutConfigurationParameterContextInput>;
  };

export type ConfigurationContextCreateOrConnectWithoutConfigurationParameterContextInput =
  {
    create: ConfigurationContextCreateWithoutConfigurationParameterContextInput;
    where: ConfigurationContextWhereUniqueInput;
  };

export type ConfigurationContextCreateOrConnectWithoutContextInput = {
  create: ConfigurationContextCreateWithoutContextInput;
  where: ConfigurationContextWhereUniqueInput;
};

export type ConfigurationContextCreateWithoutConfigurationParameterContextInput =
  {
    Context?: InputMaybe<ContextCreateNestedOneWithoutConfigurationContextInput>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    description?: InputMaybe<Scalars['String']>;
    entityName?: InputMaybe<Scalars['String']>;
    fkValueRequired?: InputMaybe<Scalars['Boolean']>;
    id?: InputMaybe<Scalars['String']>;
    name?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type ConfigurationContextCreateWithoutContextInput = {
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextCreateNestedManyWithoutConfigurationContextInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  entityName?: InputMaybe<Scalars['String']>;
  fkValueRequired?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationContextListRelationFilter = {
  every?: InputMaybe<ConfigurationContextWhereInput>;
  none?: InputMaybe<ConfigurationContextWhereInput>;
  some?: InputMaybe<ConfigurationContextWhereInput>;
};

export type ConfigurationContextMaxAggregate = {
  __typename?: 'ConfigurationContextMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  entityName?: Maybe<Scalars['String']>;
  fkValueRequired?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parentContextId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationContextMinAggregate = {
  __typename?: 'ConfigurationContextMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  entityName?: Maybe<Scalars['String']>;
  fkValueRequired?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parentContextId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationContextOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ConfigurationContextRelationFilter = {
  is?: InputMaybe<ConfigurationContextWhereInput>;
  isNot?: InputMaybe<ConfigurationContextWhereInput>;
};

export type ConfigurationContextScalarWhereInput = {
  AND?: InputMaybe<Array<ConfigurationContextScalarWhereInput>>;
  NOT?: InputMaybe<Array<ConfigurationContextScalarWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationContextScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  entityName?: InputMaybe<StringNullableFilter>;
  fkValueRequired?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  parentContextId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationContextUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  entityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fkValueRequired?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationContextUpdateManyWithWhereWithoutContextInput = {
  data: ConfigurationContextUpdateManyMutationInput;
  where: ConfigurationContextScalarWhereInput;
};

export type ConfigurationContextUpdateManyWithoutContextInput = {
  connect?: InputMaybe<Array<ConfigurationContextWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationContextCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<Array<ConfigurationContextCreateWithoutContextInput>>;
  createMany?: InputMaybe<ConfigurationContextCreateManyContextInputEnvelope>;
  delete?: InputMaybe<Array<ConfigurationContextWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ConfigurationContextScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ConfigurationContextWhereUniqueInput>>;
  set?: InputMaybe<Array<ConfigurationContextWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ConfigurationContextUpdateWithWhereUniqueWithoutContextInput>
  >;
  updateMany?: InputMaybe<
    Array<ConfigurationContextUpdateManyWithWhereWithoutContextInput>
  >;
  upsert?: InputMaybe<
    Array<ConfigurationContextUpsertWithWhereUniqueWithoutContextInput>
  >;
};

export type ConfigurationContextUpdateOneWithoutConfigurationParameterContextInput =
  {
    connect?: InputMaybe<ConfigurationContextWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ConfigurationContextCreateOrConnectWithoutConfigurationParameterContextInput>;
    create?: InputMaybe<ConfigurationContextCreateWithoutConfigurationParameterContextInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<ConfigurationContextUpdateWithoutConfigurationParameterContextInput>;
    upsert?: InputMaybe<ConfigurationContextUpsertWithoutConfigurationParameterContextInput>;
  };

export type ConfigurationContextUpdateWithWhereUniqueWithoutContextInput = {
  data: ConfigurationContextUpdateWithoutContextInput;
  where: ConfigurationContextWhereUniqueInput;
};

export type ConfigurationContextUpdateWithoutConfigurationParameterContextInput =
  {
    Context?: InputMaybe<ContextUpdateOneWithoutConfigurationContextInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    entityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    fkValueRequired?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type ConfigurationContextUpdateWithoutContextInput = {
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextUpdateManyWithoutConfigurationContextInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  entityName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fkValueRequired?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationContextUpsertWithWhereUniqueWithoutContextInput = {
  create: ConfigurationContextCreateWithoutContextInput;
  update: ConfigurationContextUpdateWithoutContextInput;
  where: ConfigurationContextWhereUniqueInput;
};

export type ConfigurationContextUpsertWithoutConfigurationParameterContextInput =
  {
    create: ConfigurationContextCreateWithoutConfigurationParameterContextInput;
    update: ConfigurationContextUpdateWithoutConfigurationParameterContextInput;
  };

export type ConfigurationContextWhereInput = {
  AND?: InputMaybe<Array<ConfigurationContextWhereInput>>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextListRelationFilter>;
  Context?: InputMaybe<ContextRelationFilter>;
  NOT?: InputMaybe<Array<ConfigurationContextWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationContextWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  entityName?: InputMaybe<StringNullableFilter>;
  fkValueRequired?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  parentContextId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationContextWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type ConfigurationCount = {
  __typename?: 'ConfigurationCount';
  AssetStoreConfiguration: Scalars['Int'];
  ConfigurationAsset: Scalars['Int'];
};

export type ConfigurationCountAggregate = {
  __typename?: 'ConfigurationCountAggregate';
  _all: Scalars['Int'];
  channelId: Scalars['Int'];
  configValue: Scalars['Int'];
  configurationParameterContextId: Scalars['Int'];
  contextFKValue: Scalars['Int'];
  contextId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ConfigurationCreateManyChannelInput = {
  configValue?: InputMaybe<Scalars['String']>;
  configurationParameterContextId?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  contextId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationCreateManyChannelInputEnvelope = {
  data: Array<ConfigurationCreateManyChannelInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ConfigurationCreateManyConfigurationParameterContextInput = {
  channelId?: InputMaybe<Scalars['String']>;
  configValue?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  contextId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationCreateManyConfigurationParameterContextInputEnvelope =
  {
    data: Array<ConfigurationCreateManyConfigurationParameterContextInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type ConfigurationCreateManyContextInput = {
  channelId?: InputMaybe<Scalars['String']>;
  configValue?: InputMaybe<Scalars['String']>;
  configurationParameterContextId?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationCreateManyContextInputEnvelope = {
  data: Array<ConfigurationCreateManyContextInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ConfigurationCreateNestedManyWithoutChannelInput = {
  connect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<ConfigurationCreateWithoutChannelInput>>;
  createMany?: InputMaybe<ConfigurationCreateManyChannelInputEnvelope>;
};

export type ConfigurationCreateNestedManyWithoutConfigurationParameterContextInput =
  {
    connect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<ConfigurationCreateOrConnectWithoutConfigurationParameterContextInput>
    >;
    create?: InputMaybe<
      Array<ConfigurationCreateWithoutConfigurationParameterContextInput>
    >;
    createMany?: InputMaybe<ConfigurationCreateManyConfigurationParameterContextInputEnvelope>;
  };

export type ConfigurationCreateNestedManyWithoutContextInput = {
  connect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<Array<ConfigurationCreateWithoutContextInput>>;
  createMany?: InputMaybe<ConfigurationCreateManyContextInputEnvelope>;
};

export type ConfigurationCreateNestedOneWithoutAssetStoreConfigurationInput = {
  connect?: InputMaybe<ConfigurationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ConfigurationCreateOrConnectWithoutAssetStoreConfigurationInput>;
  create?: InputMaybe<ConfigurationCreateWithoutAssetStoreConfigurationInput>;
};

export type ConfigurationCreateOrConnectWithoutAssetStoreConfigurationInput = {
  create: ConfigurationCreateWithoutAssetStoreConfigurationInput;
  where: ConfigurationWhereUniqueInput;
};

export type ConfigurationCreateOrConnectWithoutChannelInput = {
  create: ConfigurationCreateWithoutChannelInput;
  where: ConfigurationWhereUniqueInput;
};

export type ConfigurationCreateOrConnectWithoutConfigurationParameterContextInput =
  {
    create: ConfigurationCreateWithoutConfigurationParameterContextInput;
    where: ConfigurationWhereUniqueInput;
  };

export type ConfigurationCreateOrConnectWithoutContextInput = {
  create: ConfigurationCreateWithoutContextInput;
  where: ConfigurationWhereUniqueInput;
};

export type ConfigurationCreateWithoutAssetStoreConfigurationInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetCreateNestedManyWithoutConfigurationInput>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextCreateNestedOneWithoutConfigurationInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutConfigurationInput>;
  configValue?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationCreateWithoutChannelInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationCreateNestedManyWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetCreateNestedManyWithoutConfigurationInput>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextCreateNestedOneWithoutConfigurationInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutConfigurationInput>;
  configValue?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationCreateWithoutConfigurationParameterContextInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationCreateNestedManyWithoutConfigurationInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetCreateNestedManyWithoutConfigurationInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutConfigurationInput>;
  configValue?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationCreateWithoutContextInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationCreateNestedManyWithoutConfigurationInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetCreateNestedManyWithoutConfigurationInput>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextCreateNestedOneWithoutConfigurationInput>;
  configValue?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationListRelationFilter = {
  every?: InputMaybe<ConfigurationWhereInput>;
  none?: InputMaybe<ConfigurationWhereInput>;
  some?: InputMaybe<ConfigurationWhereInput>;
};

export type ConfigurationMaxAggregate = {
  __typename?: 'ConfigurationMaxAggregate';
  channelId?: Maybe<Scalars['String']>;
  configValue?: Maybe<Scalars['String']>;
  configurationParameterContextId?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationMinAggregate = {
  __typename?: 'ConfigurationMinAggregate';
  channelId?: Maybe<Scalars['String']>;
  configValue?: Maybe<Scalars['String']>;
  configurationParameterContextId?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ConfigurationOrderByWithRelationInputDto = {
  channelId?: InputMaybe<SortOrder>;
  configValue?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
};

export type ConfigurationParameter = {
  __typename?: 'ConfigurationParameter';
  ConfigurationParameterContext?: Maybe<Array<ConfigurationParameterContext>>;
  ConfigurationValueType?: Maybe<ConfigurationValueType>;
  _count: ConfigurationParameterCount;
  canModify?: Maybe<Scalars['Boolean']>;
  configurationValueTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  depreciated?: Maybe<Scalars['Boolean']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationParameterContext = {
  __typename?: 'ConfigurationParameterContext';
  Configuration?: Maybe<Array<Configuration>>;
  ConfigurationContext?: Maybe<ConfigurationContext>;
  ConfigurationParameter?: Maybe<ConfigurationParameter>;
  _count: ConfigurationParameterContextCount;
  configurationContextId?: Maybe<Scalars['String']>;
  configurationParameterId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationParameterContextConfigurationParameterIdConfigurationContextIdCompoundUniqueInput =
  {
    configurationContextId: Scalars['String'];
    configurationParameterId: Scalars['String'];
  };

export type ConfigurationParameterContextCount = {
  __typename?: 'ConfigurationParameterContextCount';
  Configuration: Scalars['Int'];
};

export type ConfigurationParameterContextCountAggregate = {
  __typename?: 'ConfigurationParameterContextCountAggregate';
  _all: Scalars['Int'];
  configurationContextId: Scalars['Int'];
  configurationParameterId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ConfigurationParameterContextCreateManyConfigurationContextInput = {
  configurationParameterId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationParameterContextCreateManyConfigurationContextInputEnvelope =
  {
    data: Array<ConfigurationParameterContextCreateManyConfigurationContextInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type ConfigurationParameterContextCreateNestedManyWithoutConfigurationContextInput =
  {
    connect?: InputMaybe<Array<ConfigurationParameterContextWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<ConfigurationParameterContextCreateOrConnectWithoutConfigurationContextInput>
    >;
    create?: InputMaybe<
      Array<ConfigurationParameterContextCreateWithoutConfigurationContextInput>
    >;
    createMany?: InputMaybe<ConfigurationParameterContextCreateManyConfigurationContextInputEnvelope>;
  };

export type ConfigurationParameterContextCreateNestedOneWithoutConfigurationInput =
  {
    connect?: InputMaybe<ConfigurationParameterContextWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ConfigurationParameterContextCreateOrConnectWithoutConfigurationInput>;
    create?: InputMaybe<ConfigurationParameterContextCreateWithoutConfigurationInput>;
  };

export type ConfigurationParameterContextCreateOrConnectWithoutConfigurationContextInput =
  {
    create: ConfigurationParameterContextCreateWithoutConfigurationContextInput;
    where: ConfigurationParameterContextWhereUniqueInput;
  };

export type ConfigurationParameterContextCreateOrConnectWithoutConfigurationInput =
  {
    create: ConfigurationParameterContextCreateWithoutConfigurationInput;
    where: ConfigurationParameterContextWhereUniqueInput;
  };

export type ConfigurationParameterContextCreateWithoutConfigurationContextInput =
  {
    Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutConfigurationParameterContextInput>;
    ConfigurationParameter?: InputMaybe<ConfigurationParameterCreateNestedOneWithoutConfigurationParameterContextInput>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type ConfigurationParameterContextCreateWithoutConfigurationInput = {
  ConfigurationContext?: InputMaybe<ConfigurationContextCreateNestedOneWithoutConfigurationParameterContextInput>;
  ConfigurationParameter?: InputMaybe<ConfigurationParameterCreateNestedOneWithoutConfigurationParameterContextInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationParameterContextListRelationFilter = {
  every?: InputMaybe<ConfigurationParameterContextWhereInput>;
  none?: InputMaybe<ConfigurationParameterContextWhereInput>;
  some?: InputMaybe<ConfigurationParameterContextWhereInput>;
};

export type ConfigurationParameterContextMaxAggregate = {
  __typename?: 'ConfigurationParameterContextMaxAggregate';
  configurationContextId?: Maybe<Scalars['String']>;
  configurationParameterId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationParameterContextMinAggregate = {
  __typename?: 'ConfigurationParameterContextMinAggregate';
  configurationContextId?: Maybe<Scalars['String']>;
  configurationParameterId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationParameterContextRelationFilter = {
  is?: InputMaybe<ConfigurationParameterContextWhereInput>;
  isNot?: InputMaybe<ConfigurationParameterContextWhereInput>;
};

export type ConfigurationParameterContextScalarWhereInput = {
  AND?: InputMaybe<Array<ConfigurationParameterContextScalarWhereInput>>;
  NOT?: InputMaybe<Array<ConfigurationParameterContextScalarWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationParameterContextScalarWhereInput>>;
  configurationContextId?: InputMaybe<StringNullableFilter>;
  configurationParameterId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationParameterContextUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationParameterContextUpdateManyWithWhereWithoutConfigurationContextInput =
  {
    data: ConfigurationParameterContextUpdateManyMutationInput;
    where: ConfigurationParameterContextScalarWhereInput;
  };

export type ConfigurationParameterContextUpdateManyWithoutConfigurationContextInput =
  {
    connect?: InputMaybe<Array<ConfigurationParameterContextWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<ConfigurationParameterContextCreateOrConnectWithoutConfigurationContextInput>
    >;
    create?: InputMaybe<
      Array<ConfigurationParameterContextCreateWithoutConfigurationContextInput>
    >;
    createMany?: InputMaybe<ConfigurationParameterContextCreateManyConfigurationContextInputEnvelope>;
    delete?: InputMaybe<Array<ConfigurationParameterContextWhereUniqueInput>>;
    deleteMany?: InputMaybe<
      Array<ConfigurationParameterContextScalarWhereInput>
    >;
    disconnect?: InputMaybe<
      Array<ConfigurationParameterContextWhereUniqueInput>
    >;
    set?: InputMaybe<Array<ConfigurationParameterContextWhereUniqueInput>>;
    update?: InputMaybe<
      Array<ConfigurationParameterContextUpdateWithWhereUniqueWithoutConfigurationContextInput>
    >;
    updateMany?: InputMaybe<
      Array<ConfigurationParameterContextUpdateManyWithWhereWithoutConfigurationContextInput>
    >;
    upsert?: InputMaybe<
      Array<ConfigurationParameterContextUpsertWithWhereUniqueWithoutConfigurationContextInput>
    >;
  };

export type ConfigurationParameterContextUpdateOneWithoutConfigurationInput = {
  connect?: InputMaybe<ConfigurationParameterContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ConfigurationParameterContextCreateOrConnectWithoutConfigurationInput>;
  create?: InputMaybe<ConfigurationParameterContextCreateWithoutConfigurationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ConfigurationParameterContextUpdateWithoutConfigurationInput>;
  upsert?: InputMaybe<ConfigurationParameterContextUpsertWithoutConfigurationInput>;
};

export type ConfigurationParameterContextUpdateWithWhereUniqueWithoutConfigurationContextInput =
  {
    data: ConfigurationParameterContextUpdateWithoutConfigurationContextInput;
    where: ConfigurationParameterContextWhereUniqueInput;
  };

export type ConfigurationParameterContextUpdateWithoutConfigurationContextInput =
  {
    Configuration?: InputMaybe<ConfigurationUpdateManyWithoutConfigurationParameterContextInput>;
    ConfigurationParameter?: InputMaybe<ConfigurationParameterUpdateOneWithoutConfigurationParameterContextInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type ConfigurationParameterContextUpdateWithoutConfigurationInput = {
  ConfigurationContext?: InputMaybe<ConfigurationContextUpdateOneWithoutConfigurationParameterContextInput>;
  ConfigurationParameter?: InputMaybe<ConfigurationParameterUpdateOneWithoutConfigurationParameterContextInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationParameterContextUpsertWithWhereUniqueWithoutConfigurationContextInput =
  {
    create: ConfigurationParameterContextCreateWithoutConfigurationContextInput;
    update: ConfigurationParameterContextUpdateWithoutConfigurationContextInput;
    where: ConfigurationParameterContextWhereUniqueInput;
  };

export type ConfigurationParameterContextUpsertWithoutConfigurationInput = {
  create: ConfigurationParameterContextCreateWithoutConfigurationInput;
  update: ConfigurationParameterContextUpdateWithoutConfigurationInput;
};

export type ConfigurationParameterContextWhereInput = {
  AND?: InputMaybe<Array<ConfigurationParameterContextWhereInput>>;
  Configuration?: InputMaybe<ConfigurationListRelationFilter>;
  ConfigurationContext?: InputMaybe<ConfigurationContextRelationFilter>;
  ConfigurationParameter?: InputMaybe<ConfigurationParameterRelationFilter>;
  NOT?: InputMaybe<Array<ConfigurationParameterContextWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationParameterContextWhereInput>>;
  configurationContextId?: InputMaybe<StringNullableFilter>;
  configurationParameterId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationParameterContextWhereUniqueInput = {
  configurationParameterId_configurationContextId?: InputMaybe<ConfigurationParameterContextConfigurationParameterIdConfigurationContextIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type ConfigurationParameterCount = {
  __typename?: 'ConfigurationParameterCount';
  ConfigurationParameterContext: Scalars['Int'];
};

export type ConfigurationParameterCountAggregate = {
  __typename?: 'ConfigurationParameterCountAggregate';
  _all: Scalars['Int'];
  canModify: Scalars['Int'];
  configurationValueTypeId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  depreciated: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ConfigurationParameterCreateNestedOneWithoutConfigurationParameterContextInput =
  {
    connect?: InputMaybe<ConfigurationParameterWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ConfigurationParameterCreateOrConnectWithoutConfigurationParameterContextInput>;
    create?: InputMaybe<ConfigurationParameterCreateWithoutConfigurationParameterContextInput>;
  };

export type ConfigurationParameterCreateOrConnectWithoutConfigurationParameterContextInput =
  {
    create: ConfigurationParameterCreateWithoutConfigurationParameterContextInput;
    where: ConfigurationParameterWhereUniqueInput;
  };

export type ConfigurationParameterCreateWithoutConfigurationParameterContextInput =
  {
    ConfigurationValueType?: InputMaybe<ConfigurationValueTypeCreateNestedOneWithoutConfigurationParameterInput>;
    canModify?: InputMaybe<Scalars['Boolean']>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    depreciated?: InputMaybe<Scalars['Boolean']>;
    description?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type ConfigurationParameterListRelationFilter = {
  every?: InputMaybe<ConfigurationParameterWhereInput>;
  none?: InputMaybe<ConfigurationParameterWhereInput>;
  some?: InputMaybe<ConfigurationParameterWhereInput>;
};

export type ConfigurationParameterMaxAggregate = {
  __typename?: 'ConfigurationParameterMaxAggregate';
  canModify?: Maybe<Scalars['Boolean']>;
  configurationValueTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  depreciated?: Maybe<Scalars['Boolean']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationParameterMinAggregate = {
  __typename?: 'ConfigurationParameterMinAggregate';
  canModify?: Maybe<Scalars['Boolean']>;
  configurationValueTypeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  depreciated?: Maybe<Scalars['Boolean']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationParameterRelationFilter = {
  is?: InputMaybe<ConfigurationParameterWhereInput>;
  isNot?: InputMaybe<ConfigurationParameterWhereInput>;
};

export type ConfigurationParameterUpdateOneWithoutConfigurationParameterContextInput =
  {
    connect?: InputMaybe<ConfigurationParameterWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ConfigurationParameterCreateOrConnectWithoutConfigurationParameterContextInput>;
    create?: InputMaybe<ConfigurationParameterCreateWithoutConfigurationParameterContextInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<ConfigurationParameterUpdateWithoutConfigurationParameterContextInput>;
    upsert?: InputMaybe<ConfigurationParameterUpsertWithoutConfigurationParameterContextInput>;
  };

export type ConfigurationParameterUpdateWithoutConfigurationParameterContextInput =
  {
    ConfigurationValueType?: InputMaybe<ConfigurationValueTypeUpdateOneWithoutConfigurationParameterInput>;
    canModify?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    depreciated?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type ConfigurationParameterUpsertWithoutConfigurationParameterContextInput =
  {
    create: ConfigurationParameterCreateWithoutConfigurationParameterContextInput;
    update: ConfigurationParameterUpdateWithoutConfigurationParameterContextInput;
  };

export type ConfigurationParameterWhereInput = {
  AND?: InputMaybe<Array<ConfigurationParameterWhereInput>>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextListRelationFilter>;
  ConfigurationValueType?: InputMaybe<ConfigurationValueTypeRelationFilter>;
  NOT?: InputMaybe<Array<ConfigurationParameterWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationParameterWhereInput>>;
  canModify?: InputMaybe<BoolNullableFilter>;
  configurationValueTypeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  depreciated?: InputMaybe<BoolNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationParameterWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type ConfigurationRelationFilter = {
  is?: InputMaybe<ConfigurationWhereInput>;
  isNot?: InputMaybe<ConfigurationWhereInput>;
};

export type ConfigurationScalarWhereInput = {
  AND?: InputMaybe<Array<ConfigurationScalarWhereInput>>;
  NOT?: InputMaybe<Array<ConfigurationScalarWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationScalarWhereInput>>;
  channelId?: InputMaybe<StringNullableFilter>;
  configValue?: InputMaybe<StringNullableFilter>;
  configurationParameterContextId?: InputMaybe<StringNullableFilter>;
  contextFKValue?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationUpdateInputDto = {
  configValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationUpdateManyMutationInput = {
  configValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationUpdateManyWithWhereWithoutChannelInput = {
  data: ConfigurationUpdateManyMutationInput;
  where: ConfigurationScalarWhereInput;
};

export type ConfigurationUpdateManyWithWhereWithoutConfigurationParameterContextInput =
  {
    data: ConfigurationUpdateManyMutationInput;
    where: ConfigurationScalarWhereInput;
  };

export type ConfigurationUpdateManyWithWhereWithoutContextInput = {
  data: ConfigurationUpdateManyMutationInput;
  where: ConfigurationScalarWhereInput;
};

export type ConfigurationUpdateManyWithoutChannelInput = {
  connect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<ConfigurationCreateWithoutChannelInput>>;
  createMany?: InputMaybe<ConfigurationCreateManyChannelInputEnvelope>;
  delete?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ConfigurationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  set?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ConfigurationUpdateWithWhereUniqueWithoutChannelInput>
  >;
  updateMany?: InputMaybe<
    Array<ConfigurationUpdateManyWithWhereWithoutChannelInput>
  >;
  upsert?: InputMaybe<
    Array<ConfigurationUpsertWithWhereUniqueWithoutChannelInput>
  >;
};

export type ConfigurationUpdateManyWithoutConfigurationParameterContextInput = {
  connect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationCreateOrConnectWithoutConfigurationParameterContextInput>
  >;
  create?: InputMaybe<
    Array<ConfigurationCreateWithoutConfigurationParameterContextInput>
  >;
  createMany?: InputMaybe<ConfigurationCreateManyConfigurationParameterContextInputEnvelope>;
  delete?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ConfigurationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  set?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ConfigurationUpdateWithWhereUniqueWithoutConfigurationParameterContextInput>
  >;
  updateMany?: InputMaybe<
    Array<ConfigurationUpdateManyWithWhereWithoutConfigurationParameterContextInput>
  >;
  upsert?: InputMaybe<
    Array<ConfigurationUpsertWithWhereUniqueWithoutConfigurationParameterContextInput>
  >;
};

export type ConfigurationUpdateManyWithoutContextInput = {
  connect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ConfigurationCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<Array<ConfigurationCreateWithoutContextInput>>;
  createMany?: InputMaybe<ConfigurationCreateManyContextInputEnvelope>;
  delete?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ConfigurationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  set?: InputMaybe<Array<ConfigurationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ConfigurationUpdateWithWhereUniqueWithoutContextInput>
  >;
  updateMany?: InputMaybe<
    Array<ConfigurationUpdateManyWithWhereWithoutContextInput>
  >;
  upsert?: InputMaybe<
    Array<ConfigurationUpsertWithWhereUniqueWithoutContextInput>
  >;
};

export type ConfigurationUpdateOneWithoutAssetStoreConfigurationInput = {
  connect?: InputMaybe<ConfigurationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ConfigurationCreateOrConnectWithoutAssetStoreConfigurationInput>;
  create?: InputMaybe<ConfigurationCreateWithoutAssetStoreConfigurationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ConfigurationUpdateWithoutAssetStoreConfigurationInput>;
  upsert?: InputMaybe<ConfigurationUpsertWithoutAssetStoreConfigurationInput>;
};

export type ConfigurationUpdateWithWhereUniqueWithoutChannelInput = {
  data: ConfigurationUpdateWithoutChannelInput;
  where: ConfigurationWhereUniqueInput;
};

export type ConfigurationUpdateWithWhereUniqueWithoutConfigurationParameterContextInput =
  {
    data: ConfigurationUpdateWithoutConfigurationParameterContextInput;
    where: ConfigurationWhereUniqueInput;
  };

export type ConfigurationUpdateWithWhereUniqueWithoutContextInput = {
  data: ConfigurationUpdateWithoutContextInput;
  where: ConfigurationWhereUniqueInput;
};

export type ConfigurationUpdateWithoutAssetStoreConfigurationInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetUpdateManyWithoutConfigurationInput>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextUpdateOneWithoutConfigurationInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutConfigurationInput>;
  configValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationUpdateWithoutChannelInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationUpdateManyWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetUpdateManyWithoutConfigurationInput>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextUpdateOneWithoutConfigurationInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutConfigurationInput>;
  configValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationUpdateWithoutConfigurationParameterContextInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationUpdateManyWithoutConfigurationInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetUpdateManyWithoutConfigurationInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutConfigurationInput>;
  configValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationUpdateWithoutContextInput = {
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationUpdateManyWithoutConfigurationInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutConfigurationInput>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetUpdateManyWithoutConfigurationInput>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextUpdateOneWithoutConfigurationInput>;
  configValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationUpsertWithWhereUniqueWithoutChannelInput = {
  create: ConfigurationCreateWithoutChannelInput;
  update: ConfigurationUpdateWithoutChannelInput;
  where: ConfigurationWhereUniqueInput;
};

export type ConfigurationUpsertWithWhereUniqueWithoutConfigurationParameterContextInput =
  {
    create: ConfigurationCreateWithoutConfigurationParameterContextInput;
    update: ConfigurationUpdateWithoutConfigurationParameterContextInput;
    where: ConfigurationWhereUniqueInput;
  };

export type ConfigurationUpsertWithWhereUniqueWithoutContextInput = {
  create: ConfigurationCreateWithoutContextInput;
  update: ConfigurationUpdateWithoutContextInput;
  where: ConfigurationWhereUniqueInput;
};

export type ConfigurationUpsertWithoutAssetStoreConfigurationInput = {
  create: ConfigurationCreateWithoutAssetStoreConfigurationInput;
  update: ConfigurationUpdateWithoutAssetStoreConfigurationInput;
};

export type ConfigurationValueType = {
  __typename?: 'ConfigurationValueType';
  ConfigurationParameter?: Maybe<Array<ConfigurationParameter>>;
  _count: ConfigurationValueTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationValueTypeCount = {
  __typename?: 'ConfigurationValueTypeCount';
  ConfigurationParameter: Scalars['Int'];
};

export type ConfigurationValueTypeCountAggregate = {
  __typename?: 'ConfigurationValueTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ConfigurationValueTypeCreateNestedOneWithoutConfigurationParameterInput =
  {
    connect?: InputMaybe<ConfigurationValueTypeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ConfigurationValueTypeCreateOrConnectWithoutConfigurationParameterInput>;
    create?: InputMaybe<ConfigurationValueTypeCreateWithoutConfigurationParameterInput>;
  };

export type ConfigurationValueTypeCreateOrConnectWithoutConfigurationParameterInput =
  {
    create: ConfigurationValueTypeCreateWithoutConfigurationParameterInput;
    where: ConfigurationValueTypeWhereUniqueInput;
  };

export type ConfigurationValueTypeCreateWithoutConfigurationParameterInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ConfigurationValueTypeMaxAggregate = {
  __typename?: 'ConfigurationValueTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationValueTypeMinAggregate = {
  __typename?: 'ConfigurationValueTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ConfigurationValueTypeRelationFilter = {
  is?: InputMaybe<ConfigurationValueTypeWhereInput>;
  isNot?: InputMaybe<ConfigurationValueTypeWhereInput>;
};

export type ConfigurationValueTypeUpdateOneWithoutConfigurationParameterInput =
  {
    connect?: InputMaybe<ConfigurationValueTypeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<ConfigurationValueTypeCreateOrConnectWithoutConfigurationParameterInput>;
    create?: InputMaybe<ConfigurationValueTypeCreateWithoutConfigurationParameterInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<ConfigurationValueTypeUpdateWithoutConfigurationParameterInput>;
    upsert?: InputMaybe<ConfigurationValueTypeUpsertWithoutConfigurationParameterInput>;
  };

export type ConfigurationValueTypeUpdateWithoutConfigurationParameterInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ConfigurationValueTypeUpsertWithoutConfigurationParameterInput = {
  create: ConfigurationValueTypeCreateWithoutConfigurationParameterInput;
  update: ConfigurationValueTypeUpdateWithoutConfigurationParameterInput;
};

export type ConfigurationValueTypeWhereInput = {
  AND?: InputMaybe<Array<ConfigurationValueTypeWhereInput>>;
  ConfigurationParameter?: InputMaybe<ConfigurationParameterListRelationFilter>;
  NOT?: InputMaybe<Array<ConfigurationValueTypeWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationValueTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationValueTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type ConfigurationWhereInput = {
  AND?: InputMaybe<Array<ConfigurationWhereInput>>;
  AssetStoreConfiguration?: InputMaybe<AssetStoreConfigurationListRelationFilter>;
  Channel?: InputMaybe<ChannelRelationFilter>;
  ConfigurationAsset?: InputMaybe<ConfigurationAssetListRelationFilter>;
  ConfigurationParameterContext?: InputMaybe<ConfigurationParameterContextRelationFilter>;
  Context?: InputMaybe<ContextRelationFilter>;
  NOT?: InputMaybe<Array<ConfigurationWhereInput>>;
  OR?: InputMaybe<Array<ConfigurationWhereInput>>;
  channelId?: InputMaybe<StringNullableFilter>;
  configValue?: InputMaybe<StringNullableFilter>;
  configurationParameterContextId?: InputMaybe<StringNullableFilter>;
  contextFKValue?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ConfigurationWhereInputDto = {
  AND?: InputMaybe<Array<ConfigurationWhereInputDto>>;
  NOT?: InputMaybe<Array<ConfigurationWhereInputDto>>;
  OR?: InputMaybe<Array<ConfigurationWhereInputDto>>;
  channelId?: InputMaybe<UuidNullableFilterDto>;
  configValue?: InputMaybe<StringNullableFilter>;
  configurationParameterContextId?: InputMaybe<UuidNullableFilterDto>;
  contextFKValue?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<UuidNullableFilterDto>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<UuidNullableFilterDto>;
};

export type ConfigurationWhereUniqueInput = {
  configurationParameterContextId_channelId?: InputMaybe<ConfigurationConfigurationParameterContextIdChannelIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type ConfigurationWhereUniqueInputDto = {
  id?: InputMaybe<Scalars['String']>;
};

export type Context = {
  __typename?: 'Context';
  AttributeControlTypeValue?: Maybe<Array<AttributeControlTypeValue>>;
  CategoryHeaderAttributeValue?: Maybe<Array<CategoryHeaderAttributeValue>>;
  Configuration?: Maybe<Array<Configuration>>;
  ConfigurationContext?: Maybe<Array<ConfigurationContext>>;
  WorkFlowContextInstance?: Maybe<Array<WorkFlowContextInstance>>;
  _count: ContextCount;
  contextCode?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ContextCount = {
  __typename?: 'ContextCount';
  AttributeControlTypeValue: Scalars['Int'];
  CategoryHeaderAttributeValue: Scalars['Int'];
  Configuration: Scalars['Int'];
  ConfigurationContext: Scalars['Int'];
  WorkFlowContextInstance: Scalars['Int'];
};

export type ContextCountAggregate = {
  __typename?: 'ContextCountAggregate';
  _all: Scalars['Int'];
  contextCode: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ContextCreateNestedOneWithoutAttributeControlTypeValueInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutAttributeControlTypeValueInput>;
  create?: InputMaybe<ContextCreateWithoutAttributeControlTypeValueInput>;
};

export type ContextCreateNestedOneWithoutCategoryHeaderAttributeValueInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
  create?: InputMaybe<ContextCreateWithoutCategoryHeaderAttributeValueInput>;
};

export type ContextCreateNestedOneWithoutConfigurationContextInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutConfigurationContextInput>;
  create?: InputMaybe<ContextCreateWithoutConfigurationContextInput>;
};

export type ContextCreateNestedOneWithoutConfigurationInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutConfigurationInput>;
  create?: InputMaybe<ContextCreateWithoutConfigurationInput>;
};

export type ContextCreateNestedOneWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutWorkFlowContextInstanceInput>;
  create?: InputMaybe<ContextCreateWithoutWorkFlowContextInstanceInput>;
};

export type ContextCreateOrConnectWithoutAttributeControlTypeValueInput = {
  create: ContextCreateWithoutAttributeControlTypeValueInput;
  where: ContextWhereUniqueInput;
};

export type ContextCreateOrConnectWithoutCategoryHeaderAttributeValueInput = {
  create: ContextCreateWithoutCategoryHeaderAttributeValueInput;
  where: ContextWhereUniqueInput;
};

export type ContextCreateOrConnectWithoutConfigurationContextInput = {
  create: ContextCreateWithoutConfigurationContextInput;
  where: ContextWhereUniqueInput;
};

export type ContextCreateOrConnectWithoutConfigurationInput = {
  create: ContextCreateWithoutConfigurationInput;
  where: ContextWhereUniqueInput;
};

export type ContextCreateOrConnectWithoutWorkFlowContextInstanceInput = {
  create: ContextCreateWithoutWorkFlowContextInstanceInput;
  where: ContextWhereUniqueInput;
};

export type ContextCreateWithoutAttributeControlTypeValueInput = {
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextCreateNestedManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedManyWithoutContextInput>;
  contextCode?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ContextCreateWithoutCategoryHeaderAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextCreateNestedManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedManyWithoutContextInput>;
  contextCode?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ContextCreateWithoutConfigurationContextInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutContextInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedManyWithoutContextInput>;
  contextCode?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ContextCreateWithoutConfigurationInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutContextInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextCreateNestedManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedManyWithoutContextInput>;
  contextCode?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ContextCreateWithoutWorkFlowContextInstanceInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueCreateNestedManyWithoutContextInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueCreateNestedManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationCreateNestedManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextCreateNestedManyWithoutContextInput>;
  contextCode?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ContextMaxAggregate = {
  __typename?: 'ContextMaxAggregate';
  contextCode?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ContextMinAggregate = {
  __typename?: 'ContextMinAggregate';
  contextCode?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ContextOrderByWithRelationInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueOrderByRelationAggregateInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueOrderByRelationAggregateInput>;
  Configuration?: InputMaybe<ConfigurationOrderByRelationAggregateInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextOrderByRelationAggregateInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceOrderByRelationAggregateInput>;
  contextCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type ContextRelationFilter = {
  is?: InputMaybe<ContextWhereInput>;
  isNot?: InputMaybe<ContextWhereInput>;
};

export type ContextUpdateOneWithoutAttributeControlTypeValueInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutAttributeControlTypeValueInput>;
  create?: InputMaybe<ContextCreateWithoutAttributeControlTypeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ContextUpdateWithoutAttributeControlTypeValueInput>;
  upsert?: InputMaybe<ContextUpsertWithoutAttributeControlTypeValueInput>;
};

export type ContextUpdateOneWithoutCategoryHeaderAttributeValueInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutCategoryHeaderAttributeValueInput>;
  create?: InputMaybe<ContextCreateWithoutCategoryHeaderAttributeValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ContextUpdateWithoutCategoryHeaderAttributeValueInput>;
  upsert?: InputMaybe<ContextUpsertWithoutCategoryHeaderAttributeValueInput>;
};

export type ContextUpdateOneWithoutConfigurationContextInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutConfigurationContextInput>;
  create?: InputMaybe<ContextCreateWithoutConfigurationContextInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ContextUpdateWithoutConfigurationContextInput>;
  upsert?: InputMaybe<ContextUpsertWithoutConfigurationContextInput>;
};

export type ContextUpdateOneWithoutConfigurationInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutConfigurationInput>;
  create?: InputMaybe<ContextCreateWithoutConfigurationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ContextUpdateWithoutConfigurationInput>;
  upsert?: InputMaybe<ContextUpsertWithoutConfigurationInput>;
};

export type ContextUpdateOneWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<ContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ContextCreateOrConnectWithoutWorkFlowContextInstanceInput>;
  create?: InputMaybe<ContextCreateWithoutWorkFlowContextInstanceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ContextUpdateWithoutWorkFlowContextInstanceInput>;
  upsert?: InputMaybe<ContextUpsertWithoutWorkFlowContextInstanceInput>;
};

export type ContextUpdateWithoutAttributeControlTypeValueInput = {
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextUpdateManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateManyWithoutContextInput>;
  contextCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ContextUpdateWithoutCategoryHeaderAttributeValueInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextUpdateManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateManyWithoutContextInput>;
  contextCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ContextUpdateWithoutConfigurationContextInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutContextInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateManyWithoutContextInput>;
  contextCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ContextUpdateWithoutConfigurationInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutContextInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextUpdateManyWithoutContextInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateManyWithoutContextInput>;
  contextCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ContextUpdateWithoutWorkFlowContextInstanceInput = {
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueUpdateManyWithoutContextInput>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueUpdateManyWithoutContextInput>;
  Configuration?: InputMaybe<ConfigurationUpdateManyWithoutContextInput>;
  ConfigurationContext?: InputMaybe<ConfigurationContextUpdateManyWithoutContextInput>;
  contextCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ContextUpsertWithoutAttributeControlTypeValueInput = {
  create: ContextCreateWithoutAttributeControlTypeValueInput;
  update: ContextUpdateWithoutAttributeControlTypeValueInput;
};

export type ContextUpsertWithoutCategoryHeaderAttributeValueInput = {
  create: ContextCreateWithoutCategoryHeaderAttributeValueInput;
  update: ContextUpdateWithoutCategoryHeaderAttributeValueInput;
};

export type ContextUpsertWithoutConfigurationContextInput = {
  create: ContextCreateWithoutConfigurationContextInput;
  update: ContextUpdateWithoutConfigurationContextInput;
};

export type ContextUpsertWithoutConfigurationInput = {
  create: ContextCreateWithoutConfigurationInput;
  update: ContextUpdateWithoutConfigurationInput;
};

export type ContextUpsertWithoutWorkFlowContextInstanceInput = {
  create: ContextCreateWithoutWorkFlowContextInstanceInput;
  update: ContextUpdateWithoutWorkFlowContextInstanceInput;
};

export type ContextWhereInput = {
  AND?: InputMaybe<Array<ContextWhereInput>>;
  AttributeControlTypeValue?: InputMaybe<AttributeControlTypeValueListRelationFilter>;
  CategoryHeaderAttributeValue?: InputMaybe<CategoryHeaderAttributeValueListRelationFilter>;
  Configuration?: InputMaybe<ConfigurationListRelationFilter>;
  ConfigurationContext?: InputMaybe<ConfigurationContextListRelationFilter>;
  NOT?: InputMaybe<Array<ContextWhereInput>>;
  OR?: InputMaybe<Array<ContextWhereInput>>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceListRelationFilter>;
  contextCode?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ContextWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Customer = {
  __typename?: 'Customer';
  Brand?: Maybe<Array<Brand>>;
  Channel?: Maybe<Channel>;
  ChannelEnrollment?: Maybe<ChannelEnrollment>;
  CustomerAddress?: Maybe<Array<CustomerAddress>>;
  CustomerAsset?: Maybe<Array<CustomerAsset>>;
  CustomerEnrollmentValue?: Maybe<Array<CustomerEnrollmentValue>>;
  CustomerGeoLocation?: Maybe<Array<CustomerGeoLocation>>;
  CustomerKYC?: Maybe<Array<CustomerKyc>>;
  EnrollmentPayment?: Maybe<Array<EnrollmentPayment>>;
  EnrollmentType?: Maybe<EnrollmentType>;
  SellerStore?: Maybe<Array<SellerStore>>;
  SubscriptionPlan?: Maybe<SubscriptionPlan>;
  Users?: Maybe<Array<CustomerUser>>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  WorkflowInstance?: Maybe<WorkflowInstance>;
  _count: CustomerCount;
  channelId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  creditEligible?: Maybe<Scalars['Boolean']>;
  creditLimit?: Maybe<Scalars['Float']>;
  enrollmentId?: Maybe<Scalars['String']>;
  enrollmentStatus?: Maybe<Scalars['String']>;
  enrollmentTypeId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  subscriptionStatus?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
  workflowInstanceId?: Maybe<Scalars['String']>;
};

export type CustomerAddress = {
  __typename?: 'CustomerAddress';
  Address?: Maybe<Address>;
  Customer?: Maybe<Customer>;
  addressId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerAddressCountAggregate = {
  __typename?: 'CustomerAddressCountAggregate';
  _all: Scalars['Int'];
  addressId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CustomerAddressCreateManyAddressInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAddressCreateManyAddressInputEnvelope = {
  data: Array<CustomerAddressCreateManyAddressInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerAddressCreateManyCustomerInput = {
  addressId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAddressCreateManyCustomerInputEnvelope = {
  data: Array<CustomerAddressCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerAddressCreateNestedManyWithoutAddressInput = {
  connect?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAddressCreateOrConnectWithoutAddressInput>
  >;
  create?: InputMaybe<Array<CustomerAddressCreateWithoutAddressInput>>;
  createMany?: InputMaybe<CustomerAddressCreateManyAddressInputEnvelope>;
};

export type CustomerAddressCreateNestedManyWithoutAddressInputDto = {
  create?: InputMaybe<Array<CustomerAddressCreateWithoutAddressInputDto>>;
};

export type CustomerAddressCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAddressCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerAddressCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerAddressCreateManyCustomerInputEnvelope>;
};

export type CustomerAddressCreateOrConnectWithoutAddressInput = {
  create: CustomerAddressCreateWithoutAddressInput;
  where: CustomerAddressWhereUniqueInput;
};

export type CustomerAddressCreateOrConnectWithoutCustomerInput = {
  create: CustomerAddressCreateWithoutCustomerInput;
  where: CustomerAddressWhereUniqueInput;
};

export type CustomerAddressCreateWithoutAddressInput = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerAddressInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAddressCreateWithoutAddressInputDto = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerAddressInputDto>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAddressCreateWithoutCustomerInput = {
  Address?: InputMaybe<AddressCreateNestedOneWithoutCustomerAddressInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAddressListRelationFilter = {
  every?: InputMaybe<CustomerAddressWhereInput>;
  none?: InputMaybe<CustomerAddressWhereInput>;
  some?: InputMaybe<CustomerAddressWhereInput>;
};

export type CustomerAddressMaxAggregate = {
  __typename?: 'CustomerAddressMaxAggregate';
  addressId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerAddressMinAggregate = {
  __typename?: 'CustomerAddressMinAggregate';
  addressId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerAddressOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerAddressScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerAddressScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerAddressScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerAddressScalarWhereInput>>;
  addressId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerAddressUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerAddressUpdateManyWithWhereWithoutAddressInput = {
  data: CustomerAddressUpdateManyMutationInput;
  where: CustomerAddressScalarWhereInput;
};

export type CustomerAddressUpdateManyWithWhereWithoutCustomerInput = {
  data: CustomerAddressUpdateManyMutationInput;
  where: CustomerAddressScalarWhereInput;
};

export type CustomerAddressUpdateManyWithoutAddressInput = {
  connect?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAddressCreateOrConnectWithoutAddressInput>
  >;
  create?: InputMaybe<Array<CustomerAddressCreateWithoutAddressInput>>;
  createMany?: InputMaybe<CustomerAddressCreateManyAddressInputEnvelope>;
  delete?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerAddressScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerAddressUpdateWithWhereUniqueWithoutAddressInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerAddressUpdateManyWithWhereWithoutAddressInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerAddressUpsertWithWhereUniqueWithoutAddressInput>
  >;
};

export type CustomerAddressUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAddressCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerAddressCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerAddressCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerAddressScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerAddressWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerAddressUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type CustomerAddressUpdateWithWhereUniqueWithoutAddressInput = {
  data: CustomerAddressUpdateWithoutAddressInput;
  where: CustomerAddressWhereUniqueInput;
};

export type CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput = {
  data: CustomerAddressUpdateWithoutCustomerInput;
  where: CustomerAddressWhereUniqueInput;
};

export type CustomerAddressUpdateWithoutAddressInput = {
  Customer?: InputMaybe<CustomerUpdateOneWithoutCustomerAddressInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerAddressUpdateWithoutCustomerInput = {
  Address?: InputMaybe<AddressUpdateOneWithoutCustomerAddressInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerAddressUpsertWithWhereUniqueWithoutAddressInput = {
  create: CustomerAddressCreateWithoutAddressInput;
  update: CustomerAddressUpdateWithoutAddressInput;
  where: CustomerAddressWhereUniqueInput;
};

export type CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput = {
  create: CustomerAddressCreateWithoutCustomerInput;
  update: CustomerAddressUpdateWithoutCustomerInput;
  where: CustomerAddressWhereUniqueInput;
};

export type CustomerAddressWhereInput = {
  AND?: InputMaybe<Array<CustomerAddressWhereInput>>;
  Address?: InputMaybe<AddressRelationFilter>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  NOT?: InputMaybe<Array<CustomerAddressWhereInput>>;
  OR?: InputMaybe<Array<CustomerAddressWhereInput>>;
  addressId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerAddressWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerAsset = {
  __typename?: 'CustomerAsset';
  Asset?: Maybe<Asset>;
  Customer?: Maybe<Customer>;
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerAssetCountAggregate = {
  __typename?: 'CustomerAssetCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  id: Scalars['Int'];
  internalName: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CustomerAssetCreateManyAssetInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAssetCreateManyAssetInputEnvelope = {
  data: Array<CustomerAssetCreateManyAssetInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerAssetCreateManyCustomerInput = {
  assetId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAssetCreateManyCustomerInputEnvelope = {
  data: Array<CustomerAssetCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerAssetCreateNestedManyWithoutAssetInput = {
  connect?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<CustomerAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<CustomerAssetCreateManyAssetInputEnvelope>;
};

export type CustomerAssetCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAssetCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerAssetCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerAssetCreateManyCustomerInputEnvelope>;
};

export type CustomerAssetCreateOrConnectWithoutAssetInput = {
  create: CustomerAssetCreateWithoutAssetInput;
  where: CustomerAssetWhereUniqueInput;
};

export type CustomerAssetCreateOrConnectWithoutCustomerInput = {
  create: CustomerAssetCreateWithoutCustomerInput;
  where: CustomerAssetWhereUniqueInput;
};

export type CustomerAssetCreateWithoutAssetInput = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAssetCreateWithoutCustomerInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutCustomerAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerAssetCustomerIdAssetIdCompoundUniqueInput = {
  assetId: Scalars['String'];
  customerId: Scalars['String'];
};

export type CustomerAssetListRelationFilter = {
  every?: InputMaybe<CustomerAssetWhereInput>;
  none?: InputMaybe<CustomerAssetWhereInput>;
  some?: InputMaybe<CustomerAssetWhereInput>;
};

export type CustomerAssetMaxAggregate = {
  __typename?: 'CustomerAssetMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerAssetMinAggregate = {
  __typename?: 'CustomerAssetMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerAssetOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerAssetScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerAssetScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerAssetScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerAssetScalarWhereInput>>;
  assetId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerAssetUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerAssetUpdateManyWithWhereWithoutAssetInput = {
  data: CustomerAssetUpdateManyMutationInput;
  where: CustomerAssetScalarWhereInput;
};

export type CustomerAssetUpdateManyWithWhereWithoutCustomerInput = {
  data: CustomerAssetUpdateManyMutationInput;
  where: CustomerAssetScalarWhereInput;
};

export type CustomerAssetUpdateManyWithoutAssetInput = {
  connect?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<CustomerAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<CustomerAssetCreateManyAssetInputEnvelope>;
  delete?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerAssetUpdateWithWhereUniqueWithoutAssetInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerAssetUpdateManyWithWhereWithoutAssetInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerAssetUpsertWithWhereUniqueWithoutAssetInput>
  >;
};

export type CustomerAssetUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerAssetCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerAssetCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerAssetCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerAssetWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerAssetUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerAssetUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerAssetUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type CustomerAssetUpdateWithWhereUniqueWithoutAssetInput = {
  data: CustomerAssetUpdateWithoutAssetInput;
  where: CustomerAssetWhereUniqueInput;
};

export type CustomerAssetUpdateWithWhereUniqueWithoutCustomerInput = {
  data: CustomerAssetUpdateWithoutCustomerInput;
  where: CustomerAssetWhereUniqueInput;
};

export type CustomerAssetUpdateWithoutAssetInput = {
  Customer?: InputMaybe<CustomerUpdateOneWithoutCustomerAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerAssetUpdateWithoutCustomerInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutCustomerAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerAssetUpsertWithWhereUniqueWithoutAssetInput = {
  create: CustomerAssetCreateWithoutAssetInput;
  update: CustomerAssetUpdateWithoutAssetInput;
  where: CustomerAssetWhereUniqueInput;
};

export type CustomerAssetUpsertWithWhereUniqueWithoutCustomerInput = {
  create: CustomerAssetCreateWithoutCustomerInput;
  update: CustomerAssetUpdateWithoutCustomerInput;
  where: CustomerAssetWhereUniqueInput;
};

export type CustomerAssetWhereInput = {
  AND?: InputMaybe<Array<CustomerAssetWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  NOT?: InputMaybe<Array<CustomerAssetWhereInput>>;
  OR?: InputMaybe<Array<CustomerAssetWhereInput>>;
  assetId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerAssetWhereUniqueInput = {
  customerId_assetId?: InputMaybe<CustomerAssetCustomerIdAssetIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerAttributeArray = {
  attributeId: Scalars['String'];
  attributeValueText: Scalars['String'];
};

export type CustomerAvgAggregate = {
  __typename?: 'CustomerAvgAggregate';
  creditLimit?: Maybe<Scalars['Float']>;
};

export type CustomerCount = {
  __typename?: 'CustomerCount';
  Brand: Scalars['Int'];
  CustomerAddress: Scalars['Int'];
  CustomerAsset: Scalars['Int'];
  CustomerEnrollmentValue: Scalars['Int'];
  CustomerGeoLocation: Scalars['Int'];
  CustomerKYC: Scalars['Int'];
  EnrollmentPayment: Scalars['Int'];
  SellerStore: Scalars['Int'];
  Users: Scalars['Int'];
};

export type CustomerCountAggregate = {
  __typename?: 'CustomerCountAggregate';
  _all: Scalars['Int'];
  channelId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  creditEligible: Scalars['Int'];
  creditLimit: Scalars['Int'];
  enrollmentId: Scalars['Int'];
  enrollmentStatus: Scalars['Int'];
  enrollmentTypeId: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isGeoRestricted: Scalars['Int'];
  isPriceVisible: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  subscriptionPlanId: Scalars['Int'];
  subscriptionStatus: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workFlowContextInstanceId: Scalars['Int'];
  workflowInstanceId: Scalars['Int'];
};

export type CustomerCreateManyChannelEnrollmentInput = {
  channelId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  enrollmentTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
  workflowInstanceId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyChannelEnrollmentInputEnvelope = {
  data: Array<CustomerCreateManyChannelEnrollmentInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManyChannelInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentId?: InputMaybe<Scalars['String']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  enrollmentTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
  workflowInstanceId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyChannelInputEnvelope = {
  data: Array<CustomerCreateManyChannelInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManyEnrollmentTypeInput = {
  channelId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentId?: InputMaybe<Scalars['String']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
  workflowInstanceId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyEnrollmentTypeInputEnvelope = {
  data: Array<CustomerCreateManyEnrollmentTypeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManySubscriptionPlanInput = {
  channelId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentId?: InputMaybe<Scalars['String']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  enrollmentTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
  workflowInstanceId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManySubscriptionPlanInputEnvelope = {
  data: Array<CustomerCreateManySubscriptionPlanInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManyWorkFlowContextInstanceInput = {
  channelId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentId?: InputMaybe<Scalars['String']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  enrollmentTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowInstanceId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyWorkFlowContextInstanceInputEnvelope = {
  data: Array<CustomerCreateManyWorkFlowContextInstanceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManyWorkflowInstanceInput = {
  channelId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentId?: InputMaybe<Scalars['String']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  enrollmentTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateManyWorkflowInstanceInputEnvelope = {
  data: Array<CustomerCreateManyWorkflowInstanceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateNestedManyWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutChannelEnrollmentInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutChannelEnrollmentInput>>;
  createMany?: InputMaybe<CustomerCreateManyChannelEnrollmentInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutChannelInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutChannelInput>>;
  createMany?: InputMaybe<CustomerCreateManyChannelInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutEnrollmentTypeInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutEnrollmentTypeInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutEnrollmentTypeInput>>;
  createMany?: InputMaybe<CustomerCreateManyEnrollmentTypeInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutSubscriptionPlanInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutSubscriptionPlanInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutSubscriptionPlanInput>>;
  createMany?: InputMaybe<CustomerCreateManySubscriptionPlanInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<CustomerCreateManyWorkFlowContextInstanceInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutWorkflowInstanceInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutWorkflowInstanceInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutWorkflowInstanceInput>>;
  createMany?: InputMaybe<CustomerCreateManyWorkflowInstanceInputEnvelope>;
};

export type CustomerCreateNestedOneWithoutBrandInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<CustomerCreateWithoutBrandInput>;
};

export type CustomerCreateNestedOneWithoutCustomerAddressInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerAddressInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerAddressInput>;
};

export type CustomerCreateNestedOneWithoutCustomerAddressInputDto = {
  connect?: InputMaybe<CustomerWhereUniqueInputDto>;
};

export type CustomerCreateNestedOneWithoutCustomerAssetInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerAssetInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerAssetInput>;
};

export type CustomerCreateNestedOneWithoutCustomerEnrollmentValueInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerEnrollmentValueInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerEnrollmentValueInput>;
};

export type CustomerCreateNestedOneWithoutCustomerGeoLocationInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerGeoLocationInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerGeoLocationInput>;
};

export type CustomerCreateNestedOneWithoutCustomerKycInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerKycInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerKycInput>;
};

export type CustomerCreateNestedOneWithoutEnrollmentPaymentInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutEnrollmentPaymentInput>;
  create?: InputMaybe<CustomerCreateWithoutEnrollmentPaymentInput>;
};

export type CustomerCreateNestedOneWithoutUsersInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<CustomerCreateWithoutUsersInput>;
};

export type CustomerCreateOrConnectWithoutBrandInput = {
  create: CustomerCreateWithoutBrandInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutChannelEnrollmentInput = {
  create: CustomerCreateWithoutChannelEnrollmentInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutChannelInput = {
  create: CustomerCreateWithoutChannelInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutCustomerAddressInput = {
  create: CustomerCreateWithoutCustomerAddressInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutCustomerAssetInput = {
  create: CustomerCreateWithoutCustomerAssetInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutCustomerEnrollmentValueInput = {
  create: CustomerCreateWithoutCustomerEnrollmentValueInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutCustomerGeoLocationInput = {
  create: CustomerCreateWithoutCustomerGeoLocationInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutCustomerKycInput = {
  create: CustomerCreateWithoutCustomerKycInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutEnrollmentPaymentInput = {
  create: CustomerCreateWithoutEnrollmentPaymentInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutEnrollmentTypeInput = {
  create: CustomerCreateWithoutEnrollmentTypeInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutSubscriptionPlanInput = {
  create: CustomerCreateWithoutSubscriptionPlanInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutUsersInput = {
  create: CustomerCreateWithoutUsersInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutWorkFlowContextInstanceInput = {
  create: CustomerCreateWithoutWorkFlowContextInstanceInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutWorkflowInstanceInput = {
  create: CustomerCreateWithoutWorkflowInstanceInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateWithoutBrandInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutChannelEnrollmentInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutChannelInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutCustomerAddressInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutCustomerAssetInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutCustomerEnrollmentValueInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutCustomerGeoLocationInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutCustomerKycInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutEnrollmentPaymentInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutEnrollmentTypeInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutSubscriptionPlanInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutUsersInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutWorkFlowContextInstanceInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutWorkflowInstanceInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressCreateNestedManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetCreateNestedManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeCreateNestedOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreCreateNestedManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserCreateNestedManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  creditEligible?: InputMaybe<Scalars['Boolean']>;
  creditLimit?: InputMaybe<Scalars['Float']>;
  enrollmentStatus?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  subscriptionStatus?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerDto = {
  __typename?: 'CustomerDTO';
  Brand?: Maybe<Array<Brand>>;
  Channel?: Maybe<Channel>;
  ChannelEnrollment?: Maybe<ChannelEnrollment>;
  CustomerAddress?: Maybe<Array<CustomerAddress>>;
  CustomerAsset?: Maybe<Array<CustomerAsset>>;
  CustomerEnrollmentValue?: Maybe<Array<CustomerEnrollmentValue>>;
  CustomerGeoLocation?: Maybe<Array<CustomerGeoLocation>>;
  CustomerUser?: Maybe<Array<CustomerUser>>;
  EnrollmentPayment?: Maybe<Array<EnrollmentPayment>>;
  EnrollmentType?: Maybe<EnrollmentType>;
  SellerStore?: Maybe<Array<SellerStore>>;
  SubscriptionPlan?: Maybe<SubscriptionPlan>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  WorkflowInstance?: Maybe<WorkflowInstance>;
  _count: CustomerCount;
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  creditEligible?: Maybe<Scalars['Boolean']>;
  creditLimit?: Maybe<Scalars['Float']>;
  enrollmentId?: Maybe<Scalars['String']>;
  enrollmentStatus?: Maybe<Scalars['String']>;
  enrollmentTypeId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  subscriptionStatus?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
  workflowInstanceId?: Maybe<Scalars['String']>;
};

export type CustomerEnrollmentValue = {
  __typename?: 'CustomerEnrollmentValue';
  Attribute?: Maybe<Attribute>;
  AttributeValue?: Maybe<AttributeValue>;
  Customer?: Maybe<Customer>;
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerEnrollmentValueCountAggregate = {
  __typename?: 'CustomerEnrollmentValueCountAggregate';
  _all: Scalars['Int'];
  attributeId: Scalars['Int'];
  attributeValueId: Scalars['Int'];
  attributeValueText: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  id: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CustomerEnrollmentValueCreateManyAttributeInput = {
  attributeValueId?: InputMaybe<Scalars['String']>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerEnrollmentValueCreateManyAttributeInputEnvelope = {
  data: Array<CustomerEnrollmentValueCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerEnrollmentValueCreateManyAttributeValueInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerEnrollmentValueCreateManyAttributeValueInputEnvelope = {
  data: Array<CustomerEnrollmentValueCreateManyAttributeValueInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerEnrollmentValueCreateManyCustomerInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  attributeValueId?: InputMaybe<Scalars['String']>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerEnrollmentValueCreateManyCustomerInputEnvelope = {
  data: Array<CustomerEnrollmentValueCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerEnrollmentValueCreateNestedManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerEnrollmentValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<
    Array<CustomerEnrollmentValueCreateWithoutAttributeInput>
  >;
  createMany?: InputMaybe<CustomerEnrollmentValueCreateManyAttributeInputEnvelope>;
};

export type CustomerEnrollmentValueCreateNestedManyWithoutAttributeValueInput =
  {
    connect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<CustomerEnrollmentValueCreateOrConnectWithoutAttributeValueInput>
    >;
    create?: InputMaybe<
      Array<CustomerEnrollmentValueCreateWithoutAttributeValueInput>
    >;
    createMany?: InputMaybe<CustomerEnrollmentValueCreateManyAttributeValueInputEnvelope>;
  };

export type CustomerEnrollmentValueCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerEnrollmentValueCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerEnrollmentValueCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerEnrollmentValueCreateManyCustomerInputEnvelope>;
};

export type CustomerEnrollmentValueCreateOrConnectWithoutAttributeInput = {
  create: CustomerEnrollmentValueCreateWithoutAttributeInput;
  where: CustomerEnrollmentValueWhereUniqueInput;
};

export type CustomerEnrollmentValueCreateOrConnectWithoutAttributeValueInput = {
  create: CustomerEnrollmentValueCreateWithoutAttributeValueInput;
  where: CustomerEnrollmentValueWhereUniqueInput;
};

export type CustomerEnrollmentValueCreateOrConnectWithoutCustomerInput = {
  create: CustomerEnrollmentValueCreateWithoutCustomerInput;
  where: CustomerEnrollmentValueWhereUniqueInput;
};

export type CustomerEnrollmentValueCreateWithoutAttributeInput = {
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutCustomerEnrollmentValueInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerEnrollmentValueInput>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerEnrollmentValueCreateWithoutAttributeValueInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutCustomerEnrollmentValueInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerEnrollmentValueInput>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerEnrollmentValueCreateWithoutCustomerInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutCustomerEnrollmentValueInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutCustomerEnrollmentValueInput>;
  attributeValueText?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerEnrollmentValueCustomerIdAttributeIdCompoundUniqueInput = {
  attributeId: Scalars['String'];
  customerId: Scalars['String'];
};

export type CustomerEnrollmentValueListRelationFilter = {
  every?: InputMaybe<CustomerEnrollmentValueWhereInput>;
  none?: InputMaybe<CustomerEnrollmentValueWhereInput>;
  some?: InputMaybe<CustomerEnrollmentValueWhereInput>;
};

export type CustomerEnrollmentValueMaxAggregate = {
  __typename?: 'CustomerEnrollmentValueMaxAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerEnrollmentValueMinAggregate = {
  __typename?: 'CustomerEnrollmentValueMinAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerEnrollmentValueOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerEnrollmentValueScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerEnrollmentValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerEnrollmentValueScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerEnrollmentValueScalarWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  attributeValueId?: InputMaybe<StringNullableFilter>;
  attributeValueText?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerEnrollmentValueUpdateManyMutationInput = {
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerEnrollmentValueUpdateManyWithWhereWithoutAttributeInput = {
  data: CustomerEnrollmentValueUpdateManyMutationInput;
  where: CustomerEnrollmentValueScalarWhereInput;
};

export type CustomerEnrollmentValueUpdateManyWithWhereWithoutAttributeValueInput =
  {
    data: CustomerEnrollmentValueUpdateManyMutationInput;
    where: CustomerEnrollmentValueScalarWhereInput;
  };

export type CustomerEnrollmentValueUpdateManyWithWhereWithoutCustomerInput = {
  data: CustomerEnrollmentValueUpdateManyMutationInput;
  where: CustomerEnrollmentValueScalarWhereInput;
};

export type CustomerEnrollmentValueUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerEnrollmentValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<
    Array<CustomerEnrollmentValueCreateWithoutAttributeInput>
  >;
  createMany?: InputMaybe<CustomerEnrollmentValueCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerEnrollmentValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerEnrollmentValueUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerEnrollmentValueUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerEnrollmentValueUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type CustomerEnrollmentValueUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerEnrollmentValueCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<CustomerEnrollmentValueCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<CustomerEnrollmentValueCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerEnrollmentValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerEnrollmentValueUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerEnrollmentValueUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerEnrollmentValueUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type CustomerEnrollmentValueUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerEnrollmentValueCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerEnrollmentValueCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerEnrollmentValueCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerEnrollmentValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerEnrollmentValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerEnrollmentValueUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerEnrollmentValueUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerEnrollmentValueUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type CustomerEnrollmentValueUpdateWithWhereUniqueWithoutAttributeInput =
  {
    data: CustomerEnrollmentValueUpdateWithoutAttributeInput;
    where: CustomerEnrollmentValueWhereUniqueInput;
  };

export type CustomerEnrollmentValueUpdateWithWhereUniqueWithoutAttributeValueInput =
  {
    data: CustomerEnrollmentValueUpdateWithoutAttributeValueInput;
    where: CustomerEnrollmentValueWhereUniqueInput;
  };

export type CustomerEnrollmentValueUpdateWithWhereUniqueWithoutCustomerInput = {
  data: CustomerEnrollmentValueUpdateWithoutCustomerInput;
  where: CustomerEnrollmentValueWhereUniqueInput;
};

export type CustomerEnrollmentValueUpdateWithoutAttributeInput = {
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutCustomerEnrollmentValueInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutCustomerEnrollmentValueInput>;
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerEnrollmentValueUpdateWithoutAttributeValueInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutCustomerEnrollmentValueInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutCustomerEnrollmentValueInput>;
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerEnrollmentValueUpdateWithoutCustomerInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutCustomerEnrollmentValueInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutCustomerEnrollmentValueInput>;
  attributeValueText?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerEnrollmentValueUpsertWithWhereUniqueWithoutAttributeInput =
  {
    create: CustomerEnrollmentValueCreateWithoutAttributeInput;
    update: CustomerEnrollmentValueUpdateWithoutAttributeInput;
    where: CustomerEnrollmentValueWhereUniqueInput;
  };

export type CustomerEnrollmentValueUpsertWithWhereUniqueWithoutAttributeValueInput =
  {
    create: CustomerEnrollmentValueCreateWithoutAttributeValueInput;
    update: CustomerEnrollmentValueUpdateWithoutAttributeValueInput;
    where: CustomerEnrollmentValueWhereUniqueInput;
  };

export type CustomerEnrollmentValueUpsertWithWhereUniqueWithoutCustomerInput = {
  create: CustomerEnrollmentValueCreateWithoutCustomerInput;
  update: CustomerEnrollmentValueUpdateWithoutCustomerInput;
  where: CustomerEnrollmentValueWhereUniqueInput;
};

export type CustomerEnrollmentValueWhereInput = {
  AND?: InputMaybe<Array<CustomerEnrollmentValueWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  AttributeValue?: InputMaybe<AttributeValueRelationFilter>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  NOT?: InputMaybe<Array<CustomerEnrollmentValueWhereInput>>;
  OR?: InputMaybe<Array<CustomerEnrollmentValueWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  attributeValueId?: InputMaybe<StringNullableFilter>;
  attributeValueText?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerEnrollmentValueWhereUniqueInput = {
  customerId_attributeId?: InputMaybe<CustomerEnrollmentValueCustomerIdAttributeIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerGeoLocation = {
  __typename?: 'CustomerGeoLocation';
  Customer?: Maybe<Customer>;
  GeoLocation?: Maybe<GeoLocation>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isInclude?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerGeoLocationCountAggregate = {
  __typename?: 'CustomerGeoLocationCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  geoLocationId: Scalars['Int'];
  id: Scalars['Int'];
  isInclude: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CustomerGeoLocationCreateManyCustomerInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  geoLocationId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerGeoLocationCreateManyCustomerInputEnvelope = {
  data: Array<CustomerGeoLocationCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerGeoLocationCreateManyGeoLocationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerGeoLocationCreateManyGeoLocationInputEnvelope = {
  data: Array<CustomerGeoLocationCreateManyGeoLocationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerGeoLocationCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerGeoLocationCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerGeoLocationCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerGeoLocationCreateManyCustomerInputEnvelope>;
};

export type CustomerGeoLocationCreateNestedManyWithoutGeoLocationInput = {
  connect?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerGeoLocationCreateOrConnectWithoutGeoLocationInput>
  >;
  create?: InputMaybe<Array<CustomerGeoLocationCreateWithoutGeoLocationInput>>;
  createMany?: InputMaybe<CustomerGeoLocationCreateManyGeoLocationInputEnvelope>;
};

export type CustomerGeoLocationCreateOrConnectWithoutCustomerInput = {
  create: CustomerGeoLocationCreateWithoutCustomerInput;
  where: CustomerGeoLocationWhereUniqueInput;
};

export type CustomerGeoLocationCreateOrConnectWithoutGeoLocationInput = {
  create: CustomerGeoLocationCreateWithoutGeoLocationInput;
  where: CustomerGeoLocationWhereUniqueInput;
};

export type CustomerGeoLocationCreateWithoutCustomerInput = {
  GeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutCustomerGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerGeoLocationCreateWithoutGeoLocationInput = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerGeoLocationCustomerIdGeoLocationIdCompoundUniqueInput = {
  customerId: Scalars['String'];
  geoLocationId: Scalars['String'];
};

export type CustomerGeoLocationInputDto = {
  geoLocationId: Scalars['String'];
  isInclude?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerGeoLocationListRelationFilter = {
  every?: InputMaybe<CustomerGeoLocationWhereInput>;
  none?: InputMaybe<CustomerGeoLocationWhereInput>;
  some?: InputMaybe<CustomerGeoLocationWhereInput>;
};

export type CustomerGeoLocationMaxAggregate = {
  __typename?: 'CustomerGeoLocationMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isInclude?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerGeoLocationMinAggregate = {
  __typename?: 'CustomerGeoLocationMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isInclude?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerGeoLocationModel = {
  __typename?: 'CustomerGeoLocationModel';
  customerId?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isInclude?: Maybe<Scalars['Boolean']>;
};

export type CustomerGeoLocationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerGeoLocationScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerGeoLocationScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerGeoLocationScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerGeoLocationScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  geoLocationId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isInclude?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerGeoLocationUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerGeoLocationUpdateManyWithWhereWithoutCustomerInput = {
  data: CustomerGeoLocationUpdateManyMutationInput;
  where: CustomerGeoLocationScalarWhereInput;
};

export type CustomerGeoLocationUpdateManyWithWhereWithoutGeoLocationInput = {
  data: CustomerGeoLocationUpdateManyMutationInput;
  where: CustomerGeoLocationScalarWhereInput;
};

export type CustomerGeoLocationUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerGeoLocationCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerGeoLocationCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerGeoLocationCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerGeoLocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerGeoLocationUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerGeoLocationUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerGeoLocationUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type CustomerGeoLocationUpdateManyWithoutGeoLocationInput = {
  connect?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerGeoLocationCreateOrConnectWithoutGeoLocationInput>
  >;
  create?: InputMaybe<Array<CustomerGeoLocationCreateWithoutGeoLocationInput>>;
  createMany?: InputMaybe<CustomerGeoLocationCreateManyGeoLocationInputEnvelope>;
  delete?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerGeoLocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerGeoLocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerGeoLocationUpdateWithWhereUniqueWithoutGeoLocationInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerGeoLocationUpdateManyWithWhereWithoutGeoLocationInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerGeoLocationUpsertWithWhereUniqueWithoutGeoLocationInput>
  >;
};

export type CustomerGeoLocationUpdateWithWhereUniqueWithoutCustomerInput = {
  data: CustomerGeoLocationUpdateWithoutCustomerInput;
  where: CustomerGeoLocationWhereUniqueInput;
};

export type CustomerGeoLocationUpdateWithWhereUniqueWithoutGeoLocationInput = {
  data: CustomerGeoLocationUpdateWithoutGeoLocationInput;
  where: CustomerGeoLocationWhereUniqueInput;
};

export type CustomerGeoLocationUpdateWithoutCustomerInput = {
  GeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutCustomerGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerGeoLocationUpdateWithoutGeoLocationInput = {
  Customer?: InputMaybe<CustomerUpdateOneWithoutCustomerGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerGeoLocationUpsertWithWhereUniqueWithoutCustomerInput = {
  create: CustomerGeoLocationCreateWithoutCustomerInput;
  update: CustomerGeoLocationUpdateWithoutCustomerInput;
  where: CustomerGeoLocationWhereUniqueInput;
};

export type CustomerGeoLocationUpsertWithWhereUniqueWithoutGeoLocationInput = {
  create: CustomerGeoLocationCreateWithoutGeoLocationInput;
  update: CustomerGeoLocationUpdateWithoutGeoLocationInput;
  where: CustomerGeoLocationWhereUniqueInput;
};

export type CustomerGeoLocationWhereInput = {
  AND?: InputMaybe<Array<CustomerGeoLocationWhereInput>>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  GeoLocation?: InputMaybe<GeoLocationRelationFilter>;
  NOT?: InputMaybe<Array<CustomerGeoLocationWhereInput>>;
  OR?: InputMaybe<Array<CustomerGeoLocationWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  geoLocationId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isInclude?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerGeoLocationWhereUniqueInput = {
  customerId_geoLocationId?: InputMaybe<CustomerGeoLocationCustomerIdGeoLocationIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerKyc = {
  __typename?: 'CustomerKYC';
  Customer?: Maybe<Customer>;
  CustomerKYCAsset?: Maybe<Array<CustomerKycAsset>>;
  KYCHeader?: Maybe<KycHeader>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  _count: CustomerKycCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  kycId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type CustomerKycAsset = {
  __typename?: 'CustomerKYCAsset';
  Asset?: Maybe<Asset>;
  CustomerKYC?: Maybe<CustomerKyc>;
  assetId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerKycId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerKycAssetCountAggregate = {
  __typename?: 'CustomerKYCAssetCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerKycId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type CustomerKycAssetCreateManyAssetInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerKycId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycAssetCreateManyAssetInputEnvelope = {
  data: Array<CustomerKycAssetCreateManyAssetInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerKycAssetCreateManyCustomerKycInput = {
  assetId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycAssetCreateManyCustomerKycInputEnvelope = {
  data: Array<CustomerKycAssetCreateManyCustomerKycInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerKycAssetCreateNestedManyWithoutAssetInput = {
  connect?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<CustomerKycAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<CustomerKycAssetCreateManyAssetInputEnvelope>;
};

export type CustomerKycAssetCreateNestedManyWithoutCustomerKycInput = {
  connect?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycAssetCreateOrConnectWithoutCustomerKycInput>
  >;
  create?: InputMaybe<Array<CustomerKycAssetCreateWithoutCustomerKycInput>>;
  createMany?: InputMaybe<CustomerKycAssetCreateManyCustomerKycInputEnvelope>;
};

export type CustomerKycAssetCreateOrConnectWithoutAssetInput = {
  create: CustomerKycAssetCreateWithoutAssetInput;
  where: CustomerKycAssetWhereUniqueInput;
};

export type CustomerKycAssetCreateOrConnectWithoutCustomerKycInput = {
  create: CustomerKycAssetCreateWithoutCustomerKycInput;
  where: CustomerKycAssetWhereUniqueInput;
};

export type CustomerKycAssetCreateWithoutAssetInput = {
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedOneWithoutCustomerKycAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycAssetCreateWithoutCustomerKycInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutCustomerKycAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycAssetCustomerKycIdAssetIdCompoundUniqueInput = {
  assetId: Scalars['String'];
  customerKycId: Scalars['String'];
};

export type CustomerKycAssetListRelationFilter = {
  every?: InputMaybe<CustomerKycAssetWhereInput>;
  none?: InputMaybe<CustomerKycAssetWhereInput>;
  some?: InputMaybe<CustomerKycAssetWhereInput>;
};

export type CustomerKycAssetMaxAggregate = {
  __typename?: 'CustomerKYCAssetMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerKycId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerKycAssetMinAggregate = {
  __typename?: 'CustomerKYCAssetMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerKycId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type CustomerKycAssetOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerKycAssetScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerKycAssetScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerKycAssetScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerKycAssetScalarWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerKycId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerKycAssetUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerKycAssetUpdateManyWithWhereWithoutAssetInput = {
  data: CustomerKycAssetUpdateManyMutationInput;
  where: CustomerKycAssetScalarWhereInput;
};

export type CustomerKycAssetUpdateManyWithWhereWithoutCustomerKycInput = {
  data: CustomerKycAssetUpdateManyMutationInput;
  where: CustomerKycAssetScalarWhereInput;
};

export type CustomerKycAssetUpdateManyWithoutAssetInput = {
  connect?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<CustomerKycAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<CustomerKycAssetCreateManyAssetInputEnvelope>;
  delete?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerKycAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerKycAssetUpdateWithWhereUniqueWithoutAssetInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerKycAssetUpdateManyWithWhereWithoutAssetInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerKycAssetUpsertWithWhereUniqueWithoutAssetInput>
  >;
};

export type CustomerKycAssetUpdateManyWithoutCustomerKycInput = {
  connect?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycAssetCreateOrConnectWithoutCustomerKycInput>
  >;
  create?: InputMaybe<Array<CustomerKycAssetCreateWithoutCustomerKycInput>>;
  createMany?: InputMaybe<CustomerKycAssetCreateManyCustomerKycInputEnvelope>;
  delete?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerKycAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerKycAssetWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerKycAssetUpdateWithWhereUniqueWithoutCustomerKycInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerKycAssetUpdateManyWithWhereWithoutCustomerKycInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerKycAssetUpsertWithWhereUniqueWithoutCustomerKycInput>
  >;
};

export type CustomerKycAssetUpdateWithWhereUniqueWithoutAssetInput = {
  data: CustomerKycAssetUpdateWithoutAssetInput;
  where: CustomerKycAssetWhereUniqueInput;
};

export type CustomerKycAssetUpdateWithWhereUniqueWithoutCustomerKycInput = {
  data: CustomerKycAssetUpdateWithoutCustomerKycInput;
  where: CustomerKycAssetWhereUniqueInput;
};

export type CustomerKycAssetUpdateWithoutAssetInput = {
  CustomerKYC?: InputMaybe<CustomerKycUpdateOneWithoutCustomerKycAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerKycAssetUpdateWithoutCustomerKycInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutCustomerKycAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerKycAssetUpsertWithWhereUniqueWithoutAssetInput = {
  create: CustomerKycAssetCreateWithoutAssetInput;
  update: CustomerKycAssetUpdateWithoutAssetInput;
  where: CustomerKycAssetWhereUniqueInput;
};

export type CustomerKycAssetUpsertWithWhereUniqueWithoutCustomerKycInput = {
  create: CustomerKycAssetCreateWithoutCustomerKycInput;
  update: CustomerKycAssetUpdateWithoutCustomerKycInput;
  where: CustomerKycAssetWhereUniqueInput;
};

export type CustomerKycAssetWhereInput = {
  AND?: InputMaybe<Array<CustomerKycAssetWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  CustomerKYC?: InputMaybe<CustomerKycRelationFilter>;
  NOT?: InputMaybe<Array<CustomerKycAssetWhereInput>>;
  OR?: InputMaybe<Array<CustomerKycAssetWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerKycId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type CustomerKycAssetWhereUniqueInput = {
  customerKycId_assetId?: InputMaybe<CustomerKycAssetCustomerKycIdAssetIdCompoundUniqueInput>;
};

export type CustomerKycCount = {
  __typename?: 'CustomerKYCCount';
  CustomerKYCAsset: Scalars['Int'];
};

export type CustomerKycCountAggregate = {
  __typename?: 'CustomerKYCCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  id: Scalars['Int'];
  kycId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workFlowContextInstanceId: Scalars['Int'];
};

export type CustomerKycCreateManyCustomerInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  kycId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
};

export type CustomerKycCreateManyCustomerInputEnvelope = {
  data: Array<CustomerKycCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerKycCreateManyWorkFlowContextInstanceInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  kycId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycCreateManyWorkFlowContextInstanceInputEnvelope = {
  data: Array<CustomerKycCreateManyWorkFlowContextInstanceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerKycCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerKycCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerKycCreateManyCustomerInputEnvelope>;
};

export type CustomerKycCreateNestedManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<
    Array<CustomerKycCreateWithoutWorkFlowContextInstanceInput>
  >;
  createMany?: InputMaybe<CustomerKycCreateManyWorkFlowContextInstanceInputEnvelope>;
};

export type CustomerKycCreateNestedOneWithoutCustomerKycAssetInput = {
  connect?: InputMaybe<CustomerKycWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerKycCreateOrConnectWithoutCustomerKycAssetInput>;
  create?: InputMaybe<CustomerKycCreateWithoutCustomerKycAssetInput>;
};

export type CustomerKycCreateOrConnectWithoutCustomerInput = {
  create: CustomerKycCreateWithoutCustomerInput;
  where: CustomerKycWhereUniqueInput;
};

export type CustomerKycCreateOrConnectWithoutCustomerKycAssetInput = {
  create: CustomerKycCreateWithoutCustomerKycAssetInput;
  where: CustomerKycWhereUniqueInput;
};

export type CustomerKycCreateOrConnectWithoutWorkFlowContextInstanceInput = {
  create: CustomerKycCreateWithoutWorkFlowContextInstanceInput;
  where: CustomerKycWhereUniqueInput;
};

export type CustomerKycCreateWithoutCustomerInput = {
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutCustomerKycInput>;
  KYCHeader?: InputMaybe<KycHeaderCreateNestedOneWithoutCustomerKycInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerKycInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycCreateWithoutCustomerKycAssetInput = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerKycInput>;
  KYCHeader?: InputMaybe<KycHeaderCreateNestedOneWithoutCustomerKycInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutCustomerKycInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycCreateWithoutWorkFlowContextInstanceInput = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutCustomerKycInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetCreateNestedManyWithoutCustomerKycInput>;
  KYCHeader?: InputMaybe<KycHeaderCreateNestedOneWithoutCustomerKycInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerKycCustomerIdKycIdCompoundUniqueInput = {
  customerId: Scalars['String'];
  kycId: Scalars['String'];
};

export type CustomerKycListRelationFilter = {
  every?: InputMaybe<CustomerKycWhereInput>;
  none?: InputMaybe<CustomerKycWhereInput>;
  some?: InputMaybe<CustomerKycWhereInput>;
};

export type CustomerKycMaxAggregate = {
  __typename?: 'CustomerKYCMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  kycId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type CustomerKycMinAggregate = {
  __typename?: 'CustomerKYCMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  kycId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type CustomerKycOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerKycRelationFilter = {
  is?: InputMaybe<CustomerKycWhereInput>;
  isNot?: InputMaybe<CustomerKycWhereInput>;
};

export type CustomerKycScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerKycScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerKycScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerKycScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  kycId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type CustomerKycUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerKycUpdateManyWithWhereWithoutCustomerInput = {
  data: CustomerKycUpdateManyMutationInput;
  where: CustomerKycScalarWhereInput;
};

export type CustomerKycUpdateManyWithWhereWithoutWorkFlowContextInstanceInput =
  {
    data: CustomerKycUpdateManyMutationInput;
    where: CustomerKycScalarWhereInput;
  };

export type CustomerKycUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerKycCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerKycCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerKycScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerKycUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerKycUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerKycUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type CustomerKycUpdateManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerKycCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<
    Array<CustomerKycCreateWithoutWorkFlowContextInstanceInput>
  >;
  createMany?: InputMaybe<CustomerKycCreateManyWorkFlowContextInstanceInputEnvelope>;
  delete?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerKycScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerKycWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerKycUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerKycUpdateManyWithWhereWithoutWorkFlowContextInstanceInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerKycUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
};

export type CustomerKycUpdateOneWithoutCustomerKycAssetInput = {
  connect?: InputMaybe<CustomerKycWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerKycCreateOrConnectWithoutCustomerKycAssetInput>;
  create?: InputMaybe<CustomerKycCreateWithoutCustomerKycAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerKycUpdateWithoutCustomerKycAssetInput>;
  upsert?: InputMaybe<CustomerKycUpsertWithoutCustomerKycAssetInput>;
};

export type CustomerKycUpdateWithWhereUniqueWithoutCustomerInput = {
  data: CustomerKycUpdateWithoutCustomerInput;
  where: CustomerKycWhereUniqueInput;
};

export type CustomerKycUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput =
  {
    data: CustomerKycUpdateWithoutWorkFlowContextInstanceInput;
    where: CustomerKycWhereUniqueInput;
  };

export type CustomerKycUpdateWithoutCustomerInput = {
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutCustomerKycInput>;
  KYCHeader?: InputMaybe<KycHeaderUpdateOneWithoutCustomerKycInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerKycInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerKycUpdateWithoutCustomerKycAssetInput = {
  Customer?: InputMaybe<CustomerUpdateOneWithoutCustomerKycInput>;
  KYCHeader?: InputMaybe<KycHeaderUpdateOneWithoutCustomerKycInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerKycInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerKycUpdateWithoutWorkFlowContextInstanceInput = {
  Customer?: InputMaybe<CustomerUpdateOneWithoutCustomerKycInput>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetUpdateManyWithoutCustomerKycInput>;
  KYCHeader?: InputMaybe<KycHeaderUpdateOneWithoutCustomerKycInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerKycUpsertWithWhereUniqueWithoutCustomerInput = {
  create: CustomerKycCreateWithoutCustomerInput;
  update: CustomerKycUpdateWithoutCustomerInput;
  where: CustomerKycWhereUniqueInput;
};

export type CustomerKycUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput =
  {
    create: CustomerKycCreateWithoutWorkFlowContextInstanceInput;
    update: CustomerKycUpdateWithoutWorkFlowContextInstanceInput;
    where: CustomerKycWhereUniqueInput;
  };

export type CustomerKycUpsertWithoutCustomerKycAssetInput = {
  create: CustomerKycCreateWithoutCustomerKycAssetInput;
  update: CustomerKycUpdateWithoutCustomerKycAssetInput;
};

export type CustomerKycWhereInput = {
  AND?: InputMaybe<Array<CustomerKycWhereInput>>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  CustomerKYCAsset?: InputMaybe<CustomerKycAssetListRelationFilter>;
  KYCHeader?: InputMaybe<KycHeaderRelationFilter>;
  NOT?: InputMaybe<Array<CustomerKycWhereInput>>;
  OR?: InputMaybe<Array<CustomerKycWhereInput>>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  kycId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type CustomerKycWhereUniqueInput = {
  customerId_kycId?: InputMaybe<CustomerKycCustomerIdKycIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerKycWhereUniqueInputDto = {
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerListRelationFilter = {
  every?: InputMaybe<CustomerWhereInput>;
  none?: InputMaybe<CustomerWhereInput>;
  some?: InputMaybe<CustomerWhereInput>;
};

export type CustomerMaxAggregate = {
  __typename?: 'CustomerMaxAggregate';
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  creditEligible?: Maybe<Scalars['Boolean']>;
  creditLimit?: Maybe<Scalars['Float']>;
  enrollmentId?: Maybe<Scalars['String']>;
  enrollmentStatus?: Maybe<Scalars['String']>;
  enrollmentTypeId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  subscriptionStatus?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
  workflowInstanceId?: Maybe<Scalars['String']>;
};

export type CustomerMinAggregate = {
  __typename?: 'CustomerMinAggregate';
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  creditEligible?: Maybe<Scalars['Boolean']>;
  creditLimit?: Maybe<Scalars['Float']>;
  enrollmentId?: Maybe<Scalars['String']>;
  enrollmentStatus?: Maybe<Scalars['String']>;
  enrollmentTypeId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  subscriptionStatus?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
  workflowInstanceId?: Maybe<Scalars['String']>;
};

export type CustomerOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerOrderByWithRelationInput = {
  Brand?: InputMaybe<BrandOrderByRelationAggregateInput>;
  Channel?: InputMaybe<ChannelOrderByWithRelationInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentOrderByWithRelationInput>;
  CustomerAddress?: InputMaybe<CustomerAddressOrderByRelationAggregateInput>;
  CustomerAsset?: InputMaybe<CustomerAssetOrderByRelationAggregateInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueOrderByRelationAggregateInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationOrderByRelationAggregateInput>;
  CustomerKYC?: InputMaybe<CustomerKycOrderByRelationAggregateInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentOrderByRelationAggregateInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeOrderByWithRelationInput>;
  SellerStore?: InputMaybe<SellerStoreOrderByRelationAggregateInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanOrderByWithRelationInput>;
  Users?: InputMaybe<CustomerUserOrderByRelationAggregateInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceOrderByWithRelationInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceOrderByWithRelationInput>;
  channelId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  creditEligible?: InputMaybe<SortOrder>;
  creditLimit?: InputMaybe<SortOrder>;
  enrollmentId?: InputMaybe<SortOrder>;
  enrollmentStatus?: InputMaybe<SortOrder>;
  enrollmentTypeId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isGeoRestricted?: InputMaybe<SortOrder>;
  isPriceVisible?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  subscriptionPlanId?: InputMaybe<SortOrder>;
  subscriptionStatus?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
  workFlowContextInstanceId?: InputMaybe<SortOrder>;
  workflowInstanceId?: InputMaybe<SortOrder>;
};

export type CustomerOrderByWithRelationInputDto = {
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueOrderByRelationAggregateInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanOrderByWithRelationInput>;
  channelId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  enrollmentId?: InputMaybe<SortOrder>;
  enrollmentStatus?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isGeoRestricted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
};

export type CustomerRelationFilter = {
  is?: InputMaybe<CustomerWhereInput>;
  isNot?: InputMaybe<CustomerWhereInput>;
};

export type CustomerScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerScalarWhereInput>>;
  channelId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  creditEligible?: InputMaybe<BoolNullableFilter>;
  creditLimit?: InputMaybe<FloatNullableFilter>;
  enrollmentId?: InputMaybe<StringNullableFilter>;
  enrollmentStatus?: InputMaybe<StringNullableFilter>;
  enrollmentTypeId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isGeoRestricted?: InputMaybe<BoolNullableFilter>;
  isPriceVisible?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  subscriptionStatus?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
  workflowInstanceId?: InputMaybe<StringNullableFilter>;
};

export type CustomerSumAggregate = {
  __typename?: 'CustomerSumAggregate';
  creditLimit?: Maybe<Scalars['Float']>;
};

export type CustomerUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateManyWithWhereWithoutChannelEnrollmentInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutChannelInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutEnrollmentTypeInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutSubscriptionPlanInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutWorkFlowContextInstanceInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutWorkflowInstanceInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutChannelEnrollmentInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutChannelEnrollmentInput>>;
  createMany?: InputMaybe<CustomerCreateManyChannelEnrollmentInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerUpdateWithWhereUniqueWithoutChannelEnrollmentInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerUpdateManyWithWhereWithoutChannelEnrollmentInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerUpsertWithWhereUniqueWithoutChannelEnrollmentInput>
  >;
};

export type CustomerUpdateManyWithoutChannelInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutChannelInput>>;
  createMany?: InputMaybe<CustomerCreateManyChannelInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<Array<CustomerUpdateWithWhereUniqueWithoutChannelInput>>;
  updateMany?: InputMaybe<
    Array<CustomerUpdateManyWithWhereWithoutChannelInput>
  >;
  upsert?: InputMaybe<Array<CustomerUpsertWithWhereUniqueWithoutChannelInput>>;
};

export type CustomerUpdateManyWithoutEnrollmentTypeInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutEnrollmentTypeInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutEnrollmentTypeInput>>;
  createMany?: InputMaybe<CustomerCreateManyEnrollmentTypeInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerUpdateWithWhereUniqueWithoutEnrollmentTypeInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerUpdateManyWithWhereWithoutEnrollmentTypeInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerUpsertWithWhereUniqueWithoutEnrollmentTypeInput>
  >;
};

export type CustomerUpdateManyWithoutSubscriptionPlanInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutSubscriptionPlanInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutSubscriptionPlanInput>>;
  createMany?: InputMaybe<CustomerCreateManySubscriptionPlanInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerUpdateWithWhereUniqueWithoutSubscriptionPlanInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerUpdateManyWithWhereWithoutSubscriptionPlanInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerUpsertWithWhereUniqueWithoutSubscriptionPlanInput>
  >;
};

export type CustomerUpdateManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<CustomerCreateManyWorkFlowContextInstanceInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerUpdateManyWithWhereWithoutWorkFlowContextInstanceInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
};

export type CustomerUpdateManyWithoutWorkflowInstanceInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerCreateOrConnectWithoutWorkflowInstanceInput>
  >;
  create?: InputMaybe<Array<CustomerCreateWithoutWorkflowInstanceInput>>;
  createMany?: InputMaybe<CustomerCreateManyWorkflowInstanceInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerUpdateWithWhereUniqueWithoutWorkflowInstanceInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerUpdateManyWithWhereWithoutWorkflowInstanceInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerUpsertWithWhereUniqueWithoutWorkflowInstanceInput>
  >;
};

export type CustomerUpdateOneWithoutBrandInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<CustomerCreateWithoutBrandInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutBrandInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutBrandInput>;
};

export type CustomerUpdateOneWithoutCustomerAddressInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerAddressInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerAddressInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutCustomerAddressInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutCustomerAddressInput>;
};

export type CustomerUpdateOneWithoutCustomerAssetInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerAssetInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutCustomerAssetInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutCustomerAssetInput>;
};

export type CustomerUpdateOneWithoutCustomerEnrollmentValueInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerEnrollmentValueInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerEnrollmentValueInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutCustomerEnrollmentValueInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutCustomerEnrollmentValueInput>;
};

export type CustomerUpdateOneWithoutCustomerGeoLocationInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerGeoLocationInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerGeoLocationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutCustomerGeoLocationInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutCustomerGeoLocationInput>;
};

export type CustomerUpdateOneWithoutCustomerKycInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutCustomerKycInput>;
  create?: InputMaybe<CustomerCreateWithoutCustomerKycInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutCustomerKycInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutCustomerKycInput>;
};

export type CustomerUpdateOneWithoutEnrollmentPaymentInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutEnrollmentPaymentInput>;
  create?: InputMaybe<CustomerCreateWithoutEnrollmentPaymentInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutEnrollmentPaymentInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutEnrollmentPaymentInput>;
};

export type CustomerUpdateOneWithoutUsersInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<CustomerCreateWithoutUsersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUpdateWithoutUsersInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutUsersInput>;
};

export type CustomerUpdateWithWhereUniqueWithoutChannelEnrollmentInput = {
  data: CustomerUpdateWithoutChannelEnrollmentInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutChannelInput = {
  data: CustomerUpdateWithoutChannelInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutEnrollmentTypeInput = {
  data: CustomerUpdateWithoutEnrollmentTypeInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutSubscriptionPlanInput = {
  data: CustomerUpdateWithoutSubscriptionPlanInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  data: CustomerUpdateWithoutWorkFlowContextInstanceInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutWorkflowInstanceInput = {
  data: CustomerUpdateWithoutWorkflowInstanceInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithoutBrandInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutChannelEnrollmentInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutChannelInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutCustomerAddressInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutCustomerAssetInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutCustomerEnrollmentValueInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutCustomerGeoLocationInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutCustomerKycInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutEnrollmentPaymentInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutEnrollmentTypeInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutSubscriptionPlanInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutUsersInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutWorkFlowContextInstanceInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutWorkflowInstanceInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutCustomerInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutCustomerInput>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutCustomerInput>;
  CustomerAddress?: InputMaybe<CustomerAddressUpdateManyWithoutCustomerInput>;
  CustomerAsset?: InputMaybe<CustomerAssetUpdateManyWithoutCustomerInput>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueUpdateManyWithoutCustomerInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutCustomerInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutCustomerInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutCustomerInput>;
  EnrollmentType?: InputMaybe<EnrollmentTypeUpdateOneWithoutCustomerInput>;
  SellerStore?: InputMaybe<SellerStoreUpdateManyWithoutCustomerInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutCustomerInput>;
  Users?: InputMaybe<CustomerUserUpdateManyWithoutCustomerInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutCustomerInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  creditEligible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  creditLimit?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  enrollmentStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subscriptionStatus?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpsertWithWhereUniqueWithoutChannelEnrollmentInput = {
  create: CustomerCreateWithoutChannelEnrollmentInput;
  update: CustomerUpdateWithoutChannelEnrollmentInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutChannelInput = {
  create: CustomerCreateWithoutChannelInput;
  update: CustomerUpdateWithoutChannelInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutEnrollmentTypeInput = {
  create: CustomerCreateWithoutEnrollmentTypeInput;
  update: CustomerUpdateWithoutEnrollmentTypeInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutSubscriptionPlanInput = {
  create: CustomerCreateWithoutSubscriptionPlanInput;
  update: CustomerUpdateWithoutSubscriptionPlanInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  create: CustomerCreateWithoutWorkFlowContextInstanceInput;
  update: CustomerUpdateWithoutWorkFlowContextInstanceInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutWorkflowInstanceInput = {
  create: CustomerCreateWithoutWorkflowInstanceInput;
  update: CustomerUpdateWithoutWorkflowInstanceInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithoutBrandInput = {
  create: CustomerCreateWithoutBrandInput;
  update: CustomerUpdateWithoutBrandInput;
};

export type CustomerUpsertWithoutCustomerAddressInput = {
  create: CustomerCreateWithoutCustomerAddressInput;
  update: CustomerUpdateWithoutCustomerAddressInput;
};

export type CustomerUpsertWithoutCustomerAssetInput = {
  create: CustomerCreateWithoutCustomerAssetInput;
  update: CustomerUpdateWithoutCustomerAssetInput;
};

export type CustomerUpsertWithoutCustomerEnrollmentValueInput = {
  create: CustomerCreateWithoutCustomerEnrollmentValueInput;
  update: CustomerUpdateWithoutCustomerEnrollmentValueInput;
};

export type CustomerUpsertWithoutCustomerGeoLocationInput = {
  create: CustomerCreateWithoutCustomerGeoLocationInput;
  update: CustomerUpdateWithoutCustomerGeoLocationInput;
};

export type CustomerUpsertWithoutCustomerKycInput = {
  create: CustomerCreateWithoutCustomerKycInput;
  update: CustomerUpdateWithoutCustomerKycInput;
};

export type CustomerUpsertWithoutEnrollmentPaymentInput = {
  create: CustomerCreateWithoutEnrollmentPaymentInput;
  update: CustomerUpdateWithoutEnrollmentPaymentInput;
};

export type CustomerUpsertWithoutUsersInput = {
  create: CustomerCreateWithoutUsersInput;
  update: CustomerUpdateWithoutUsersInput;
};

export type CustomerUser = {
  __typename?: 'CustomerUser';
  Customer?: Maybe<Customer>;
  User?: Maybe<User>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId: Scalars['String'];
};

export type CustomerUserCountAggregate = {
  __typename?: 'CustomerUserCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type CustomerUserCreateManyCustomerInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId: Scalars['String'];
};

export type CustomerUserCreateManyCustomerInputEnvelope = {
  data: Array<CustomerUserCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerUserCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerUserCreateManyUserInputEnvelope = {
  data: Array<CustomerUserCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerUserCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerUserCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerUserCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerUserCreateManyCustomerInputEnvelope>;
};

export type CustomerUserCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerUserCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<CustomerUserCreateWithoutUserInput>>;
  createMany?: InputMaybe<CustomerUserCreateManyUserInputEnvelope>;
};

export type CustomerUserCreateOrConnectWithoutCustomerInput = {
  create: CustomerUserCreateWithoutCustomerInput;
  where: CustomerUserWhereUniqueInput;
};

export type CustomerUserCreateOrConnectWithoutUserInput = {
  create: CustomerUserCreateWithoutUserInput;
  where: CustomerUserWhereUniqueInput;
};

export type CustomerUserCreateWithoutCustomerInput = {
  User?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerUserCreateWithoutUserInput = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutUsersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type CustomerUserCustomerIdUserIdCompoundUniqueInput = {
  customerId: Scalars['String'];
  userId: Scalars['String'];
};

export type CustomerUserListRelationFilter = {
  every?: InputMaybe<CustomerUserWhereInput>;
  none?: InputMaybe<CustomerUserWhereInput>;
  some?: InputMaybe<CustomerUserWhereInput>;
};

export type CustomerUserMaxAggregate = {
  __typename?: 'CustomerUserMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type CustomerUserMinAggregate = {
  __typename?: 'CustomerUserMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type CustomerUserOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerUserScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerUserScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerUserScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerUserScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringFilter>;
};

export type CustomerUserUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUserUpdateManyWithWhereWithoutCustomerInput = {
  data: CustomerUserUpdateManyMutationInput;
  where: CustomerUserScalarWhereInput;
};

export type CustomerUserUpdateManyWithWhereWithoutUserInput = {
  data: CustomerUserUpdateManyMutationInput;
  where: CustomerUserScalarWhereInput;
};

export type CustomerUserUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerUserCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<CustomerUserCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<CustomerUserCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerUserScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  update?: InputMaybe<
    Array<CustomerUserUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<CustomerUserUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<CustomerUserUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type CustomerUserUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<CustomerUserCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<CustomerUserCreateWithoutUserInput>>;
  createMany?: InputMaybe<CustomerUserCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerUserScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerUserWhereUniqueInput>>;
  update?: InputMaybe<Array<CustomerUserUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<
    Array<CustomerUserUpdateManyWithWhereWithoutUserInput>
  >;
  upsert?: InputMaybe<Array<CustomerUserUpsertWithWhereUniqueWithoutUserInput>>;
};

export type CustomerUserUpdateWithWhereUniqueWithoutCustomerInput = {
  data: CustomerUserUpdateWithoutCustomerInput;
  where: CustomerUserWhereUniqueInput;
};

export type CustomerUserUpdateWithWhereUniqueWithoutUserInput = {
  data: CustomerUserUpdateWithoutUserInput;
  where: CustomerUserWhereUniqueInput;
};

export type CustomerUserUpdateWithoutCustomerInput = {
  User?: InputMaybe<UserUpdateOneWithoutCustomersInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUserUpdateWithoutUserInput = {
  Customer?: InputMaybe<CustomerUpdateOneWithoutUsersInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUserUpsertWithWhereUniqueWithoutCustomerInput = {
  create: CustomerUserCreateWithoutCustomerInput;
  update: CustomerUserUpdateWithoutCustomerInput;
  where: CustomerUserWhereUniqueInput;
};

export type CustomerUserUpsertWithWhereUniqueWithoutUserInput = {
  create: CustomerUserCreateWithoutUserInput;
  update: CustomerUserUpdateWithoutUserInput;
  where: CustomerUserWhereUniqueInput;
};

export type CustomerUserWhereInput = {
  AND?: InputMaybe<Array<CustomerUserWhereInput>>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  NOT?: InputMaybe<Array<CustomerUserWhereInput>>;
  OR?: InputMaybe<Array<CustomerUserWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringFilter>;
};

export type CustomerUserWhereUniqueInput = {
  customerId_userId?: InputMaybe<CustomerUserCustomerIdUserIdCompoundUniqueInput>;
};

export type CustomerWhereDetailInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerWhereInput = {
  AND?: InputMaybe<Array<CustomerWhereInput>>;
  Brand?: InputMaybe<BrandListRelationFilter>;
  Channel?: InputMaybe<ChannelRelationFilter>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentRelationFilter>;
  CustomerAddress?: InputMaybe<CustomerAddressListRelationFilter>;
  CustomerAsset?: InputMaybe<CustomerAssetListRelationFilter>;
  CustomerEnrollmentValue?: InputMaybe<CustomerEnrollmentValueListRelationFilter>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationListRelationFilter>;
  CustomerKYC?: InputMaybe<CustomerKycListRelationFilter>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentListRelationFilter>;
  EnrollmentType?: InputMaybe<EnrollmentTypeRelationFilter>;
  NOT?: InputMaybe<Array<CustomerWhereInput>>;
  OR?: InputMaybe<Array<CustomerWhereInput>>;
  SellerStore?: InputMaybe<SellerStoreListRelationFilter>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanRelationFilter>;
  Users?: InputMaybe<CustomerUserListRelationFilter>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceRelationFilter>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceRelationFilter>;
  channelId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  creditEligible?: InputMaybe<BoolNullableFilter>;
  creditLimit?: InputMaybe<FloatNullableFilter>;
  enrollmentId?: InputMaybe<StringNullableFilter>;
  enrollmentStatus?: InputMaybe<StringNullableFilter>;
  enrollmentTypeId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isGeoRestricted?: InputMaybe<BoolNullableFilter>;
  isPriceVisible?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  subscriptionStatus?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
  workflowInstanceId?: InputMaybe<StringNullableFilter>;
};

export type CustomerWhereInputDto = {
  AND?: InputMaybe<Array<CustomerWhereInputDto>>;
  NOT?: InputMaybe<Array<CustomerWhereInputDto>>;
  OR?: InputMaybe<Array<CustomerWhereInputDto>>;
  channelId?: InputMaybe<UuidNullableFilterDto>;
  enrollmentId?: InputMaybe<UuidNullableFilterDto>;
  enrollmentStatus?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<UuidNullableFilterDto>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isGeoRestricted?: InputMaybe<BoolNullableFilter>;
  isPriceVisible?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<UuidNullableFilterDto>;
  subscriptionStatus?: InputMaybe<StringNullableFilter>;
  workflowInstanceId?: InputMaybe<UuidNullableFilterDto>;
};

export type CustomerWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerWhereUniqueInputDto = {
  id?: InputMaybe<Scalars['String']>;
};

export type DateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type EnrollUserInput = {
  assetFile?: InputMaybe<Array<FileInput>>;
  attributes: Array<AttributeInputArray>;
  buisnessType: Scalars['String'];
  channelId?: InputMaybe<Scalars['String']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  userName: Scalars['String'];
};

export type EnrollmentAttribute = {
  __typename?: 'EnrollmentAttribute';
  Attribute?: Maybe<Attribute>;
  ChannelEnrollment?: Maybe<ChannelEnrollment>;
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  enrollmentId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  isRequired?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentAttributeCountAggregate = {
  __typename?: 'EnrollmentAttributeCountAggregate';
  _all: Scalars['Int'];
  attributeId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  enrollmentId: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  isRequired: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type EnrollmentAttributeCreateManyAttributeInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  enrollmentId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  isRequired?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentAttributeCreateManyAttributeInputEnvelope = {
  data: Array<EnrollmentAttributeCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EnrollmentAttributeCreateManyChannelEnrollmentInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  isRequired?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentAttributeCreateManyChannelEnrollmentInputEnvelope = {
  data: Array<EnrollmentAttributeCreateManyChannelEnrollmentInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EnrollmentAttributeCreateNestedManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentAttributeCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<EnrollmentAttributeCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<EnrollmentAttributeCreateManyAttributeInputEnvelope>;
};

export type EnrollmentAttributeCreateNestedManyWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentAttributeCreateOrConnectWithoutChannelEnrollmentInput>
  >;
  create?: InputMaybe<
    Array<EnrollmentAttributeCreateWithoutChannelEnrollmentInput>
  >;
  createMany?: InputMaybe<EnrollmentAttributeCreateManyChannelEnrollmentInputEnvelope>;
};

export type EnrollmentAttributeCreateOrConnectWithoutAttributeInput = {
  create: EnrollmentAttributeCreateWithoutAttributeInput;
  where: EnrollmentAttributeWhereUniqueInput;
};

export type EnrollmentAttributeCreateOrConnectWithoutChannelEnrollmentInput = {
  create: EnrollmentAttributeCreateWithoutChannelEnrollmentInput;
  where: EnrollmentAttributeWhereUniqueInput;
};

export type EnrollmentAttributeCreateWithoutAttributeInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutEnrollmentAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  isRequired?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentAttributeCreateWithoutChannelEnrollmentInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutEnrollmentAttributeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  isRequired?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentAttributeEnrollmentIdAttributeIdCompoundUniqueInput = {
  attributeId: Scalars['String'];
  enrollmentId: Scalars['String'];
};

export type EnrollmentAttributeListRelationFilter = {
  every?: InputMaybe<EnrollmentAttributeWhereInput>;
  none?: InputMaybe<EnrollmentAttributeWhereInput>;
  some?: InputMaybe<EnrollmentAttributeWhereInput>;
};

export type EnrollmentAttributeMaxAggregate = {
  __typename?: 'EnrollmentAttributeMaxAggregate';
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  enrollmentId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  isRequired?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentAttributeMinAggregate = {
  __typename?: 'EnrollmentAttributeMinAggregate';
  attributeId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  enrollmentId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  isRequired?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentAttributeOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type EnrollmentAttributeScalarWhereInput = {
  AND?: InputMaybe<Array<EnrollmentAttributeScalarWhereInput>>;
  NOT?: InputMaybe<Array<EnrollmentAttributeScalarWhereInput>>;
  OR?: InputMaybe<Array<EnrollmentAttributeScalarWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  enrollmentId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  isRequired?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EnrollmentAttributeUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRequired?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentAttributeUpdateManyWithWhereWithoutAttributeInput = {
  data: EnrollmentAttributeUpdateManyMutationInput;
  where: EnrollmentAttributeScalarWhereInput;
};

export type EnrollmentAttributeUpdateManyWithWhereWithoutChannelEnrollmentInput =
  {
    data: EnrollmentAttributeUpdateManyMutationInput;
    where: EnrollmentAttributeScalarWhereInput;
  };

export type EnrollmentAttributeUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentAttributeCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<Array<EnrollmentAttributeCreateWithoutAttributeInput>>;
  createMany?: InputMaybe<EnrollmentAttributeCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<EnrollmentAttributeScalarWhereInput>>;
  disconnect?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  set?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  update?: InputMaybe<
    Array<EnrollmentAttributeUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<EnrollmentAttributeUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<EnrollmentAttributeUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type EnrollmentAttributeUpdateManyWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentAttributeCreateOrConnectWithoutChannelEnrollmentInput>
  >;
  create?: InputMaybe<
    Array<EnrollmentAttributeCreateWithoutChannelEnrollmentInput>
  >;
  createMany?: InputMaybe<EnrollmentAttributeCreateManyChannelEnrollmentInputEnvelope>;
  delete?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<EnrollmentAttributeScalarWhereInput>>;
  disconnect?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  set?: InputMaybe<Array<EnrollmentAttributeWhereUniqueInput>>;
  update?: InputMaybe<
    Array<EnrollmentAttributeUpdateWithWhereUniqueWithoutChannelEnrollmentInput>
  >;
  updateMany?: InputMaybe<
    Array<EnrollmentAttributeUpdateManyWithWhereWithoutChannelEnrollmentInput>
  >;
  upsert?: InputMaybe<
    Array<EnrollmentAttributeUpsertWithWhereUniqueWithoutChannelEnrollmentInput>
  >;
};

export type EnrollmentAttributeUpdateWithWhereUniqueWithoutAttributeInput = {
  data: EnrollmentAttributeUpdateWithoutAttributeInput;
  where: EnrollmentAttributeWhereUniqueInput;
};

export type EnrollmentAttributeUpdateWithWhereUniqueWithoutChannelEnrollmentInput =
  {
    data: EnrollmentAttributeUpdateWithoutChannelEnrollmentInput;
    where: EnrollmentAttributeWhereUniqueInput;
  };

export type EnrollmentAttributeUpdateWithoutAttributeInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutEnrollmentAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRequired?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentAttributeUpdateWithoutChannelEnrollmentInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutEnrollmentAttributeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRequired?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentAttributeUpsertWithWhereUniqueWithoutAttributeInput = {
  create: EnrollmentAttributeCreateWithoutAttributeInput;
  update: EnrollmentAttributeUpdateWithoutAttributeInput;
  where: EnrollmentAttributeWhereUniqueInput;
};

export type EnrollmentAttributeUpsertWithWhereUniqueWithoutChannelEnrollmentInput =
  {
    create: EnrollmentAttributeCreateWithoutChannelEnrollmentInput;
    update: EnrollmentAttributeUpdateWithoutChannelEnrollmentInput;
    where: EnrollmentAttributeWhereUniqueInput;
  };

export type EnrollmentAttributeWhereInput = {
  AND?: InputMaybe<Array<EnrollmentAttributeWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentRelationFilter>;
  NOT?: InputMaybe<Array<EnrollmentAttributeWhereInput>>;
  OR?: InputMaybe<Array<EnrollmentAttributeWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  enrollmentId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  isRequired?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EnrollmentAttributeWhereUniqueInput = {
  enrollmentId_attributeId?: InputMaybe<EnrollmentAttributeEnrollmentIdAttributeIdCompoundUniqueInput>;
  id?: InputMaybe<Scalars['String']>;
};

export type EnrollmentPayment = {
  __typename?: 'EnrollmentPayment';
  ChannelEnrollment?: Maybe<ChannelEnrollment>;
  Customer?: Maybe<Customer>;
  SubscriptionPlan?: Maybe<SubscriptionPlan>;
  additionalCharge?: Maybe<Scalars['Float']>;
  amount?: Maybe<Scalars['Float']>;
  channelEnrollmentId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  errorMessage?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isError?: Maybe<Scalars['Boolean']>;
  paymentMethodId?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  transRef?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentPaymentAvgAggregate = {
  __typename?: 'EnrollmentPaymentAvgAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  amount?: Maybe<Scalars['Float']>;
};

export type EnrollmentPaymentCountAggregate = {
  __typename?: 'EnrollmentPaymentCountAggregate';
  _all: Scalars['Int'];
  additionalCharge: Scalars['Int'];
  amount: Scalars['Int'];
  channelEnrollmentId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  errorMessage: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isError: Scalars['Int'];
  paymentMethodId: Scalars['Int'];
  status: Scalars['Int'];
  subscriptionPlanId: Scalars['Int'];
  transRef: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type EnrollmentPaymentCreateManyChannelEnrollmentInput = {
  additionalCharge?: InputMaybe<Scalars['Float']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  errorMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isError?: InputMaybe<Scalars['Boolean']>;
  paymentMethodId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  transRef?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentPaymentCreateManyChannelEnrollmentInputEnvelope = {
  data: Array<EnrollmentPaymentCreateManyChannelEnrollmentInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EnrollmentPaymentCreateManyCustomerInput = {
  additionalCharge?: InputMaybe<Scalars['Float']>;
  amount?: InputMaybe<Scalars['Float']>;
  channelEnrollmentId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  errorMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isError?: InputMaybe<Scalars['Boolean']>;
  paymentMethodId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  transRef?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentPaymentCreateManyCustomerInputEnvelope = {
  data: Array<EnrollmentPaymentCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EnrollmentPaymentCreateManySubscriptionPlanInput = {
  additionalCharge?: InputMaybe<Scalars['Float']>;
  amount?: InputMaybe<Scalars['Float']>;
  channelEnrollmentId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  errorMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isError?: InputMaybe<Scalars['Boolean']>;
  paymentMethodId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  transRef?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentPaymentCreateManySubscriptionPlanInputEnvelope = {
  data: Array<EnrollmentPaymentCreateManySubscriptionPlanInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EnrollmentPaymentCreateNestedManyWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentPaymentCreateOrConnectWithoutChannelEnrollmentInput>
  >;
  create?: InputMaybe<
    Array<EnrollmentPaymentCreateWithoutChannelEnrollmentInput>
  >;
  createMany?: InputMaybe<EnrollmentPaymentCreateManyChannelEnrollmentInputEnvelope>;
};

export type EnrollmentPaymentCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentPaymentCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<EnrollmentPaymentCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<EnrollmentPaymentCreateManyCustomerInputEnvelope>;
};

export type EnrollmentPaymentCreateNestedManyWithoutSubscriptionPlanInput = {
  connect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentPaymentCreateOrConnectWithoutSubscriptionPlanInput>
  >;
  create?: InputMaybe<
    Array<EnrollmentPaymentCreateWithoutSubscriptionPlanInput>
  >;
  createMany?: InputMaybe<EnrollmentPaymentCreateManySubscriptionPlanInputEnvelope>;
};

export type EnrollmentPaymentCreateOrConnectWithoutChannelEnrollmentInput = {
  create: EnrollmentPaymentCreateWithoutChannelEnrollmentInput;
  where: EnrollmentPaymentWhereUniqueInput;
};

export type EnrollmentPaymentCreateOrConnectWithoutCustomerInput = {
  create: EnrollmentPaymentCreateWithoutCustomerInput;
  where: EnrollmentPaymentWhereUniqueInput;
};

export type EnrollmentPaymentCreateOrConnectWithoutSubscriptionPlanInput = {
  create: EnrollmentPaymentCreateWithoutSubscriptionPlanInput;
  where: EnrollmentPaymentWhereUniqueInput;
};

export type EnrollmentPaymentCreateWithoutChannelEnrollmentInput = {
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutEnrollmentPaymentInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutEnrollmentPaymentInput>;
  additionalCharge?: InputMaybe<Scalars['Float']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  errorMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isError?: InputMaybe<Scalars['Boolean']>;
  paymentMethodId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  transRef?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentPaymentCreateWithoutCustomerInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutEnrollmentPaymentInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutEnrollmentPaymentInput>;
  additionalCharge?: InputMaybe<Scalars['Float']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  errorMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isError?: InputMaybe<Scalars['Boolean']>;
  paymentMethodId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  transRef?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentPaymentCreateWithoutSubscriptionPlanInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedOneWithoutEnrollmentPaymentInput>;
  Customer?: InputMaybe<CustomerCreateNestedOneWithoutEnrollmentPaymentInput>;
  additionalCharge?: InputMaybe<Scalars['Float']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  errorMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isError?: InputMaybe<Scalars['Boolean']>;
  paymentMethodId?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  transRef?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentPaymentListRelationFilter = {
  every?: InputMaybe<EnrollmentPaymentWhereInput>;
  none?: InputMaybe<EnrollmentPaymentWhereInput>;
  some?: InputMaybe<EnrollmentPaymentWhereInput>;
};

export type EnrollmentPaymentMaxAggregate = {
  __typename?: 'EnrollmentPaymentMaxAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  amount?: Maybe<Scalars['Float']>;
  channelEnrollmentId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  errorMessage?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isError?: Maybe<Scalars['Boolean']>;
  paymentMethodId?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  transRef?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentPaymentMinAggregate = {
  __typename?: 'EnrollmentPaymentMinAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  amount?: Maybe<Scalars['Float']>;
  channelEnrollmentId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  errorMessage?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isError?: Maybe<Scalars['Boolean']>;
  paymentMethodId?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  transRef?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentPaymentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type EnrollmentPaymentScalarWhereInput = {
  AND?: InputMaybe<Array<EnrollmentPaymentScalarWhereInput>>;
  NOT?: InputMaybe<Array<EnrollmentPaymentScalarWhereInput>>;
  OR?: InputMaybe<Array<EnrollmentPaymentScalarWhereInput>>;
  additionalCharge?: InputMaybe<FloatNullableFilter>;
  amount?: InputMaybe<FloatNullableFilter>;
  channelEnrollmentId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  errorMessage?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isError?: InputMaybe<BoolNullableFilter>;
  paymentMethodId?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  transRef?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EnrollmentPaymentSumAggregate = {
  __typename?: 'EnrollmentPaymentSumAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  amount?: Maybe<Scalars['Float']>;
};

export type EnrollmentPaymentUpdateManyMutationInput = {
  additionalCharge?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  errorMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isError?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentMethodId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transRef?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentPaymentUpdateManyWithWhereWithoutChannelEnrollmentInput =
  {
    data: EnrollmentPaymentUpdateManyMutationInput;
    where: EnrollmentPaymentScalarWhereInput;
  };

export type EnrollmentPaymentUpdateManyWithWhereWithoutCustomerInput = {
  data: EnrollmentPaymentUpdateManyMutationInput;
  where: EnrollmentPaymentScalarWhereInput;
};

export type EnrollmentPaymentUpdateManyWithWhereWithoutSubscriptionPlanInput = {
  data: EnrollmentPaymentUpdateManyMutationInput;
  where: EnrollmentPaymentScalarWhereInput;
};

export type EnrollmentPaymentUpdateManyWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentPaymentCreateOrConnectWithoutChannelEnrollmentInput>
  >;
  create?: InputMaybe<
    Array<EnrollmentPaymentCreateWithoutChannelEnrollmentInput>
  >;
  createMany?: InputMaybe<EnrollmentPaymentCreateManyChannelEnrollmentInputEnvelope>;
  delete?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<EnrollmentPaymentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  set?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  update?: InputMaybe<
    Array<EnrollmentPaymentUpdateWithWhereUniqueWithoutChannelEnrollmentInput>
  >;
  updateMany?: InputMaybe<
    Array<EnrollmentPaymentUpdateManyWithWhereWithoutChannelEnrollmentInput>
  >;
  upsert?: InputMaybe<
    Array<EnrollmentPaymentUpsertWithWhereUniqueWithoutChannelEnrollmentInput>
  >;
};

export type EnrollmentPaymentUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentPaymentCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<EnrollmentPaymentCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<EnrollmentPaymentCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<EnrollmentPaymentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  set?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  update?: InputMaybe<
    Array<EnrollmentPaymentUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<EnrollmentPaymentUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<EnrollmentPaymentUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type EnrollmentPaymentUpdateManyWithoutSubscriptionPlanInput = {
  connect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EnrollmentPaymentCreateOrConnectWithoutSubscriptionPlanInput>
  >;
  create?: InputMaybe<
    Array<EnrollmentPaymentCreateWithoutSubscriptionPlanInput>
  >;
  createMany?: InputMaybe<EnrollmentPaymentCreateManySubscriptionPlanInputEnvelope>;
  delete?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<EnrollmentPaymentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  set?: InputMaybe<Array<EnrollmentPaymentWhereUniqueInput>>;
  update?: InputMaybe<
    Array<EnrollmentPaymentUpdateWithWhereUniqueWithoutSubscriptionPlanInput>
  >;
  updateMany?: InputMaybe<
    Array<EnrollmentPaymentUpdateManyWithWhereWithoutSubscriptionPlanInput>
  >;
  upsert?: InputMaybe<
    Array<EnrollmentPaymentUpsertWithWhereUniqueWithoutSubscriptionPlanInput>
  >;
};

export type EnrollmentPaymentUpdateWithWhereUniqueWithoutChannelEnrollmentInput =
  {
    data: EnrollmentPaymentUpdateWithoutChannelEnrollmentInput;
    where: EnrollmentPaymentWhereUniqueInput;
  };

export type EnrollmentPaymentUpdateWithWhereUniqueWithoutCustomerInput = {
  data: EnrollmentPaymentUpdateWithoutCustomerInput;
  where: EnrollmentPaymentWhereUniqueInput;
};

export type EnrollmentPaymentUpdateWithWhereUniqueWithoutSubscriptionPlanInput =
  {
    data: EnrollmentPaymentUpdateWithoutSubscriptionPlanInput;
    where: EnrollmentPaymentWhereUniqueInput;
  };

export type EnrollmentPaymentUpdateWithoutChannelEnrollmentInput = {
  Customer?: InputMaybe<CustomerUpdateOneWithoutEnrollmentPaymentInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutEnrollmentPaymentInput>;
  additionalCharge?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  errorMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isError?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentMethodId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transRef?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentPaymentUpdateWithoutCustomerInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutEnrollmentPaymentInput>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutEnrollmentPaymentInput>;
  additionalCharge?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  errorMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isError?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentMethodId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transRef?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentPaymentUpdateWithoutSubscriptionPlanInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateOneWithoutEnrollmentPaymentInput>;
  Customer?: InputMaybe<CustomerUpdateOneWithoutEnrollmentPaymentInput>;
  additionalCharge?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  errorMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isError?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paymentMethodId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transRef?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentPaymentUpsertWithWhereUniqueWithoutChannelEnrollmentInput =
  {
    create: EnrollmentPaymentCreateWithoutChannelEnrollmentInput;
    update: EnrollmentPaymentUpdateWithoutChannelEnrollmentInput;
    where: EnrollmentPaymentWhereUniqueInput;
  };

export type EnrollmentPaymentUpsertWithWhereUniqueWithoutCustomerInput = {
  create: EnrollmentPaymentCreateWithoutCustomerInput;
  update: EnrollmentPaymentUpdateWithoutCustomerInput;
  where: EnrollmentPaymentWhereUniqueInput;
};

export type EnrollmentPaymentUpsertWithWhereUniqueWithoutSubscriptionPlanInput =
  {
    create: EnrollmentPaymentCreateWithoutSubscriptionPlanInput;
    update: EnrollmentPaymentUpdateWithoutSubscriptionPlanInput;
    where: EnrollmentPaymentWhereUniqueInput;
  };

export type EnrollmentPaymentWhereInput = {
  AND?: InputMaybe<Array<EnrollmentPaymentWhereInput>>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentRelationFilter>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  NOT?: InputMaybe<Array<EnrollmentPaymentWhereInput>>;
  OR?: InputMaybe<Array<EnrollmentPaymentWhereInput>>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanRelationFilter>;
  additionalCharge?: InputMaybe<FloatNullableFilter>;
  amount?: InputMaybe<FloatNullableFilter>;
  channelEnrollmentId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  errorMessage?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isError?: InputMaybe<BoolNullableFilter>;
  paymentMethodId?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  transRef?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EnrollmentPaymentWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type EnrollmentType = {
  __typename?: 'EnrollmentType';
  ChannelEnrollment?: Maybe<Array<ChannelEnrollment>>;
  Customer?: Maybe<Array<Customer>>;
  _count: EnrollmentTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentTypeCount = {
  __typename?: 'EnrollmentTypeCount';
  ChannelEnrollment: Scalars['Int'];
  Customer: Scalars['Int'];
};

export type EnrollmentTypeCountAggregate = {
  __typename?: 'EnrollmentTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type EnrollmentTypeCreateNestedOneWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<EnrollmentTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EnrollmentTypeCreateOrConnectWithoutChannelEnrollmentInput>;
  create?: InputMaybe<EnrollmentTypeCreateWithoutChannelEnrollmentInput>;
};

export type EnrollmentTypeCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<EnrollmentTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EnrollmentTypeCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<EnrollmentTypeCreateWithoutCustomerInput>;
};

export type EnrollmentTypeCreateOrConnectWithoutChannelEnrollmentInput = {
  create: EnrollmentTypeCreateWithoutChannelEnrollmentInput;
  where: EnrollmentTypeWhereUniqueInput;
};

export type EnrollmentTypeCreateOrConnectWithoutCustomerInput = {
  create: EnrollmentTypeCreateWithoutCustomerInput;
  where: EnrollmentTypeWhereUniqueInput;
};

export type EnrollmentTypeCreateWithoutChannelEnrollmentInput = {
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutEnrollmentTypeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentTypeCreateWithoutCustomerInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedManyWithoutEnrollmentTypeInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EnrollmentTypeMaxAggregate = {
  __typename?: 'EnrollmentTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentTypeMinAggregate = {
  __typename?: 'EnrollmentTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EnrollmentTypeOrderByWithRelationInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentOrderByRelationAggregateInput>;
  Customer?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type EnrollmentTypeRelationFilter = {
  is?: InputMaybe<EnrollmentTypeWhereInput>;
  isNot?: InputMaybe<EnrollmentTypeWhereInput>;
};

export type EnrollmentTypeUpdateOneWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<EnrollmentTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EnrollmentTypeCreateOrConnectWithoutChannelEnrollmentInput>;
  create?: InputMaybe<EnrollmentTypeCreateWithoutChannelEnrollmentInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EnrollmentTypeUpdateWithoutChannelEnrollmentInput>;
  upsert?: InputMaybe<EnrollmentTypeUpsertWithoutChannelEnrollmentInput>;
};

export type EnrollmentTypeUpdateOneWithoutCustomerInput = {
  connect?: InputMaybe<EnrollmentTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EnrollmentTypeCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<EnrollmentTypeCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EnrollmentTypeUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<EnrollmentTypeUpsertWithoutCustomerInput>;
};

export type EnrollmentTypeUpdateWithoutChannelEnrollmentInput = {
  Customer?: InputMaybe<CustomerUpdateManyWithoutEnrollmentTypeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentTypeUpdateWithoutCustomerInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateManyWithoutEnrollmentTypeInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EnrollmentTypeUpsertWithoutChannelEnrollmentInput = {
  create: EnrollmentTypeCreateWithoutChannelEnrollmentInput;
  update: EnrollmentTypeUpdateWithoutChannelEnrollmentInput;
};

export type EnrollmentTypeUpsertWithoutCustomerInput = {
  create: EnrollmentTypeCreateWithoutCustomerInput;
  update: EnrollmentTypeUpdateWithoutCustomerInput;
};

export type EnrollmentTypeWhereInput = {
  AND?: InputMaybe<Array<EnrollmentTypeWhereInput>>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentListRelationFilter>;
  Customer?: InputMaybe<CustomerListRelationFilter>;
  NOT?: InputMaybe<Array<EnrollmentTypeWhereInput>>;
  OR?: InputMaybe<Array<EnrollmentTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EnrollmentTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type EventDetails = {
  __typename?: 'EventDetails';
  EventLog?: Maybe<EventLog>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  currentValue?: Maybe<Scalars['String']>;
  eventLogId?: Maybe<Scalars['String']>;
  fieldName?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  previousValue?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EventDetailsCountAggregate = {
  __typename?: 'EventDetailsCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  currentValue: Scalars['Int'];
  eventLogId: Scalars['Int'];
  fieldName: Scalars['Int'];
  id: Scalars['Int'];
  previousValue: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type EventDetailsCreateManyEventLogInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  currentValue?: InputMaybe<Scalars['String']>;
  fieldName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  previousValue?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EventDetailsCreateManyEventLogInputEnvelope = {
  data: Array<EventDetailsCreateManyEventLogInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EventDetailsCreateNestedManyWithoutEventLogInput = {
  connect?: InputMaybe<Array<EventDetailsWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EventDetailsCreateOrConnectWithoutEventLogInput>
  >;
  create?: InputMaybe<Array<EventDetailsCreateWithoutEventLogInput>>;
  createMany?: InputMaybe<EventDetailsCreateManyEventLogInputEnvelope>;
};

export type EventDetailsCreateOrConnectWithoutEventLogInput = {
  create: EventDetailsCreateWithoutEventLogInput;
  where: EventDetailsWhereUniqueInput;
};

export type EventDetailsCreateWithoutEventLogInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  currentValue?: InputMaybe<Scalars['String']>;
  fieldName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  previousValue?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EventDetailsListRelationFilter = {
  every?: InputMaybe<EventDetailsWhereInput>;
  none?: InputMaybe<EventDetailsWhereInput>;
  some?: InputMaybe<EventDetailsWhereInput>;
};

export type EventDetailsMaxAggregate = {
  __typename?: 'EventDetailsMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  currentValue?: Maybe<Scalars['String']>;
  eventLogId?: Maybe<Scalars['String']>;
  fieldName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  previousValue?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EventDetailsMinAggregate = {
  __typename?: 'EventDetailsMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  currentValue?: Maybe<Scalars['String']>;
  eventLogId?: Maybe<Scalars['String']>;
  fieldName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  previousValue?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EventDetailsScalarWhereInput = {
  AND?: InputMaybe<Array<EventDetailsScalarWhereInput>>;
  NOT?: InputMaybe<Array<EventDetailsScalarWhereInput>>;
  OR?: InputMaybe<Array<EventDetailsScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  currentValue?: InputMaybe<StringNullableFilter>;
  eventLogId?: InputMaybe<StringNullableFilter>;
  fieldName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  previousValue?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EventDetailsUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  currentValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fieldName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  previousValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventDetailsUpdateManyWithWhereWithoutEventLogInput = {
  data: EventDetailsUpdateManyMutationInput;
  where: EventDetailsScalarWhereInput;
};

export type EventDetailsUpdateManyWithoutEventLogInput = {
  connect?: InputMaybe<Array<EventDetailsWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<EventDetailsCreateOrConnectWithoutEventLogInput>
  >;
  create?: InputMaybe<Array<EventDetailsCreateWithoutEventLogInput>>;
  createMany?: InputMaybe<EventDetailsCreateManyEventLogInputEnvelope>;
  delete?: InputMaybe<Array<EventDetailsWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<EventDetailsScalarWhereInput>>;
  disconnect?: InputMaybe<Array<EventDetailsWhereUniqueInput>>;
  set?: InputMaybe<Array<EventDetailsWhereUniqueInput>>;
  update?: InputMaybe<
    Array<EventDetailsUpdateWithWhereUniqueWithoutEventLogInput>
  >;
  updateMany?: InputMaybe<
    Array<EventDetailsUpdateManyWithWhereWithoutEventLogInput>
  >;
  upsert?: InputMaybe<
    Array<EventDetailsUpsertWithWhereUniqueWithoutEventLogInput>
  >;
};

export type EventDetailsUpdateWithWhereUniqueWithoutEventLogInput = {
  data: EventDetailsUpdateWithoutEventLogInput;
  where: EventDetailsWhereUniqueInput;
};

export type EventDetailsUpdateWithoutEventLogInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  currentValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  fieldName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  previousValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventDetailsUpsertWithWhereUniqueWithoutEventLogInput = {
  create: EventDetailsCreateWithoutEventLogInput;
  update: EventDetailsUpdateWithoutEventLogInput;
  where: EventDetailsWhereUniqueInput;
};

export type EventDetailsWhereInput = {
  AND?: InputMaybe<Array<EventDetailsWhereInput>>;
  EventLog?: InputMaybe<EventLogRelationFilter>;
  NOT?: InputMaybe<Array<EventDetailsWhereInput>>;
  OR?: InputMaybe<Array<EventDetailsWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  currentValue?: InputMaybe<StringNullableFilter>;
  eventLogId?: InputMaybe<StringNullableFilter>;
  fieldName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  previousValue?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EventDetailsWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type EventLog = {
  __typename?: 'EventLog';
  EventDetails?: Maybe<Array<EventDetails>>;
  EventType?: Maybe<EventType>;
  User?: Maybe<User>;
  _count: EventLogCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  eventTypeId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  ipAddress?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type EventLogCount = {
  __typename?: 'EventLogCount';
  EventDetails: Scalars['Int'];
};

export type EventLogCountAggregate = {
  __typename?: 'EventLogCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  eventTypeId: Scalars['Int'];
  id: Scalars['Int'];
  ipAddress: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type EventLogCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  eventTypeId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ipAddress?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EventLogCreateManyUserInputEnvelope = {
  data: Array<EventLogCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EventLogCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<EventLogWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<EventLogCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<EventLogCreateWithoutUserInput>>;
  createMany?: InputMaybe<EventLogCreateManyUserInputEnvelope>;
};

export type EventLogCreateOrConnectWithoutUserInput = {
  create: EventLogCreateWithoutUserInput;
  where: EventLogWhereUniqueInput;
};

export type EventLogCreateWithoutUserInput = {
  EventDetails?: InputMaybe<EventDetailsCreateNestedManyWithoutEventLogInput>;
  EventType?: InputMaybe<EventTypeCreateNestedOneWithoutEventLogInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  ipAddress?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EventLogListRelationFilter = {
  every?: InputMaybe<EventLogWhereInput>;
  none?: InputMaybe<EventLogWhereInput>;
  some?: InputMaybe<EventLogWhereInput>;
};

export type EventLogMaxAggregate = {
  __typename?: 'EventLogMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  eventTypeId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  ipAddress?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type EventLogMinAggregate = {
  __typename?: 'EventLogMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  eventTypeId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  ipAddress?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type EventLogRelationFilter = {
  is?: InputMaybe<EventLogWhereInput>;
  isNot?: InputMaybe<EventLogWhereInput>;
};

export type EventLogScalarWhereInput = {
  AND?: InputMaybe<Array<EventLogScalarWhereInput>>;
  NOT?: InputMaybe<Array<EventLogScalarWhereInput>>;
  OR?: InputMaybe<Array<EventLogScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  eventTypeId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ipAddress?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type EventLogUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ipAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventLogUpdateManyWithWhereWithoutUserInput = {
  data: EventLogUpdateManyMutationInput;
  where: EventLogScalarWhereInput;
};

export type EventLogUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<EventLogWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<EventLogCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<EventLogCreateWithoutUserInput>>;
  createMany?: InputMaybe<EventLogCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<EventLogWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<EventLogScalarWhereInput>>;
  disconnect?: InputMaybe<Array<EventLogWhereUniqueInput>>;
  set?: InputMaybe<Array<EventLogWhereUniqueInput>>;
  update?: InputMaybe<Array<EventLogUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<EventLogUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<EventLogUpsertWithWhereUniqueWithoutUserInput>>;
};

export type EventLogUpdateWithWhereUniqueWithoutUserInput = {
  data: EventLogUpdateWithoutUserInput;
  where: EventLogWhereUniqueInput;
};

export type EventLogUpdateWithoutUserInput = {
  EventDetails?: InputMaybe<EventDetailsUpdateManyWithoutEventLogInput>;
  EventType?: InputMaybe<EventTypeUpdateOneWithoutEventLogInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ipAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventLogUpsertWithWhereUniqueWithoutUserInput = {
  create: EventLogCreateWithoutUserInput;
  update: EventLogUpdateWithoutUserInput;
  where: EventLogWhereUniqueInput;
};

export type EventLogWhereInput = {
  AND?: InputMaybe<Array<EventLogWhereInput>>;
  EventDetails?: InputMaybe<EventDetailsListRelationFilter>;
  EventType?: InputMaybe<EventTypeRelationFilter>;
  NOT?: InputMaybe<Array<EventLogWhereInput>>;
  OR?: InputMaybe<Array<EventLogWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  eventTypeId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ipAddress?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type EventLogWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type EventType = {
  __typename?: 'EventType';
  EventLog?: Maybe<Array<EventLog>>;
  _count: EventTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EventTypeCount = {
  __typename?: 'EventTypeCount';
  EventLog: Scalars['Int'];
};

export type EventTypeCountAggregate = {
  __typename?: 'EventTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type EventTypeCreateNestedOneWithoutEventLogInput = {
  connect?: InputMaybe<EventTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventTypeCreateOrConnectWithoutEventLogInput>;
  create?: InputMaybe<EventTypeCreateWithoutEventLogInput>;
};

export type EventTypeCreateOrConnectWithoutEventLogInput = {
  create: EventTypeCreateWithoutEventLogInput;
  where: EventTypeWhereUniqueInput;
};

export type EventTypeCreateWithoutEventLogInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type EventTypeMaxAggregate = {
  __typename?: 'EventTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EventTypeMinAggregate = {
  __typename?: 'EventTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type EventTypeRelationFilter = {
  is?: InputMaybe<EventTypeWhereInput>;
  isNot?: InputMaybe<EventTypeWhereInput>;
};

export type EventTypeUpdateOneWithoutEventLogInput = {
  connect?: InputMaybe<EventTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EventTypeCreateOrConnectWithoutEventLogInput>;
  create?: InputMaybe<EventTypeCreateWithoutEventLogInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EventTypeUpdateWithoutEventLogInput>;
  upsert?: InputMaybe<EventTypeUpsertWithoutEventLogInput>;
};

export type EventTypeUpdateWithoutEventLogInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EventTypeUpsertWithoutEventLogInput = {
  create: EventTypeCreateWithoutEventLogInput;
  update: EventTypeUpdateWithoutEventLogInput;
};

export type EventTypeWhereInput = {
  AND?: InputMaybe<Array<EventTypeWhereInput>>;
  EventLog?: InputMaybe<EventLogListRelationFilter>;
  NOT?: InputMaybe<Array<EventTypeWhereInput>>;
  OR?: InputMaybe<Array<EventTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type EventTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type FileInput = {
  AssetCategoryName: Scalars['String'];
  file: Scalars['String'];
  fileName: Scalars['String'];
};

export type FloatFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Float']>;
  divide?: InputMaybe<Scalars['Float']>;
  increment?: InputMaybe<Scalars['Float']>;
  multiply?: InputMaybe<Scalars['Float']>;
  set?: InputMaybe<Scalars['Float']>;
};

export type FloatFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<Scalars['Float']>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']>>;
};

export type FloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<Scalars['Float']>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']>>;
};

export type GeoLocation = {
  __typename?: 'GeoLocation';
  Brands?: Maybe<Array<BrandGeolocation>>;
  CustomerGeoLocation?: Maybe<Array<CustomerGeoLocation>>;
  GeoLocationType?: Maybe<GeoLocationType>;
  GeoLocationZone?: Maybe<GeoLocationZone>;
  ParentGeoLocation?: Maybe<GeoLocation>;
  Products?: Maybe<Array<ProductGeoLocation>>;
  SubGeoLocation?: Maybe<Array<GeoLocation>>;
  _count: GeoLocationCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  parentId?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  zoneId?: Maybe<Scalars['String']>;
};

export type GeoLocationCount = {
  __typename?: 'GeoLocationCount';
  Brands: Scalars['Int'];
  CustomerGeoLocation: Scalars['Int'];
  Products: Scalars['Int'];
  SubGeoLocation: Scalars['Int'];
};

export type GeoLocationCountAggregate = {
  __typename?: 'GeoLocationCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  parentId: Scalars['Int'];
  typeId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  zoneId: Scalars['Int'];
};

export type GeoLocationCreateManyGeoLocationZoneInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  parentId?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationCreateManyGeoLocationZoneInputEnvelope = {
  data: Array<GeoLocationCreateManyGeoLocationZoneInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type GeoLocationCreateManyParentGeoLocationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  zoneId?: InputMaybe<Scalars['String']>;
};

export type GeoLocationCreateManyParentGeoLocationInputEnvelope = {
  data: Array<GeoLocationCreateManyParentGeoLocationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type GeoLocationCreateNestedManyWithoutGeoLocationZoneInput = {
  connect?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<GeoLocationCreateOrConnectWithoutGeoLocationZoneInput>
  >;
  create?: InputMaybe<Array<GeoLocationCreateWithoutGeoLocationZoneInput>>;
  createMany?: InputMaybe<GeoLocationCreateManyGeoLocationZoneInputEnvelope>;
};

export type GeoLocationCreateNestedManyWithoutParentGeoLocationInput = {
  connect?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<GeoLocationCreateOrConnectWithoutParentGeoLocationInput>
  >;
  create?: InputMaybe<Array<GeoLocationCreateWithoutParentGeoLocationInput>>;
  createMany?: InputMaybe<GeoLocationCreateManyParentGeoLocationInputEnvelope>;
};

export type GeoLocationCreateNestedOneWithoutBrandsInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutBrandsInput>;
  create?: InputMaybe<GeoLocationCreateWithoutBrandsInput>;
};

export type GeoLocationCreateNestedOneWithoutCustomerGeoLocationInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutCustomerGeoLocationInput>;
  create?: InputMaybe<GeoLocationCreateWithoutCustomerGeoLocationInput>;
};

export type GeoLocationCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<GeoLocationCreateWithoutProductsInput>;
};

export type GeoLocationCreateNestedOneWithoutSubGeoLocationInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutSubGeoLocationInput>;
  create?: InputMaybe<GeoLocationCreateWithoutSubGeoLocationInput>;
};

export type GeoLocationCreateOrConnectWithoutBrandsInput = {
  create: GeoLocationCreateWithoutBrandsInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationCreateOrConnectWithoutCustomerGeoLocationInput = {
  create: GeoLocationCreateWithoutCustomerGeoLocationInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationCreateOrConnectWithoutGeoLocationZoneInput = {
  create: GeoLocationCreateWithoutGeoLocationZoneInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationCreateOrConnectWithoutParentGeoLocationInput = {
  create: GeoLocationCreateWithoutParentGeoLocationInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationCreateOrConnectWithoutProductsInput = {
  create: GeoLocationCreateWithoutProductsInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationCreateOrConnectWithoutSubGeoLocationInput = {
  create: GeoLocationCreateWithoutSubGeoLocationInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationCreateWithoutBrandsInput = {
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeCreateNestedOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationCreateNestedManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationCreateWithoutCustomerGeoLocationInput = {
  Brands?: InputMaybe<BrandGeolocationCreateNestedManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeCreateNestedOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationCreateNestedManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationCreateWithoutGeoLocationZoneInput = {
  Brands?: InputMaybe<BrandGeolocationCreateNestedManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeCreateNestedOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationCreateNestedManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationCreateWithoutParentGeoLocationInput = {
  Brands?: InputMaybe<BrandGeolocationCreateNestedManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeCreateNestedOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationCreateNestedManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationCreateWithoutProductsInput = {
  Brands?: InputMaybe<BrandGeolocationCreateNestedManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeCreateNestedOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutSubGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationCreateNestedManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationCreateWithoutSubGeoLocationInput = {
  Brands?: InputMaybe<BrandGeolocationCreateNestedManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeCreateNestedOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneCreateNestedOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutGeoLocationInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationListRelationFilter = {
  every?: InputMaybe<GeoLocationWhereInput>;
  none?: InputMaybe<GeoLocationWhereInput>;
  some?: InputMaybe<GeoLocationWhereInput>;
};

export type GeoLocationMaxAggregate = {
  __typename?: 'GeoLocationMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parentId?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  zoneId?: Maybe<Scalars['String']>;
};

export type GeoLocationMinAggregate = {
  __typename?: 'GeoLocationMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parentId?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  zoneId?: Maybe<Scalars['String']>;
};

export type GeoLocationNameTypeIdCompoundUniqueInput = {
  name: Scalars['String'];
  typeId: Scalars['String'];
};

export type GeoLocationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type GeoLocationRelationFilter = {
  is?: InputMaybe<GeoLocationWhereInput>;
  isNot?: InputMaybe<GeoLocationWhereInput>;
};

export type GeoLocationScalarWhereInput = {
  AND?: InputMaybe<Array<GeoLocationScalarWhereInput>>;
  NOT?: InputMaybe<Array<GeoLocationScalarWhereInput>>;
  OR?: InputMaybe<Array<GeoLocationScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  parentId?: InputMaybe<StringNullableFilter>;
  typeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  zoneId?: InputMaybe<StringNullableFilter>;
};

export type GeoLocationType = {
  __typename?: 'GeoLocationType';
  GeoLocation?: Maybe<Array<GeoLocation>>;
  _count: GeoLocationTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type GeoLocationTypeCount = {
  __typename?: 'GeoLocationTypeCount';
  GeoLocation: Scalars['Int'];
};

export type GeoLocationTypeCountAggregate = {
  __typename?: 'GeoLocationTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type GeoLocationTypeCreateNestedOneWithoutGeoLocationInput = {
  connect?: InputMaybe<GeoLocationTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationTypeCreateOrConnectWithoutGeoLocationInput>;
  create?: InputMaybe<GeoLocationTypeCreateWithoutGeoLocationInput>;
};

export type GeoLocationTypeCreateOrConnectWithoutGeoLocationInput = {
  create: GeoLocationTypeCreateWithoutGeoLocationInput;
  where: GeoLocationTypeWhereUniqueInput;
};

export type GeoLocationTypeCreateWithoutGeoLocationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationTypeMaxAggregate = {
  __typename?: 'GeoLocationTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type GeoLocationTypeMinAggregate = {
  __typename?: 'GeoLocationTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type GeoLocationTypeRelationFilter = {
  is?: InputMaybe<GeoLocationTypeWhereInput>;
  isNot?: InputMaybe<GeoLocationTypeWhereInput>;
};

export type GeoLocationTypeUpdateOneWithoutGeoLocationInput = {
  connect?: InputMaybe<GeoLocationTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationTypeCreateOrConnectWithoutGeoLocationInput>;
  create?: InputMaybe<GeoLocationTypeCreateWithoutGeoLocationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<GeoLocationTypeUpdateWithoutGeoLocationInput>;
  upsert?: InputMaybe<GeoLocationTypeUpsertWithoutGeoLocationInput>;
};

export type GeoLocationTypeUpdateWithoutGeoLocationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationTypeUpsertWithoutGeoLocationInput = {
  create: GeoLocationTypeCreateWithoutGeoLocationInput;
  update: GeoLocationTypeUpdateWithoutGeoLocationInput;
};

export type GeoLocationTypeWhereInput = {
  AND?: InputMaybe<Array<GeoLocationTypeWhereInput>>;
  GeoLocation?: InputMaybe<GeoLocationListRelationFilter>;
  NOT?: InputMaybe<Array<GeoLocationTypeWhereInput>>;
  OR?: InputMaybe<Array<GeoLocationTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type GeoLocationTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type GeoLocationUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationUpdateManyWithWhereWithoutGeoLocationZoneInput = {
  data: GeoLocationUpdateManyMutationInput;
  where: GeoLocationScalarWhereInput;
};

export type GeoLocationUpdateManyWithWhereWithoutParentGeoLocationInput = {
  data: GeoLocationUpdateManyMutationInput;
  where: GeoLocationScalarWhereInput;
};

export type GeoLocationUpdateManyWithoutGeoLocationZoneInput = {
  connect?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<GeoLocationCreateOrConnectWithoutGeoLocationZoneInput>
  >;
  create?: InputMaybe<Array<GeoLocationCreateWithoutGeoLocationZoneInput>>;
  createMany?: InputMaybe<GeoLocationCreateManyGeoLocationZoneInputEnvelope>;
  delete?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<GeoLocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  set?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<GeoLocationUpdateWithWhereUniqueWithoutGeoLocationZoneInput>
  >;
  updateMany?: InputMaybe<
    Array<GeoLocationUpdateManyWithWhereWithoutGeoLocationZoneInput>
  >;
  upsert?: InputMaybe<
    Array<GeoLocationUpsertWithWhereUniqueWithoutGeoLocationZoneInput>
  >;
};

export type GeoLocationUpdateManyWithoutParentGeoLocationInput = {
  connect?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<GeoLocationCreateOrConnectWithoutParentGeoLocationInput>
  >;
  create?: InputMaybe<Array<GeoLocationCreateWithoutParentGeoLocationInput>>;
  createMany?: InputMaybe<GeoLocationCreateManyParentGeoLocationInputEnvelope>;
  delete?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<GeoLocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  set?: InputMaybe<Array<GeoLocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<GeoLocationUpdateWithWhereUniqueWithoutParentGeoLocationInput>
  >;
  updateMany?: InputMaybe<
    Array<GeoLocationUpdateManyWithWhereWithoutParentGeoLocationInput>
  >;
  upsert?: InputMaybe<
    Array<GeoLocationUpsertWithWhereUniqueWithoutParentGeoLocationInput>
  >;
};

export type GeoLocationUpdateOneWithoutBrandsInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutBrandsInput>;
  create?: InputMaybe<GeoLocationCreateWithoutBrandsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<GeoLocationUpdateWithoutBrandsInput>;
  upsert?: InputMaybe<GeoLocationUpsertWithoutBrandsInput>;
};

export type GeoLocationUpdateOneWithoutCustomerGeoLocationInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutCustomerGeoLocationInput>;
  create?: InputMaybe<GeoLocationCreateWithoutCustomerGeoLocationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<GeoLocationUpdateWithoutCustomerGeoLocationInput>;
  upsert?: InputMaybe<GeoLocationUpsertWithoutCustomerGeoLocationInput>;
};

export type GeoLocationUpdateOneWithoutProductsInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<GeoLocationCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<GeoLocationUpdateWithoutProductsInput>;
  upsert?: InputMaybe<GeoLocationUpsertWithoutProductsInput>;
};

export type GeoLocationUpdateOneWithoutSubGeoLocationInput = {
  connect?: InputMaybe<GeoLocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationCreateOrConnectWithoutSubGeoLocationInput>;
  create?: InputMaybe<GeoLocationCreateWithoutSubGeoLocationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<GeoLocationUpdateWithoutSubGeoLocationInput>;
  upsert?: InputMaybe<GeoLocationUpsertWithoutSubGeoLocationInput>;
};

export type GeoLocationUpdateWithWhereUniqueWithoutGeoLocationZoneInput = {
  data: GeoLocationUpdateWithoutGeoLocationZoneInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationUpdateWithWhereUniqueWithoutParentGeoLocationInput = {
  data: GeoLocationUpdateWithoutParentGeoLocationInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationUpdateWithoutBrandsInput = {
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeUpdateOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationUpdateManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationUpdateManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationUpdateWithoutCustomerGeoLocationInput = {
  Brands?: InputMaybe<BrandGeolocationUpdateManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeUpdateOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationUpdateManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationUpdateManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationUpdateWithoutGeoLocationZoneInput = {
  Brands?: InputMaybe<BrandGeolocationUpdateManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeUpdateOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationUpdateManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationUpdateManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationUpdateWithoutParentGeoLocationInput = {
  Brands?: InputMaybe<BrandGeolocationUpdateManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeUpdateOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationUpdateManyWithoutGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationUpdateManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationUpdateWithoutProductsInput = {
  Brands?: InputMaybe<BrandGeolocationUpdateManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeUpdateOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutSubGeoLocationInput>;
  SubGeoLocation?: InputMaybe<GeoLocationUpdateManyWithoutParentGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationUpdateWithoutSubGeoLocationInput = {
  Brands?: InputMaybe<BrandGeolocationUpdateManyWithoutGeoLocationInput>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationUpdateManyWithoutGeoLocationInput>;
  GeoLocationType?: InputMaybe<GeoLocationTypeUpdateOneWithoutGeoLocationInput>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneUpdateOneWithoutGeoLocationInput>;
  ParentGeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutSubGeoLocationInput>;
  Products?: InputMaybe<ProductGeoLocationUpdateManyWithoutGeoLocationInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationUpsertWithWhereUniqueWithoutGeoLocationZoneInput = {
  create: GeoLocationCreateWithoutGeoLocationZoneInput;
  update: GeoLocationUpdateWithoutGeoLocationZoneInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationUpsertWithWhereUniqueWithoutParentGeoLocationInput = {
  create: GeoLocationCreateWithoutParentGeoLocationInput;
  update: GeoLocationUpdateWithoutParentGeoLocationInput;
  where: GeoLocationWhereUniqueInput;
};

export type GeoLocationUpsertWithoutBrandsInput = {
  create: GeoLocationCreateWithoutBrandsInput;
  update: GeoLocationUpdateWithoutBrandsInput;
};

export type GeoLocationUpsertWithoutCustomerGeoLocationInput = {
  create: GeoLocationCreateWithoutCustomerGeoLocationInput;
  update: GeoLocationUpdateWithoutCustomerGeoLocationInput;
};

export type GeoLocationUpsertWithoutProductsInput = {
  create: GeoLocationCreateWithoutProductsInput;
  update: GeoLocationUpdateWithoutProductsInput;
};

export type GeoLocationUpsertWithoutSubGeoLocationInput = {
  create: GeoLocationCreateWithoutSubGeoLocationInput;
  update: GeoLocationUpdateWithoutSubGeoLocationInput;
};

export type GeoLocationWhereInput = {
  AND?: InputMaybe<Array<GeoLocationWhereInput>>;
  Brands?: InputMaybe<BrandGeolocationListRelationFilter>;
  CustomerGeoLocation?: InputMaybe<CustomerGeoLocationListRelationFilter>;
  GeoLocationType?: InputMaybe<GeoLocationTypeRelationFilter>;
  GeoLocationZone?: InputMaybe<GeoLocationZoneRelationFilter>;
  NOT?: InputMaybe<Array<GeoLocationWhereInput>>;
  OR?: InputMaybe<Array<GeoLocationWhereInput>>;
  ParentGeoLocation?: InputMaybe<GeoLocationRelationFilter>;
  Products?: InputMaybe<ProductGeoLocationListRelationFilter>;
  SubGeoLocation?: InputMaybe<GeoLocationListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  parentId?: InputMaybe<StringNullableFilter>;
  typeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  zoneId?: InputMaybe<StringNullableFilter>;
};

export type GeoLocationWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name_typeId?: InputMaybe<GeoLocationNameTypeIdCompoundUniqueInput>;
};

export type GeoLocationZone = {
  __typename?: 'GeoLocationZone';
  Brand?: Maybe<Array<Brand>>;
  GeoLocation?: Maybe<Array<GeoLocation>>;
  _count: GeoLocationZoneCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isDefault?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type GeoLocationZoneCount = {
  __typename?: 'GeoLocationZoneCount';
  Brand: Scalars['Int'];
  GeoLocation: Scalars['Int'];
};

export type GeoLocationZoneCountAggregate = {
  __typename?: 'GeoLocationZoneCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isDefault: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type GeoLocationZoneCreateNestedOneWithoutBrandInput = {
  connect?: InputMaybe<GeoLocationZoneWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationZoneCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<GeoLocationZoneCreateWithoutBrandInput>;
};

export type GeoLocationZoneCreateNestedOneWithoutGeoLocationInput = {
  connect?: InputMaybe<GeoLocationZoneWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationZoneCreateOrConnectWithoutGeoLocationInput>;
  create?: InputMaybe<GeoLocationZoneCreateWithoutGeoLocationInput>;
};

export type GeoLocationZoneCreateOrConnectWithoutBrandInput = {
  create: GeoLocationZoneCreateWithoutBrandInput;
  where: GeoLocationZoneWhereUniqueInput;
};

export type GeoLocationZoneCreateOrConnectWithoutGeoLocationInput = {
  create: GeoLocationZoneCreateWithoutGeoLocationInput;
  where: GeoLocationZoneWhereUniqueInput;
};

export type GeoLocationZoneCreateWithoutBrandInput = {
  GeoLocation?: InputMaybe<GeoLocationCreateNestedManyWithoutGeoLocationZoneInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationZoneCreateWithoutGeoLocationInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutGeoLocationZoneInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type GeoLocationZoneMaxAggregate = {
  __typename?: 'GeoLocationZoneMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type GeoLocationZoneMinAggregate = {
  __typename?: 'GeoLocationZoneMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type GeoLocationZoneOrderByWithRelationInput = {
  Brand?: InputMaybe<BrandOrderByRelationAggregateInput>;
  GeoLocation?: InputMaybe<GeoLocationOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isDefault?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type GeoLocationZoneRelationFilter = {
  is?: InputMaybe<GeoLocationZoneWhereInput>;
  isNot?: InputMaybe<GeoLocationZoneWhereInput>;
};

export type GeoLocationZoneUpdateOneWithoutBrandInput = {
  connect?: InputMaybe<GeoLocationZoneWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationZoneCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<GeoLocationZoneCreateWithoutBrandInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<GeoLocationZoneUpdateWithoutBrandInput>;
  upsert?: InputMaybe<GeoLocationZoneUpsertWithoutBrandInput>;
};

export type GeoLocationZoneUpdateOneWithoutGeoLocationInput = {
  connect?: InputMaybe<GeoLocationZoneWhereUniqueInput>;
  connectOrCreate?: InputMaybe<GeoLocationZoneCreateOrConnectWithoutGeoLocationInput>;
  create?: InputMaybe<GeoLocationZoneCreateWithoutGeoLocationInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<GeoLocationZoneUpdateWithoutGeoLocationInput>;
  upsert?: InputMaybe<GeoLocationZoneUpsertWithoutGeoLocationInput>;
};

export type GeoLocationZoneUpdateWithoutBrandInput = {
  GeoLocation?: InputMaybe<GeoLocationUpdateManyWithoutGeoLocationZoneInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationZoneUpdateWithoutGeoLocationInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutGeoLocationZoneInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GeoLocationZoneUpsertWithoutBrandInput = {
  create: GeoLocationZoneCreateWithoutBrandInput;
  update: GeoLocationZoneUpdateWithoutBrandInput;
};

export type GeoLocationZoneUpsertWithoutGeoLocationInput = {
  create: GeoLocationZoneCreateWithoutGeoLocationInput;
  update: GeoLocationZoneUpdateWithoutGeoLocationInput;
};

export type GeoLocationZoneWhereInput = {
  AND?: InputMaybe<Array<GeoLocationZoneWhereInput>>;
  Brand?: InputMaybe<BrandListRelationFilter>;
  GeoLocation?: InputMaybe<GeoLocationListRelationFilter>;
  NOT?: InputMaybe<Array<GeoLocationZoneWhereInput>>;
  OR?: InputMaybe<Array<GeoLocationZoneWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isDefault?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type GeoLocationZoneWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type IntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']>;
  divide?: InputMaybe<Scalars['Int']>;
  increment?: InputMaybe<Scalars['Int']>;
  multiply?: InputMaybe<Scalars['Int']>;
  set?: InputMaybe<Scalars['Int']>;
};

export type IntFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type IntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type KycCreateInput = {
  assetFile: Array<KycFileInput>;
  kycHeaderName?: InputMaybe<Scalars['String']>;
};

export type KycFileInput = {
  AssetCategoryName?: InputMaybe<Scalars['String']>;
  file: Scalars['String'];
  fileName?: InputMaybe<Scalars['String']>;
};

export type KycGetInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type KycHeader = {
  __typename?: 'KYCHeader';
  CustomerKYC?: Maybe<Array<CustomerKyc>>;
  _count: KycHeaderCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type KycHeaderCount = {
  __typename?: 'KYCHeaderCount';
  CustomerKYC: Scalars['Int'];
};

export type KycHeaderCountAggregate = {
  __typename?: 'KYCHeaderCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type KycHeaderCreateNestedOneWithoutCustomerKycInput = {
  connect?: InputMaybe<KycHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<KycHeaderCreateOrConnectWithoutCustomerKycInput>;
  create?: InputMaybe<KycHeaderCreateWithoutCustomerKycInput>;
};

export type KycHeaderCreateOrConnectWithoutCustomerKycInput = {
  create: KycHeaderCreateWithoutCustomerKycInput;
  where: KycHeaderWhereUniqueInput;
};

export type KycHeaderCreateWithoutCustomerKycInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type KycHeaderMaxAggregate = {
  __typename?: 'KYCHeaderMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type KycHeaderMinAggregate = {
  __typename?: 'KYCHeaderMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type KycHeaderRelationFilter = {
  is?: InputMaybe<KycHeaderWhereInput>;
  isNot?: InputMaybe<KycHeaderWhereInput>;
};

export type KycHeaderUpdateOneWithoutCustomerKycInput = {
  connect?: InputMaybe<KycHeaderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<KycHeaderCreateOrConnectWithoutCustomerKycInput>;
  create?: InputMaybe<KycHeaderCreateWithoutCustomerKycInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<KycHeaderUpdateWithoutCustomerKycInput>;
  upsert?: InputMaybe<KycHeaderUpsertWithoutCustomerKycInput>;
};

export type KycHeaderUpdateWithoutCustomerKycInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type KycHeaderUpsertWithoutCustomerKycInput = {
  create: KycHeaderCreateWithoutCustomerKycInput;
  update: KycHeaderUpdateWithoutCustomerKycInput;
};

export type KycHeaderWhereInput = {
  AND?: InputMaybe<Array<KycHeaderWhereInput>>;
  CustomerKYC?: InputMaybe<CustomerKycListRelationFilter>;
  NOT?: InputMaybe<Array<KycHeaderWhereInput>>;
  OR?: InputMaybe<Array<KycHeaderWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type KycHeaderWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Language = {
  __typename?: 'Language';
  AttributeValue_TL?: Maybe<Array<AttributeValue_Tl>>;
  Attribute_TL?: Maybe<Array<Attribute_Tl>>;
  CategoryHeader_TL?: Maybe<Array<CategoryHeader_Tl>>;
  Category_TL?: Maybe<Array<Category_Tl>>;
  _count: LanguageCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isDefault?: Maybe<Scalars['Boolean']>;
  languageCode?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type LanguageCount = {
  __typename?: 'LanguageCount';
  AttributeValue_TL: Scalars['Int'];
  Attribute_TL: Scalars['Int'];
  CategoryHeader_TL: Scalars['Int'];
  Category_TL: Scalars['Int'];
};

export type LanguageCountAggregate = {
  __typename?: 'LanguageCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isDefault: Scalars['Int'];
  languageCode: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type LanguageCreateNestedOneWithoutAttributeValue_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutAttributeValue_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutAttributeValue_TlInput>;
};

export type LanguageCreateNestedOneWithoutAttribute_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutAttribute_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutAttribute_TlInput>;
};

export type LanguageCreateNestedOneWithoutCategoryHeader_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutCategoryHeader_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutCategoryHeader_TlInput>;
};

export type LanguageCreateNestedOneWithoutCategory_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutCategory_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutCategory_TlInput>;
};

export type LanguageCreateOrConnectWithoutAttributeValue_TlInput = {
  create: LanguageCreateWithoutAttributeValue_TlInput;
  where: LanguageWhereUniqueInput;
};

export type LanguageCreateOrConnectWithoutAttribute_TlInput = {
  create: LanguageCreateWithoutAttribute_TlInput;
  where: LanguageWhereUniqueInput;
};

export type LanguageCreateOrConnectWithoutCategoryHeader_TlInput = {
  create: LanguageCreateWithoutCategoryHeader_TlInput;
  where: LanguageWhereUniqueInput;
};

export type LanguageCreateOrConnectWithoutCategory_TlInput = {
  create: LanguageCreateWithoutCategory_TlInput;
  where: LanguageWhereUniqueInput;
};

export type LanguageCreateWithoutAttributeValue_TlInput = {
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutLanguageInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlCreateNestedManyWithoutLanguageInput>;
  Category_TL?: InputMaybe<Category_TlCreateNestedManyWithoutLanguageInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type LanguageCreateWithoutAttribute_TlInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutLanguageInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlCreateNestedManyWithoutLanguageInput>;
  Category_TL?: InputMaybe<Category_TlCreateNestedManyWithoutLanguageInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type LanguageCreateWithoutCategoryHeader_TlInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutLanguageInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutLanguageInput>;
  Category_TL?: InputMaybe<Category_TlCreateNestedManyWithoutLanguageInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type LanguageCreateWithoutCategory_TlInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlCreateNestedManyWithoutLanguageInput>;
  Attribute_TL?: InputMaybe<Attribute_TlCreateNestedManyWithoutLanguageInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlCreateNestedManyWithoutLanguageInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isDefault?: InputMaybe<Scalars['Boolean']>;
  languageCode?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type LanguageMaxAggregate = {
  __typename?: 'LanguageMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  languageCode?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type LanguageMinAggregate = {
  __typename?: 'LanguageMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isDefault?: Maybe<Scalars['Boolean']>;
  languageCode?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type LanguageRelationFilter = {
  is?: InputMaybe<LanguageWhereInput>;
  isNot?: InputMaybe<LanguageWhereInput>;
};

export type LanguageUpdateOneWithoutAttributeValue_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutAttributeValue_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutAttributeValue_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<LanguageUpdateWithoutAttributeValue_TlInput>;
  upsert?: InputMaybe<LanguageUpsertWithoutAttributeValue_TlInput>;
};

export type LanguageUpdateOneWithoutAttribute_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutAttribute_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutAttribute_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<LanguageUpdateWithoutAttribute_TlInput>;
  upsert?: InputMaybe<LanguageUpsertWithoutAttribute_TlInput>;
};

export type LanguageUpdateOneWithoutCategoryHeader_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutCategoryHeader_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutCategoryHeader_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<LanguageUpdateWithoutCategoryHeader_TlInput>;
  upsert?: InputMaybe<LanguageUpsertWithoutCategoryHeader_TlInput>;
};

export type LanguageUpdateOneWithoutCategory_TlInput = {
  connect?: InputMaybe<LanguageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LanguageCreateOrConnectWithoutCategory_TlInput>;
  create?: InputMaybe<LanguageCreateWithoutCategory_TlInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<LanguageUpdateWithoutCategory_TlInput>;
  upsert?: InputMaybe<LanguageUpsertWithoutCategory_TlInput>;
};

export type LanguageUpdateWithoutAttributeValue_TlInput = {
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutLanguageInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlUpdateManyWithoutLanguageInput>;
  Category_TL?: InputMaybe<Category_TlUpdateManyWithoutLanguageInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LanguageUpdateWithoutAttribute_TlInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutLanguageInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlUpdateManyWithoutLanguageInput>;
  Category_TL?: InputMaybe<Category_TlUpdateManyWithoutLanguageInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LanguageUpdateWithoutCategoryHeader_TlInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutLanguageInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutLanguageInput>;
  Category_TL?: InputMaybe<Category_TlUpdateManyWithoutLanguageInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LanguageUpdateWithoutCategory_TlInput = {
  AttributeValue_TL?: InputMaybe<AttributeValue_TlUpdateManyWithoutLanguageInput>;
  Attribute_TL?: InputMaybe<Attribute_TlUpdateManyWithoutLanguageInput>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlUpdateManyWithoutLanguageInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isDefault?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LanguageUpsertWithoutAttributeValue_TlInput = {
  create: LanguageCreateWithoutAttributeValue_TlInput;
  update: LanguageUpdateWithoutAttributeValue_TlInput;
};

export type LanguageUpsertWithoutAttribute_TlInput = {
  create: LanguageCreateWithoutAttribute_TlInput;
  update: LanguageUpdateWithoutAttribute_TlInput;
};

export type LanguageUpsertWithoutCategoryHeader_TlInput = {
  create: LanguageCreateWithoutCategoryHeader_TlInput;
  update: LanguageUpdateWithoutCategoryHeader_TlInput;
};

export type LanguageUpsertWithoutCategory_TlInput = {
  create: LanguageCreateWithoutCategory_TlInput;
  update: LanguageUpdateWithoutCategory_TlInput;
};

export type LanguageWhereInput = {
  AND?: InputMaybe<Array<LanguageWhereInput>>;
  AttributeValue_TL?: InputMaybe<AttributeValue_TlListRelationFilter>;
  Attribute_TL?: InputMaybe<Attribute_TlListRelationFilter>;
  CategoryHeader_TL?: InputMaybe<CategoryHeader_TlListRelationFilter>;
  Category_TL?: InputMaybe<Category_TlListRelationFilter>;
  NOT?: InputMaybe<Array<LanguageWhereInput>>;
  OR?: InputMaybe<Array<LanguageWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isDefault?: InputMaybe<BoolNullableFilter>;
  languageCode?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type LanguageWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  languageCode?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type LocationAttributeArray = {
  geolocationId: Scalars['String'];
  isInclude?: InputMaybe<Scalars['Boolean']>;
};

export type LocationModel = {
  __typename?: 'LocationModel';
  ParentGeoLocation?: Maybe<GeoLocation>;
  SubGeoLocation?: Maybe<Array<GeoLocation>>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  parentId?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  zoneId?: Maybe<Scalars['String']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  address: Address;
  changePassword: ChangePasswordOutputDto;
  createAddress: Address;
  createBrand: Brand;
  createKYC: Array<CustomerKyc>;
  createProduct: ProductDto;
  deleteAddress: Address;
  deleteBrand: Brand;
  deleteUser: User;
  enrollUser: Customer;
  passwordLogin: UserToken;
  redeemUserPasswordResetToken: RedeemUserPasswordResetLink;
  reviewAddress: SuccessOutputDto;
  reviewBrand: SuccessOutputDto;
  reviewCustomer: SuccessOutputDto;
  reviewKYC: SuccessOutputDto;
  sendOTP: SendOtp;
  sendUserPasswordResetLink: SendUserPasswordResetLink;
  updateAddress: Address;
  updateBrand: Brand;
  updateBrandGeoLocations: Array<BrandGeolocation>;
  updateConfiguration: Configuration;
  updateCustomer: Customer;
  updateCustomerGeoLocation: CustomerGeoLocationModel;
  updateCustomerGeoLocations: Array<CustomerGeoLocation>;
  updateProduct: Product;
  updateProductGeoLocation: ProductGeoLocationModel;
  updateUser: User;
  uploadFile: Scalars['Boolean'];
  verifyOTP: UserToken;
};

export type MutationAddressArgs = {
  data: AddressWhereUniqueInputDto;
};

export type MutationChangePasswordArgs = {
  data: ChangePasswordInputDto;
};

export type MutationCreateAddressArgs = {
  data: AddressTypeUpdateInput;
};

export type MutationCreateBrandArgs = {
  data: BrandCreateInput;
};

export type MutationCreateKycArgs = {
  data: KycCreateInput;
};

export type MutationCreateProductArgs = {
  data: ProductCreateInputDto;
};

export type MutationDeleteAddressArgs = {
  where?: InputMaybe<AddressWhereUniqueInput>;
};

export type MutationDeleteBrandArgs = {
  where?: InputMaybe<BrandWhereUniqueInput>;
};

export type MutationEnrollUserArgs = {
  data: EnrollUserInput;
};

export type MutationPasswordLoginArgs = {
  data: AuthLoginInput;
};

export type MutationRedeemUserPasswordResetTokenArgs = {
  data: RedeemUserPasswordResetTokenInput;
};

export type MutationReviewAddressArgs = {
  data: ReviewInputDto;
  where?: InputMaybe<AddressWhereUniqueInput>;
};

export type MutationReviewBrandArgs = {
  data: ReviewInputDto;
  where?: InputMaybe<BrandWhereUniqueInput>;
};

export type MutationReviewCustomerArgs = {
  data: ReviewInputDto;
  where?: InputMaybe<CustomerWhereUniqueInput>;
};

export type MutationReviewKycArgs = {
  data: ReviewInputDto;
  where?: InputMaybe<CustomerKycWhereUniqueInputDto>;
};

export type MutationSendOtpArgs = {
  data: SendOtpInput;
};

export type MutationSendUserPasswordResetLinkArgs = {
  data: SendUserPasswordResetLinkInput;
};

export type MutationUpdateAddressArgs = {
  data: UpdateAddressInputDto;
  where?: InputMaybe<AddressWhereUniqueInput>;
};

export type MutationUpdateBrandArgs = {
  data: UpdateBrandInputDto;
  where?: InputMaybe<BrandWhereUniqueInput>;
};

export type MutationUpdateBrandGeoLocationsArgs = {
  data: BrandGeoLocationInputDto;
};

export type MutationUpdateConfigurationArgs = {
  data: ConfigurationUpdateInputDto;
  where: ConfigurationWhereUniqueInputDto;
};

export type MutationUpdateCustomerArgs = {
  data: UpdateCustomerDto;
};

export type MutationUpdateCustomerGeoLocationArgs = {
  data: CustomerGeoLocationInputDto;
};

export type MutationUpdateCustomerGeoLocationsArgs = {
  data: UpdateLocationDto;
};

export type MutationUpdateProductArgs = {
  data: ProductUpdateInput;
  where: ProductWhereUniqueInput;
};

export type MutationUpdateProductGeoLocationArgs = {
  data: ProductGeoLocationInputDto;
};

export type MutationUpdateUserArgs = {
  data: UserUpdateInputDto;
  where?: InputMaybe<UserWhereUniqueInput>;
};

export type MutationUploadFileArgs = {
  file: Scalars['Upload'];
};

export type MutationVerifyOtpArgs = {
  data: VerifyOtpInput;
};

export type NestedBoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type NestedDateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<Scalars['DateTime']>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']>>;
};

export type NestedFloatFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<Scalars['Float']>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']>>;
};

export type NestedFloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<Scalars['Float']>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']>>;
};

export type NestedIntFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type NestedIntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<Scalars['Int']>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']>>;
};

export type NestedStringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NotificationAttribute = {
  __typename?: 'NotificationAttribute';
  NotificationAttributeValue?: Maybe<Array<NotificationAttributeValue>>;
  NotificationType?: Maybe<NotificationType>;
  _count: NotificationAttributeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  dataType?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  notificationTypeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationAttributeCount = {
  __typename?: 'NotificationAttributeCount';
  NotificationAttributeValue: Scalars['Int'];
};

export type NotificationAttributeCountAggregate = {
  __typename?: 'NotificationAttributeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  dataType: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  notificationTypeId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type NotificationAttributeCreateNestedOneWithoutNotificationAttributeValueInput =
  {
    connect?: InputMaybe<NotificationAttributeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<NotificationAttributeCreateOrConnectWithoutNotificationAttributeValueInput>;
    create?: InputMaybe<NotificationAttributeCreateWithoutNotificationAttributeValueInput>;
  };

export type NotificationAttributeCreateOrConnectWithoutNotificationAttributeValueInput =
  {
    create: NotificationAttributeCreateWithoutNotificationAttributeValueInput;
    where: NotificationAttributeWhereUniqueInput;
  };

export type NotificationAttributeCreateWithoutNotificationAttributeValueInput =
  {
    NotificationType?: InputMaybe<NotificationTypeCreateNestedOneWithoutNotificationAttributeInput>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    dataType?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type NotificationAttributeListRelationFilter = {
  every?: InputMaybe<NotificationAttributeWhereInput>;
  none?: InputMaybe<NotificationAttributeWhereInput>;
  some?: InputMaybe<NotificationAttributeWhereInput>;
};

export type NotificationAttributeMaxAggregate = {
  __typename?: 'NotificationAttributeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  dataType?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  notificationTypeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationAttributeMinAggregate = {
  __typename?: 'NotificationAttributeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  dataType?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  notificationTypeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationAttributeRelationFilter = {
  is?: InputMaybe<NotificationAttributeWhereInput>;
  isNot?: InputMaybe<NotificationAttributeWhereInput>;
};

export type NotificationAttributeUpdateOneWithoutNotificationAttributeValueInput =
  {
    connect?: InputMaybe<NotificationAttributeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<NotificationAttributeCreateOrConnectWithoutNotificationAttributeValueInput>;
    create?: InputMaybe<NotificationAttributeCreateWithoutNotificationAttributeValueInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<NotificationAttributeUpdateWithoutNotificationAttributeValueInput>;
    upsert?: InputMaybe<NotificationAttributeUpsertWithoutNotificationAttributeValueInput>;
  };

export type NotificationAttributeUpdateWithoutNotificationAttributeValueInput =
  {
    NotificationType?: InputMaybe<NotificationTypeUpdateOneWithoutNotificationAttributeInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    dataType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type NotificationAttributeUpsertWithoutNotificationAttributeValueInput =
  {
    create: NotificationAttributeCreateWithoutNotificationAttributeValueInput;
    update: NotificationAttributeUpdateWithoutNotificationAttributeValueInput;
  };

export type NotificationAttributeValue = {
  __typename?: 'NotificationAttributeValue';
  NotificationAttribute?: Maybe<NotificationAttribute>;
  NotificationLog?: Maybe<NotificationLog>;
  attributeValue?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  notificationAttributeId?: Maybe<Scalars['String']>;
  notificationLogId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationAttributeValueCountAggregate = {
  __typename?: 'NotificationAttributeValueCountAggregate';
  _all: Scalars['Int'];
  attributeValue: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  notificationAttributeId: Scalars['Int'];
  notificationLogId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type NotificationAttributeValueCreateManyNotificationLogInput = {
  attributeValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  notificationAttributeId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type NotificationAttributeValueCreateManyNotificationLogInputEnvelope = {
  data: Array<NotificationAttributeValueCreateManyNotificationLogInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type NotificationAttributeValueCreateNestedManyWithoutNotificationLogInput =
  {
    connect?: InputMaybe<Array<NotificationAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<NotificationAttributeValueCreateOrConnectWithoutNotificationLogInput>
    >;
    create?: InputMaybe<
      Array<NotificationAttributeValueCreateWithoutNotificationLogInput>
    >;
    createMany?: InputMaybe<NotificationAttributeValueCreateManyNotificationLogInputEnvelope>;
  };

export type NotificationAttributeValueCreateOrConnectWithoutNotificationLogInput =
  {
    create: NotificationAttributeValueCreateWithoutNotificationLogInput;
    where: NotificationAttributeValueWhereUniqueInput;
  };

export type NotificationAttributeValueCreateWithoutNotificationLogInput = {
  NotificationAttribute?: InputMaybe<NotificationAttributeCreateNestedOneWithoutNotificationAttributeValueInput>;
  attributeValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type NotificationAttributeValueListRelationFilter = {
  every?: InputMaybe<NotificationAttributeValueWhereInput>;
  none?: InputMaybe<NotificationAttributeValueWhereInput>;
  some?: InputMaybe<NotificationAttributeValueWhereInput>;
};

export type NotificationAttributeValueMaxAggregate = {
  __typename?: 'NotificationAttributeValueMaxAggregate';
  attributeValue?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  notificationAttributeId?: Maybe<Scalars['String']>;
  notificationLogId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationAttributeValueMinAggregate = {
  __typename?: 'NotificationAttributeValueMinAggregate';
  attributeValue?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  notificationAttributeId?: Maybe<Scalars['String']>;
  notificationLogId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationAttributeValueScalarWhereInput = {
  AND?: InputMaybe<Array<NotificationAttributeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<NotificationAttributeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<NotificationAttributeValueScalarWhereInput>>;
  attributeValue?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  notificationAttributeId?: InputMaybe<StringNullableFilter>;
  notificationLogId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type NotificationAttributeValueUpdateManyMutationInput = {
  attributeValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationAttributeValueUpdateManyWithWhereWithoutNotificationLogInput =
  {
    data: NotificationAttributeValueUpdateManyMutationInput;
    where: NotificationAttributeValueScalarWhereInput;
  };

export type NotificationAttributeValueUpdateManyWithoutNotificationLogInput = {
  connect?: InputMaybe<Array<NotificationAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<NotificationAttributeValueCreateOrConnectWithoutNotificationLogInput>
  >;
  create?: InputMaybe<
    Array<NotificationAttributeValueCreateWithoutNotificationLogInput>
  >;
  createMany?: InputMaybe<NotificationAttributeValueCreateManyNotificationLogInputEnvelope>;
  delete?: InputMaybe<Array<NotificationAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<NotificationAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<NotificationAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<NotificationAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<NotificationAttributeValueUpdateWithWhereUniqueWithoutNotificationLogInput>
  >;
  updateMany?: InputMaybe<
    Array<NotificationAttributeValueUpdateManyWithWhereWithoutNotificationLogInput>
  >;
  upsert?: InputMaybe<
    Array<NotificationAttributeValueUpsertWithWhereUniqueWithoutNotificationLogInput>
  >;
};

export type NotificationAttributeValueUpdateWithWhereUniqueWithoutNotificationLogInput =
  {
    data: NotificationAttributeValueUpdateWithoutNotificationLogInput;
    where: NotificationAttributeValueWhereUniqueInput;
  };

export type NotificationAttributeValueUpdateWithoutNotificationLogInput = {
  NotificationAttribute?: InputMaybe<NotificationAttributeUpdateOneWithoutNotificationAttributeValueInput>;
  attributeValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationAttributeValueUpsertWithWhereUniqueWithoutNotificationLogInput =
  {
    create: NotificationAttributeValueCreateWithoutNotificationLogInput;
    update: NotificationAttributeValueUpdateWithoutNotificationLogInput;
    where: NotificationAttributeValueWhereUniqueInput;
  };

export type NotificationAttributeValueWhereInput = {
  AND?: InputMaybe<Array<NotificationAttributeValueWhereInput>>;
  NOT?: InputMaybe<Array<NotificationAttributeValueWhereInput>>;
  NotificationAttribute?: InputMaybe<NotificationAttributeRelationFilter>;
  NotificationLog?: InputMaybe<NotificationLogRelationFilter>;
  OR?: InputMaybe<Array<NotificationAttributeValueWhereInput>>;
  attributeValue?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  notificationAttributeId?: InputMaybe<StringNullableFilter>;
  notificationLogId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type NotificationAttributeValueWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type NotificationAttributeWhereInput = {
  AND?: InputMaybe<Array<NotificationAttributeWhereInput>>;
  NOT?: InputMaybe<Array<NotificationAttributeWhereInput>>;
  NotificationAttributeValue?: InputMaybe<NotificationAttributeValueListRelationFilter>;
  NotificationType?: InputMaybe<NotificationTypeRelationFilter>;
  OR?: InputMaybe<Array<NotificationAttributeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  dataType?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationTypeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type NotificationAttributeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type NotificationLog = {
  __typename?: 'NotificationLog';
  NotificationAttributeValue?: Maybe<Array<NotificationAttributeValue>>;
  NotificationStatus?: Maybe<NotificationStatus>;
  NotificationTemplate?: Maybe<NotificationTemplate>;
  User?: Maybe<User>;
  _count: NotificationLogCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  notificationStatusId?: Maybe<Scalars['String']>;
  notificationTemplateId?: Maybe<Scalars['String']>;
  sendAt?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type NotificationLogCount = {
  __typename?: 'NotificationLogCount';
  NotificationAttributeValue: Scalars['Int'];
};

export type NotificationLogCountAggregate = {
  __typename?: 'NotificationLogCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  notificationStatusId: Scalars['Int'];
  notificationTemplateId: Scalars['Int'];
  sendAt: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type NotificationLogCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  notificationStatusId?: InputMaybe<Scalars['String']>;
  notificationTemplateId?: InputMaybe<Scalars['String']>;
  sendAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type NotificationLogCreateManyUserInputEnvelope = {
  data: Array<NotificationLogCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type NotificationLogCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<NotificationLogWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<NotificationLogCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<NotificationLogCreateWithoutUserInput>>;
  createMany?: InputMaybe<NotificationLogCreateManyUserInputEnvelope>;
};

export type NotificationLogCreateOrConnectWithoutUserInput = {
  create: NotificationLogCreateWithoutUserInput;
  where: NotificationLogWhereUniqueInput;
};

export type NotificationLogCreateWithoutUserInput = {
  NotificationAttributeValue?: InputMaybe<NotificationAttributeValueCreateNestedManyWithoutNotificationLogInput>;
  NotificationStatus?: InputMaybe<NotificationStatusCreateNestedOneWithoutNotificationLogInput>;
  NotificationTemplate?: InputMaybe<NotificationTemplateCreateNestedOneWithoutNotificationLogInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  sendAt?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type NotificationLogListRelationFilter = {
  every?: InputMaybe<NotificationLogWhereInput>;
  none?: InputMaybe<NotificationLogWhereInput>;
  some?: InputMaybe<NotificationLogWhereInput>;
};

export type NotificationLogMaxAggregate = {
  __typename?: 'NotificationLogMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  notificationStatusId?: Maybe<Scalars['String']>;
  notificationTemplateId?: Maybe<Scalars['String']>;
  sendAt?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type NotificationLogMinAggregate = {
  __typename?: 'NotificationLogMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  notificationStatusId?: Maybe<Scalars['String']>;
  notificationTemplateId?: Maybe<Scalars['String']>;
  sendAt?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type NotificationLogRelationFilter = {
  is?: InputMaybe<NotificationLogWhereInput>;
  isNot?: InputMaybe<NotificationLogWhereInput>;
};

export type NotificationLogScalarWhereInput = {
  AND?: InputMaybe<Array<NotificationLogScalarWhereInput>>;
  NOT?: InputMaybe<Array<NotificationLogScalarWhereInput>>;
  OR?: InputMaybe<Array<NotificationLogScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  notificationStatusId?: InputMaybe<StringNullableFilter>;
  notificationTemplateId?: InputMaybe<StringNullableFilter>;
  sendAt?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type NotificationLogUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  sendAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationLogUpdateManyWithWhereWithoutUserInput = {
  data: NotificationLogUpdateManyMutationInput;
  where: NotificationLogScalarWhereInput;
};

export type NotificationLogUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<NotificationLogWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<NotificationLogCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<NotificationLogCreateWithoutUserInput>>;
  createMany?: InputMaybe<NotificationLogCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<NotificationLogWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<NotificationLogScalarWhereInput>>;
  disconnect?: InputMaybe<Array<NotificationLogWhereUniqueInput>>;
  set?: InputMaybe<Array<NotificationLogWhereUniqueInput>>;
  update?: InputMaybe<
    Array<NotificationLogUpdateWithWhereUniqueWithoutUserInput>
  >;
  updateMany?: InputMaybe<
    Array<NotificationLogUpdateManyWithWhereWithoutUserInput>
  >;
  upsert?: InputMaybe<
    Array<NotificationLogUpsertWithWhereUniqueWithoutUserInput>
  >;
};

export type NotificationLogUpdateWithWhereUniqueWithoutUserInput = {
  data: NotificationLogUpdateWithoutUserInput;
  where: NotificationLogWhereUniqueInput;
};

export type NotificationLogUpdateWithoutUserInput = {
  NotificationAttributeValue?: InputMaybe<NotificationAttributeValueUpdateManyWithoutNotificationLogInput>;
  NotificationStatus?: InputMaybe<NotificationStatusUpdateOneWithoutNotificationLogInput>;
  NotificationTemplate?: InputMaybe<NotificationTemplateUpdateOneWithoutNotificationLogInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  sendAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationLogUpsertWithWhereUniqueWithoutUserInput = {
  create: NotificationLogCreateWithoutUserInput;
  update: NotificationLogUpdateWithoutUserInput;
  where: NotificationLogWhereUniqueInput;
};

export type NotificationLogWhereInput = {
  AND?: InputMaybe<Array<NotificationLogWhereInput>>;
  NOT?: InputMaybe<Array<NotificationLogWhereInput>>;
  NotificationAttributeValue?: InputMaybe<NotificationAttributeValueListRelationFilter>;
  NotificationStatus?: InputMaybe<NotificationStatusRelationFilter>;
  NotificationTemplate?: InputMaybe<NotificationTemplateRelationFilter>;
  OR?: InputMaybe<Array<NotificationLogWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  notificationStatusId?: InputMaybe<StringNullableFilter>;
  notificationTemplateId?: InputMaybe<StringNullableFilter>;
  sendAt?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type NotificationLogWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type NotificationStatus = {
  __typename?: 'NotificationStatus';
  NotificationLog?: Maybe<Array<NotificationLog>>;
  _count: NotificationStatusCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationStatusCount = {
  __typename?: 'NotificationStatusCount';
  NotificationLog: Scalars['Int'];
};

export type NotificationStatusCountAggregate = {
  __typename?: 'NotificationStatusCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type NotificationStatusCreateNestedOneWithoutNotificationLogInput = {
  connect?: InputMaybe<NotificationStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<NotificationStatusCreateOrConnectWithoutNotificationLogInput>;
  create?: InputMaybe<NotificationStatusCreateWithoutNotificationLogInput>;
};

export type NotificationStatusCreateOrConnectWithoutNotificationLogInput = {
  create: NotificationStatusCreateWithoutNotificationLogInput;
  where: NotificationStatusWhereUniqueInput;
};

export type NotificationStatusCreateWithoutNotificationLogInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type NotificationStatusMaxAggregate = {
  __typename?: 'NotificationStatusMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationStatusMinAggregate = {
  __typename?: 'NotificationStatusMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationStatusRelationFilter = {
  is?: InputMaybe<NotificationStatusWhereInput>;
  isNot?: InputMaybe<NotificationStatusWhereInput>;
};

export type NotificationStatusUpdateOneWithoutNotificationLogInput = {
  connect?: InputMaybe<NotificationStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<NotificationStatusCreateOrConnectWithoutNotificationLogInput>;
  create?: InputMaybe<NotificationStatusCreateWithoutNotificationLogInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<NotificationStatusUpdateWithoutNotificationLogInput>;
  upsert?: InputMaybe<NotificationStatusUpsertWithoutNotificationLogInput>;
};

export type NotificationStatusUpdateWithoutNotificationLogInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationStatusUpsertWithoutNotificationLogInput = {
  create: NotificationStatusCreateWithoutNotificationLogInput;
  update: NotificationStatusUpdateWithoutNotificationLogInput;
};

export type NotificationStatusWhereInput = {
  AND?: InputMaybe<Array<NotificationStatusWhereInput>>;
  NOT?: InputMaybe<Array<NotificationStatusWhereInput>>;
  NotificationLog?: InputMaybe<NotificationLogListRelationFilter>;
  OR?: InputMaybe<Array<NotificationStatusWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type NotificationStatusWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type NotificationTemplate = {
  __typename?: 'NotificationTemplate';
  NotificationLog?: Maybe<Array<NotificationLog>>;
  _count: NotificationTemplateCount;
  body?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  notificationTypeId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationTemplateCount = {
  __typename?: 'NotificationTemplateCount';
  NotificationLog: Scalars['Int'];
};

export type NotificationTemplateCountAggregate = {
  __typename?: 'NotificationTemplateCountAggregate';
  _all: Scalars['Int'];
  body: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  notificationTypeId: Scalars['Int'];
  title: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type NotificationTemplateCreateNestedOneWithoutNotificationLogInput = {
  connect?: InputMaybe<NotificationTemplateWhereUniqueInput>;
  connectOrCreate?: InputMaybe<NotificationTemplateCreateOrConnectWithoutNotificationLogInput>;
  create?: InputMaybe<NotificationTemplateCreateWithoutNotificationLogInput>;
};

export type NotificationTemplateCreateOrConnectWithoutNotificationLogInput = {
  create: NotificationTemplateCreateWithoutNotificationLogInput;
  where: NotificationTemplateWhereUniqueInput;
};

export type NotificationTemplateCreateWithoutNotificationLogInput = {
  body?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  notificationTypeId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type NotificationTemplateMaxAggregate = {
  __typename?: 'NotificationTemplateMaxAggregate';
  body?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  notificationTypeId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationTemplateMinAggregate = {
  __typename?: 'NotificationTemplateMinAggregate';
  body?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  notificationTypeId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationTemplateRelationFilter = {
  is?: InputMaybe<NotificationTemplateWhereInput>;
  isNot?: InputMaybe<NotificationTemplateWhereInput>;
};

export type NotificationTemplateUpdateOneWithoutNotificationLogInput = {
  connect?: InputMaybe<NotificationTemplateWhereUniqueInput>;
  connectOrCreate?: InputMaybe<NotificationTemplateCreateOrConnectWithoutNotificationLogInput>;
  create?: InputMaybe<NotificationTemplateCreateWithoutNotificationLogInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<NotificationTemplateUpdateWithoutNotificationLogInput>;
  upsert?: InputMaybe<NotificationTemplateUpsertWithoutNotificationLogInput>;
};

export type NotificationTemplateUpdateWithoutNotificationLogInput = {
  body?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notificationTypeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationTemplateUpsertWithoutNotificationLogInput = {
  create: NotificationTemplateCreateWithoutNotificationLogInput;
  update: NotificationTemplateUpdateWithoutNotificationLogInput;
};

export type NotificationTemplateWhereInput = {
  AND?: InputMaybe<Array<NotificationTemplateWhereInput>>;
  NOT?: InputMaybe<Array<NotificationTemplateWhereInput>>;
  NotificationLog?: InputMaybe<NotificationLogListRelationFilter>;
  OR?: InputMaybe<Array<NotificationTemplateWhereInput>>;
  body?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  notificationTypeId?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type NotificationTemplateWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type NotificationType = {
  __typename?: 'NotificationType';
  NotificationAttribute?: Maybe<Array<NotificationAttribute>>;
  _count: NotificationTypeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationTypeCount = {
  __typename?: 'NotificationTypeCount';
  NotificationAttribute: Scalars['Int'];
};

export type NotificationTypeCountAggregate = {
  __typename?: 'NotificationTypeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type NotificationTypeCreateNestedOneWithoutNotificationAttributeInput = {
  connect?: InputMaybe<NotificationTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<NotificationTypeCreateOrConnectWithoutNotificationAttributeInput>;
  create?: InputMaybe<NotificationTypeCreateWithoutNotificationAttributeInput>;
};

export type NotificationTypeCreateOrConnectWithoutNotificationAttributeInput = {
  create: NotificationTypeCreateWithoutNotificationAttributeInput;
  where: NotificationTypeWhereUniqueInput;
};

export type NotificationTypeCreateWithoutNotificationAttributeInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type NotificationTypeMaxAggregate = {
  __typename?: 'NotificationTypeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationTypeMinAggregate = {
  __typename?: 'NotificationTypeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type NotificationTypeRelationFilter = {
  is?: InputMaybe<NotificationTypeWhereInput>;
  isNot?: InputMaybe<NotificationTypeWhereInput>;
};

export type NotificationTypeUpdateOneWithoutNotificationAttributeInput = {
  connect?: InputMaybe<NotificationTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<NotificationTypeCreateOrConnectWithoutNotificationAttributeInput>;
  create?: InputMaybe<NotificationTypeCreateWithoutNotificationAttributeInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<NotificationTypeUpdateWithoutNotificationAttributeInput>;
  upsert?: InputMaybe<NotificationTypeUpsertWithoutNotificationAttributeInput>;
};

export type NotificationTypeUpdateWithoutNotificationAttributeInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationTypeUpsertWithoutNotificationAttributeInput = {
  create: NotificationTypeCreateWithoutNotificationAttributeInput;
  update: NotificationTypeUpdateWithoutNotificationAttributeInput;
};

export type NotificationTypeWhereInput = {
  AND?: InputMaybe<Array<NotificationTypeWhereInput>>;
  NOT?: InputMaybe<Array<NotificationTypeWhereInput>>;
  NotificationAttribute?: InputMaybe<NotificationAttributeListRelationFilter>;
  OR?: InputMaybe<Array<NotificationTypeWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type NotificationTypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type NullableBoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']>;
};

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']>;
};

export type NullableEmailFieldUpdateOperationsInputDto = {
  set: Scalars['String'];
};

export type NullableFloatFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Float']>;
  divide?: InputMaybe<Scalars['Float']>;
  increment?: InputMaybe<Scalars['Float']>;
  multiply?: InputMaybe<Scalars['Float']>;
  set?: InputMaybe<Scalars['Float']>;
};

export type NullableIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']>;
  divide?: InputMaybe<Scalars['Int']>;
  increment?: InputMaybe<Scalars['Int']>;
  multiply?: InputMaybe<Scalars['Int']>;
  set?: InputMaybe<Scalars['Int']>;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export type NullableStringFieldUpdateOperationsInputDto = {
  set: Scalars['String'];
};

export type OperationType = {
  __typename?: 'OperationType';
  Permission?: Maybe<Array<Permission>>;
  _count: OperationTypeCount;
  abbrev?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type OperationTypeCount = {
  __typename?: 'OperationTypeCount';
  Permission: Scalars['Int'];
};

export type OperationTypeCountAggregate = {
  __typename?: 'OperationTypeCountAggregate';
  _all: Scalars['Int'];
  abbrev: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type OperationTypeCreateNestedOneWithoutPermissionInput = {
  connect?: InputMaybe<OperationTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OperationTypeCreateOrConnectWithoutPermissionInput>;
  create?: InputMaybe<OperationTypeCreateWithoutPermissionInput>;
};

export type OperationTypeCreateOrConnectWithoutPermissionInput = {
  create: OperationTypeCreateWithoutPermissionInput;
  where: OperationTypeWhereUniqueInput;
};

export type OperationTypeCreateWithoutPermissionInput = {
  abbrev?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type OperationTypeMaxAggregate = {
  __typename?: 'OperationTypeMaxAggregate';
  abbrev?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type OperationTypeMinAggregate = {
  __typename?: 'OperationTypeMinAggregate';
  abbrev?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type OperationTypeRelationFilter = {
  is?: InputMaybe<OperationTypeWhereInput>;
  isNot?: InputMaybe<OperationTypeWhereInput>;
};

export type OperationTypeUpdateOneWithoutPermissionInput = {
  connect?: InputMaybe<OperationTypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OperationTypeCreateOrConnectWithoutPermissionInput>;
  create?: InputMaybe<OperationTypeCreateWithoutPermissionInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OperationTypeUpdateWithoutPermissionInput>;
  upsert?: InputMaybe<OperationTypeUpsertWithoutPermissionInput>;
};

export type OperationTypeUpdateWithoutPermissionInput = {
  abbrev?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OperationTypeUpsertWithoutPermissionInput = {
  create: OperationTypeCreateWithoutPermissionInput;
  update: OperationTypeUpdateWithoutPermissionInput;
};

export type OperationTypeWhereInput = {
  AND?: InputMaybe<Array<OperationTypeWhereInput>>;
  NOT?: InputMaybe<Array<OperationTypeWhereInput>>;
  OR?: InputMaybe<Array<OperationTypeWhereInput>>;
  Permission?: InputMaybe<PermissionListRelationFilter>;
  abbrev?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type OperationTypeWhereUniqueInput = {
  abbrev?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Permission = {
  __typename?: 'Permission';
  ApplicationObject?: Maybe<ApplicationObject>;
  OperationType?: Maybe<OperationType>;
  RolePermission?: Maybe<Array<RolePermission>>;
  SubscriptionPlanPermission?: Maybe<Array<SubscriptionPlanPermission>>;
  _count: PermissionCount;
  applicationObjectId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  operationTypeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type PermissionCount = {
  __typename?: 'PermissionCount';
  RolePermission: Scalars['Int'];
  SubscriptionPlanPermission: Scalars['Int'];
};

export type PermissionCountAggregate = {
  __typename?: 'PermissionCountAggregate';
  _all: Scalars['Int'];
  applicationObjectId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  operationTypeId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type PermissionCreateNestedOneWithoutRolePermissionInput = {
  connect?: InputMaybe<PermissionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PermissionCreateOrConnectWithoutRolePermissionInput>;
  create?: InputMaybe<PermissionCreateWithoutRolePermissionInput>;
};

export type PermissionCreateNestedOneWithoutSubscriptionPlanPermissionInput = {
  connect?: InputMaybe<PermissionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PermissionCreateOrConnectWithoutSubscriptionPlanPermissionInput>;
  create?: InputMaybe<PermissionCreateWithoutSubscriptionPlanPermissionInput>;
};

export type PermissionCreateOrConnectWithoutRolePermissionInput = {
  create: PermissionCreateWithoutRolePermissionInput;
  where: PermissionWhereUniqueInput;
};

export type PermissionCreateOrConnectWithoutSubscriptionPlanPermissionInput = {
  create: PermissionCreateWithoutSubscriptionPlanPermissionInput;
  where: PermissionWhereUniqueInput;
};

export type PermissionCreateWithoutRolePermissionInput = {
  ApplicationObject?: InputMaybe<ApplicationObjectCreateNestedOneWithoutPermissionInput>;
  OperationType?: InputMaybe<OperationTypeCreateNestedOneWithoutPermissionInput>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionCreateNestedManyWithoutPermissionInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type PermissionCreateWithoutSubscriptionPlanPermissionInput = {
  ApplicationObject?: InputMaybe<ApplicationObjectCreateNestedOneWithoutPermissionInput>;
  OperationType?: InputMaybe<OperationTypeCreateNestedOneWithoutPermissionInput>;
  RolePermission?: InputMaybe<RolePermissionCreateNestedManyWithoutPermissionInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type PermissionListRelationFilter = {
  every?: InputMaybe<PermissionWhereInput>;
  none?: InputMaybe<PermissionWhereInput>;
  some?: InputMaybe<PermissionWhereInput>;
};

export type PermissionMaxAggregate = {
  __typename?: 'PermissionMaxAggregate';
  applicationObjectId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  operationTypeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type PermissionMinAggregate = {
  __typename?: 'PermissionMinAggregate';
  applicationObjectId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  operationTypeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type PermissionRelationFilter = {
  is?: InputMaybe<PermissionWhereInput>;
  isNot?: InputMaybe<PermissionWhereInput>;
};

export type PermissionUpdateOneWithoutRolePermissionInput = {
  connect?: InputMaybe<PermissionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PermissionCreateOrConnectWithoutRolePermissionInput>;
  create?: InputMaybe<PermissionCreateWithoutRolePermissionInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PermissionUpdateWithoutRolePermissionInput>;
  upsert?: InputMaybe<PermissionUpsertWithoutRolePermissionInput>;
};

export type PermissionUpdateOneWithoutSubscriptionPlanPermissionInput = {
  connect?: InputMaybe<PermissionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PermissionCreateOrConnectWithoutSubscriptionPlanPermissionInput>;
  create?: InputMaybe<PermissionCreateWithoutSubscriptionPlanPermissionInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PermissionUpdateWithoutSubscriptionPlanPermissionInput>;
  upsert?: InputMaybe<PermissionUpsertWithoutSubscriptionPlanPermissionInput>;
};

export type PermissionUpdateWithoutRolePermissionInput = {
  ApplicationObject?: InputMaybe<ApplicationObjectUpdateOneWithoutPermissionInput>;
  OperationType?: InputMaybe<OperationTypeUpdateOneWithoutPermissionInput>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionUpdateManyWithoutPermissionInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PermissionUpdateWithoutSubscriptionPlanPermissionInput = {
  ApplicationObject?: InputMaybe<ApplicationObjectUpdateOneWithoutPermissionInput>;
  OperationType?: InputMaybe<OperationTypeUpdateOneWithoutPermissionInput>;
  RolePermission?: InputMaybe<RolePermissionUpdateManyWithoutPermissionInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PermissionUpsertWithoutRolePermissionInput = {
  create: PermissionCreateWithoutRolePermissionInput;
  update: PermissionUpdateWithoutRolePermissionInput;
};

export type PermissionUpsertWithoutSubscriptionPlanPermissionInput = {
  create: PermissionCreateWithoutSubscriptionPlanPermissionInput;
  update: PermissionUpdateWithoutSubscriptionPlanPermissionInput;
};

export type PermissionWhereInput = {
  AND?: InputMaybe<Array<PermissionWhereInput>>;
  ApplicationObject?: InputMaybe<ApplicationObjectRelationFilter>;
  NOT?: InputMaybe<Array<PermissionWhereInput>>;
  OR?: InputMaybe<Array<PermissionWhereInput>>;
  OperationType?: InputMaybe<OperationTypeRelationFilter>;
  RolePermission?: InputMaybe<RolePermissionListRelationFilter>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionListRelationFilter>;
  applicationObjectId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  operationTypeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type PermissionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type Product = {
  __typename?: 'Product';
  Assets?: Maybe<Array<ProductAsset>>;
  AttributeValues?: Maybe<Array<ProductAttributeValue>>;
  Brand?: Maybe<Brand>;
  Bundles?: Maybe<Array<Bundle>>;
  Category?: Maybe<Category>;
  CustomAttributeValues?: Maybe<Array<ProductCustomAttributeValue>>;
  GeoLocations?: Maybe<Array<ProductGeoLocation>>;
  Variants?: Maybe<Array<ProductVariant>>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  _count: ProductCount;
  brandId?: Maybe<Scalars['String']>;
  categoryId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  hsn?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isGstInclude?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  listingExpiry?: Maybe<Scalars['String']>;
  moq?: Maybe<Scalars['Int']>;
  mrPrice?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  sku?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['Int']>;
  tags?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type ProductAsset = {
  __typename?: 'ProductAsset';
  Asset?: Maybe<Asset>;
  Product?: Maybe<Product>;
  assetId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  isCoverImage?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  productId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductAssetCountAggregate = {
  __typename?: 'ProductAssetCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  internalName: Scalars['Int'];
  isCoverImage: Scalars['Int'];
  name: Scalars['Int'];
  productId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ProductAssetCreateManyAssetInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isCoverImage?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  productId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAssetCreateManyAssetInputEnvelope = {
  data: Array<ProductAssetCreateManyAssetInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductAssetCreateManyProductInput = {
  assetId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isCoverImage?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAssetCreateManyProductInputEnvelope = {
  data: Array<ProductAssetCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductAssetCreateNestedManyWithoutAssetInput = {
  connect?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<ProductAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<ProductAssetCreateManyAssetInputEnvelope>;
};

export type ProductAssetCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAssetCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductAssetCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductAssetCreateManyProductInputEnvelope>;
};

export type ProductAssetCreateOrConnectWithoutAssetInput = {
  create: ProductAssetCreateWithoutAssetInput;
  where: ProductAssetWhereUniqueInput;
};

export type ProductAssetCreateOrConnectWithoutProductInput = {
  create: ProductAssetCreateWithoutProductInput;
  where: ProductAssetWhereUniqueInput;
};

export type ProductAssetCreateWithoutAssetInput = {
  Product?: InputMaybe<ProductCreateNestedOneWithoutAssetsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isCoverImage?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAssetCreateWithoutProductInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isCoverImage?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAssetListRelationFilter = {
  every?: InputMaybe<ProductAssetWhereInput>;
  none?: InputMaybe<ProductAssetWhereInput>;
  some?: InputMaybe<ProductAssetWhereInput>;
};

export type ProductAssetMaxAggregate = {
  __typename?: 'ProductAssetMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  isCoverImage?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductAssetMinAggregate = {
  __typename?: 'ProductAssetMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  isCoverImage?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductAssetOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductAssetProductIdAssetIdCompoundUniqueInput = {
  assetId: Scalars['String'];
  productId: Scalars['String'];
};

export type ProductAssetScalarWhereInput = {
  AND?: InputMaybe<Array<ProductAssetScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductAssetScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductAssetScalarWhereInput>>;
  assetId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  isCoverImage?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductAssetUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isCoverImage?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductAssetUpdateManyWithWhereWithoutAssetInput = {
  data: ProductAssetUpdateManyMutationInput;
  where: ProductAssetScalarWhereInput;
};

export type ProductAssetUpdateManyWithWhereWithoutProductInput = {
  data: ProductAssetUpdateManyMutationInput;
  where: ProductAssetScalarWhereInput;
};

export type ProductAssetUpdateManyWithoutAssetInput = {
  connect?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<ProductAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<ProductAssetCreateManyAssetInputEnvelope>;
  delete?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductAssetUpdateWithWhereUniqueWithoutAssetInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductAssetUpdateManyWithWhereWithoutAssetInput>
  >;
  upsert?: InputMaybe<
    Array<ProductAssetUpsertWithWhereUniqueWithoutAssetInput>
  >;
};

export type ProductAssetUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAssetCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductAssetCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductAssetCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductAssetWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductAssetUpdateWithWhereUniqueWithoutProductInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductAssetUpdateManyWithWhereWithoutProductInput>
  >;
  upsert?: InputMaybe<
    Array<ProductAssetUpsertWithWhereUniqueWithoutProductInput>
  >;
};

export type ProductAssetUpdateWithWhereUniqueWithoutAssetInput = {
  data: ProductAssetUpdateWithoutAssetInput;
  where: ProductAssetWhereUniqueInput;
};

export type ProductAssetUpdateWithWhereUniqueWithoutProductInput = {
  data: ProductAssetUpdateWithoutProductInput;
  where: ProductAssetWhereUniqueInput;
};

export type ProductAssetUpdateWithoutAssetInput = {
  Product?: InputMaybe<ProductUpdateOneWithoutAssetsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isCoverImage?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductAssetUpdateWithoutProductInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isCoverImage?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductAssetUpsertWithWhereUniqueWithoutAssetInput = {
  create: ProductAssetCreateWithoutAssetInput;
  update: ProductAssetUpdateWithoutAssetInput;
  where: ProductAssetWhereUniqueInput;
};

export type ProductAssetUpsertWithWhereUniqueWithoutProductInput = {
  create: ProductAssetCreateWithoutProductInput;
  update: ProductAssetUpdateWithoutProductInput;
  where: ProductAssetWhereUniqueInput;
};

export type ProductAssetWhereInput = {
  AND?: InputMaybe<Array<ProductAssetWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  NOT?: InputMaybe<Array<ProductAssetWhereInput>>;
  OR?: InputMaybe<Array<ProductAssetWhereInput>>;
  Product?: InputMaybe<ProductRelationFilter>;
  assetId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  isCoverImage?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductAssetWhereUniqueInput = {
  productId_assetId?: InputMaybe<ProductAssetProductIdAssetIdCompoundUniqueInput>;
};

export type ProductAttributeValue = {
  __typename?: 'ProductAttributeValue';
  AttributeValue: AttributeValue;
  Product: Product;
  attributeValueId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductAttributeValueCountAggregate = {
  __typename?: 'ProductAttributeValueCountAggregate';
  _all: Scalars['Int'];
  attributeValueId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  productId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ProductAttributeValueCreateManyAttributeValueInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  productId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAttributeValueCreateManyAttributeValueInputEnvelope = {
  data: Array<ProductAttributeValueCreateManyAttributeValueInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductAttributeValueCreateManyProductInput = {
  attributeValueId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAttributeValueCreateManyProductInputEnvelope = {
  data: Array<ProductAttributeValueCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductAttributeValueCreateNestedManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAttributeValueCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<ProductAttributeValueCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<ProductAttributeValueCreateManyAttributeValueInputEnvelope>;
};

export type ProductAttributeValueCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAttributeValueCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductAttributeValueCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductAttributeValueCreateManyProductInputEnvelope>;
};

export type ProductAttributeValueCreateOrConnectWithoutAttributeValueInput = {
  create: ProductAttributeValueCreateWithoutAttributeValueInput;
  where: ProductAttributeValueWhereUniqueInput;
};

export type ProductAttributeValueCreateOrConnectWithoutProductInput = {
  create: ProductAttributeValueCreateWithoutProductInput;
  where: ProductAttributeValueWhereUniqueInput;
};

export type ProductAttributeValueCreateWithoutAttributeValueInput = {
  Product: ProductCreateNestedOneWithoutAttributeValuesInput;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAttributeValueCreateWithoutProductInput = {
  AttributeValue: AttributeValueCreateNestedOneWithoutProductsInput;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductAttributeValueListRelationFilter = {
  every?: InputMaybe<ProductAttributeValueWhereInput>;
  none?: InputMaybe<ProductAttributeValueWhereInput>;
  some?: InputMaybe<ProductAttributeValueWhereInput>;
};

export type ProductAttributeValueMaxAggregate = {
  __typename?: 'ProductAttributeValueMaxAggregate';
  attributeValueId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductAttributeValueMinAggregate = {
  __typename?: 'ProductAttributeValueMinAggregate';
  attributeValueId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductAttributeValueOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductAttributeValueProductIdAttributeValueIdCompoundUniqueInput =
  {
    attributeValueId: Scalars['String'];
    productId: Scalars['String'];
  };

export type ProductAttributeValueScalarWhereInput = {
  AND?: InputMaybe<Array<ProductAttributeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductAttributeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductAttributeValueScalarWhereInput>>;
  attributeValueId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductAttributeValueUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductAttributeValueUpdateManyWithWhereWithoutAttributeValueInput =
  {
    data: ProductAttributeValueUpdateManyMutationInput;
    where: ProductAttributeValueScalarWhereInput;
  };

export type ProductAttributeValueUpdateManyWithWhereWithoutProductInput = {
  data: ProductAttributeValueUpdateManyMutationInput;
  where: ProductAttributeValueScalarWhereInput;
};

export type ProductAttributeValueUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAttributeValueCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<ProductAttributeValueCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<ProductAttributeValueCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductAttributeValueUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<ProductAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type ProductAttributeValueUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductAttributeValueCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductAttributeValueCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductAttributeValueCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductAttributeValueUpdateWithWhereUniqueWithoutProductInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductAttributeValueUpdateManyWithWhereWithoutProductInput>
  >;
  upsert?: InputMaybe<
    Array<ProductAttributeValueUpsertWithWhereUniqueWithoutProductInput>
  >;
};

export type ProductAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput =
  {
    data: ProductAttributeValueUpdateWithoutAttributeValueInput;
    where: ProductAttributeValueWhereUniqueInput;
  };

export type ProductAttributeValueUpdateWithWhereUniqueWithoutProductInput = {
  data: ProductAttributeValueUpdateWithoutProductInput;
  where: ProductAttributeValueWhereUniqueInput;
};

export type ProductAttributeValueUpdateWithoutAttributeValueInput = {
  Product?: InputMaybe<ProductUpdateOneRequiredWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductAttributeValueUpdateWithoutProductInput = {
  AttributeValue?: InputMaybe<AttributeValueUpdateOneRequiredWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput =
  {
    create: ProductAttributeValueCreateWithoutAttributeValueInput;
    update: ProductAttributeValueUpdateWithoutAttributeValueInput;
    where: ProductAttributeValueWhereUniqueInput;
  };

export type ProductAttributeValueUpsertWithWhereUniqueWithoutProductInput = {
  create: ProductAttributeValueCreateWithoutProductInput;
  update: ProductAttributeValueUpdateWithoutProductInput;
  where: ProductAttributeValueWhereUniqueInput;
};

export type ProductAttributeValueWhereInput = {
  AND?: InputMaybe<Array<ProductAttributeValueWhereInput>>;
  AttributeValue?: InputMaybe<AttributeValueRelationFilter>;
  NOT?: InputMaybe<Array<ProductAttributeValueWhereInput>>;
  OR?: InputMaybe<Array<ProductAttributeValueWhereInput>>;
  Product?: InputMaybe<ProductRelationFilter>;
  attributeValueId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductAttributeValueWhereUniqueInput = {
  productId_attributeValueId?: InputMaybe<ProductAttributeValueProductIdAttributeValueIdCompoundUniqueInput>;
};

export type ProductAvgAggregate = {
  __typename?: 'ProductAvgAggregate';
  discount?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Float']>;
  mrPrice?: Maybe<Scalars['Float']>;
  stock?: Maybe<Scalars['Float']>;
  unitPrice?: Maybe<Scalars['Float']>;
};

export type ProductCategoryCountAggregate = {
  __typename?: 'ProductCategoryCountAggregate';
  _all: Scalars['Int'];
  categoryId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  productId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ProductCategoryMaxAggregate = {
  __typename?: 'ProductCategoryMaxAggregate';
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductCategoryMinAggregate = {
  __typename?: 'ProductCategoryMinAggregate';
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductCount = {
  __typename?: 'ProductCount';
  Assets: Scalars['Int'];
  AttributeValues: Scalars['Int'];
  Bundles: Scalars['Int'];
  CustomAttributeValues: Scalars['Int'];
  GeoLocations: Scalars['Int'];
  Variants: Scalars['Int'];
};

export type ProductCountAggregate = {
  __typename?: 'ProductCountAggregate';
  _all: Scalars['Int'];
  brandId: Scalars['Int'];
  categoryId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  discount: Scalars['Int'];
  hsn: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isGeoRestricted: Scalars['Int'];
  isGstInclude: Scalars['Int'];
  isPriceVisible: Scalars['Int'];
  isRemoved: Scalars['Int'];
  listingExpiry: Scalars['Int'];
  moq: Scalars['Int'];
  mrPrice: Scalars['Int'];
  name: Scalars['Int'];
  sku: Scalars['Int'];
  stock: Scalars['Int'];
  tags: Scalars['Int'];
  unitPrice: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workFlowContextInstanceId: Scalars['Int'];
};

export type ProductCreateInputDto = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  categoryHeaderId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateManyBrandInput = {
  categoryId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
};

export type ProductCreateManyBrandInputEnvelope = {
  data: Array<ProductCreateManyBrandInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCreateManyCategoryInput = {
  brandId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workFlowContextInstanceId?: InputMaybe<Scalars['String']>;
};

export type ProductCreateManyCategoryInputEnvelope = {
  data: Array<ProductCreateManyCategoryInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCreateManyWorkFlowContextInstanceInput = {
  brandId?: InputMaybe<Scalars['String']>;
  categoryId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateManyWorkFlowContextInstanceInputEnvelope = {
  data: Array<ProductCreateManyWorkFlowContextInstanceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCreateNestedManyWithoutBrandInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutBrandInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutBrandInput>>;
  createMany?: InputMaybe<ProductCreateManyBrandInputEnvelope>;
};

export type ProductCreateNestedManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<Array<ProductCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<ProductCreateManyCategoryInputEnvelope>;
};

export type ProductCreateNestedManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<ProductCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<ProductCreateManyWorkFlowContextInstanceInputEnvelope>;
};

export type ProductCreateNestedOneWithoutAssetsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutAssetsInput>;
  create?: InputMaybe<ProductCreateWithoutAssetsInput>;
};

export type ProductCreateNestedOneWithoutAttributeValuesInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutAttributeValuesInput>;
  create?: InputMaybe<ProductCreateWithoutAttributeValuesInput>;
};

export type ProductCreateNestedOneWithoutBundlesInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutBundlesInput>;
  create?: InputMaybe<ProductCreateWithoutBundlesInput>;
};

export type ProductCreateNestedOneWithoutCustomAttributeValuesInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutCustomAttributeValuesInput>;
  create?: InputMaybe<ProductCreateWithoutCustomAttributeValuesInput>;
};

export type ProductCreateNestedOneWithoutGeoLocationsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutGeoLocationsInput>;
  create?: InputMaybe<ProductCreateWithoutGeoLocationsInput>;
};

export type ProductCreateNestedOneWithoutVariantsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutVariantsInput>;
  create?: InputMaybe<ProductCreateWithoutVariantsInput>;
};

export type ProductCreateOrConnectWithoutAssetsInput = {
  create: ProductCreateWithoutAssetsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutAttributeValuesInput = {
  create: ProductCreateWithoutAttributeValuesInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutBrandInput = {
  create: ProductCreateWithoutBrandInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutBundlesInput = {
  create: ProductCreateWithoutBundlesInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutCategoryInput = {
  create: ProductCreateWithoutCategoryInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutCustomAttributeValuesInput = {
  create: ProductCreateWithoutCustomAttributeValuesInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutGeoLocationsInput = {
  create: ProductCreateWithoutGeoLocationsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutVariantsInput = {
  create: ProductCreateWithoutVariantsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutWorkFlowContextInstanceInput = {
  create: ProductCreateWithoutWorkFlowContextInstanceInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateWithoutAssetsInput = {
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutAttributeValuesInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutBrandInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutBundlesInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutCategoryInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutCustomAttributeValuesInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutGeoLocationsInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutVariantsInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutWorkFlowContextInstanceInput = {
  Assets?: InputMaybe<ProductAssetCreateNestedManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueCreateNestedManyWithoutProductInput>;
  Brand?: InputMaybe<BrandCreateNestedOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleCreateNestedManyWithoutProductInput>;
  Category?: InputMaybe<CategoryCreateNestedOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueCreateNestedManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationCreateNestedManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  hsn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isGstInclude?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  listingExpiry?: InputMaybe<Scalars['String']>;
  moq?: InputMaybe<Scalars['Int']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  sku?: InputMaybe<Scalars['String']>;
  stock?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCustomAttributeValue = {
  __typename?: 'ProductCustomAttributeValue';
  AttributeValue: Attribute;
  Product: Product;
  attributeId: Scalars['String'];
  attributeValueText: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductCustomAttributeValueCountAggregate = {
  __typename?: 'ProductCustomAttributeValueCountAggregate';
  _all: Scalars['Int'];
  attributeId: Scalars['Int'];
  attributeValueText: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  productId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ProductCustomAttributeValueCreateManyAttributeValueInput = {
  attributeValueText: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  productId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCustomAttributeValueCreateManyAttributeValueInputEnvelope = {
  data: Array<ProductCustomAttributeValueCreateManyAttributeValueInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCustomAttributeValueCreateManyProductInput = {
  attributeId: Scalars['String'];
  attributeValueText: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCustomAttributeValueCreateManyProductInputEnvelope = {
  data: Array<ProductCustomAttributeValueCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCustomAttributeValueCreateNestedManyWithoutAttributeValueInput =
  {
    connect?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<ProductCustomAttributeValueCreateOrConnectWithoutAttributeValueInput>
    >;
    create?: InputMaybe<
      Array<ProductCustomAttributeValueCreateWithoutAttributeValueInput>
    >;
    createMany?: InputMaybe<ProductCustomAttributeValueCreateManyAttributeValueInputEnvelope>;
  };

export type ProductCustomAttributeValueCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductCustomAttributeValueCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<
    Array<ProductCustomAttributeValueCreateWithoutProductInput>
  >;
  createMany?: InputMaybe<ProductCustomAttributeValueCreateManyProductInputEnvelope>;
};

export type ProductCustomAttributeValueCreateOrConnectWithoutAttributeValueInput =
  {
    create: ProductCustomAttributeValueCreateWithoutAttributeValueInput;
    where: ProductCustomAttributeValueWhereUniqueInput;
  };

export type ProductCustomAttributeValueCreateOrConnectWithoutProductInput = {
  create: ProductCustomAttributeValueCreateWithoutProductInput;
  where: ProductCustomAttributeValueWhereUniqueInput;
};

export type ProductCustomAttributeValueCreateWithoutAttributeValueInput = {
  Product: ProductCreateNestedOneWithoutCustomAttributeValuesInput;
  attributeValueText: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCustomAttributeValueCreateWithoutProductInput = {
  AttributeValue: AttributeCreateNestedOneWithoutProductCustomAttributeValuesInput;
  attributeValueText: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductCustomAttributeValueListRelationFilter = {
  every?: InputMaybe<ProductCustomAttributeValueWhereInput>;
  none?: InputMaybe<ProductCustomAttributeValueWhereInput>;
  some?: InputMaybe<ProductCustomAttributeValueWhereInput>;
};

export type ProductCustomAttributeValueMaxAggregate = {
  __typename?: 'ProductCustomAttributeValueMaxAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductCustomAttributeValueMinAggregate = {
  __typename?: 'ProductCustomAttributeValueMinAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueText?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductCustomAttributeValueOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductCustomAttributeValueProductIdAttributeIdAttributeValueTextCompoundUniqueInput =
  {
    attributeId: Scalars['String'];
    attributeValueText: Scalars['String'];
    productId: Scalars['String'];
  };

export type ProductCustomAttributeValueScalarWhereInput = {
  AND?: InputMaybe<Array<ProductCustomAttributeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductCustomAttributeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductCustomAttributeValueScalarWhereInput>>;
  attributeId?: InputMaybe<StringFilter>;
  attributeValueText?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductCustomAttributeValueUpdateManyMutationInput = {
  attributeValueText?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCustomAttributeValueUpdateManyWithWhereWithoutAttributeValueInput =
  {
    data: ProductCustomAttributeValueUpdateManyMutationInput;
    where: ProductCustomAttributeValueScalarWhereInput;
  };

export type ProductCustomAttributeValueUpdateManyWithWhereWithoutProductInput =
  {
    data: ProductCustomAttributeValueUpdateManyMutationInput;
    where: ProductCustomAttributeValueScalarWhereInput;
  };

export type ProductCustomAttributeValueUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductCustomAttributeValueCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<ProductCustomAttributeValueCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<ProductCustomAttributeValueCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductCustomAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductCustomAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductCustomAttributeValueUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<ProductCustomAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type ProductCustomAttributeValueUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductCustomAttributeValueCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<
    Array<ProductCustomAttributeValueCreateWithoutProductInput>
  >;
  createMany?: InputMaybe<ProductCustomAttributeValueCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductCustomAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductCustomAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductCustomAttributeValueUpdateWithWhereUniqueWithoutProductInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductCustomAttributeValueUpdateManyWithWhereWithoutProductInput>
  >;
  upsert?: InputMaybe<
    Array<ProductCustomAttributeValueUpsertWithWhereUniqueWithoutProductInput>
  >;
};

export type ProductCustomAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput =
  {
    data: ProductCustomAttributeValueUpdateWithoutAttributeValueInput;
    where: ProductCustomAttributeValueWhereUniqueInput;
  };

export type ProductCustomAttributeValueUpdateWithWhereUniqueWithoutProductInput =
  {
    data: ProductCustomAttributeValueUpdateWithoutProductInput;
    where: ProductCustomAttributeValueWhereUniqueInput;
  };

export type ProductCustomAttributeValueUpdateWithoutAttributeValueInput = {
  Product?: InputMaybe<ProductUpdateOneRequiredWithoutCustomAttributeValuesInput>;
  attributeValueText?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCustomAttributeValueUpdateWithoutProductInput = {
  AttributeValue?: InputMaybe<AttributeUpdateOneRequiredWithoutProductCustomAttributeValuesInput>;
  attributeValueText?: InputMaybe<StringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCustomAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput =
  {
    create: ProductCustomAttributeValueCreateWithoutAttributeValueInput;
    update: ProductCustomAttributeValueUpdateWithoutAttributeValueInput;
    where: ProductCustomAttributeValueWhereUniqueInput;
  };

export type ProductCustomAttributeValueUpsertWithWhereUniqueWithoutProductInput =
  {
    create: ProductCustomAttributeValueCreateWithoutProductInput;
    update: ProductCustomAttributeValueUpdateWithoutProductInput;
    where: ProductCustomAttributeValueWhereUniqueInput;
  };

export type ProductCustomAttributeValueWhereInput = {
  AND?: InputMaybe<Array<ProductCustomAttributeValueWhereInput>>;
  AttributeValue?: InputMaybe<AttributeRelationFilter>;
  NOT?: InputMaybe<Array<ProductCustomAttributeValueWhereInput>>;
  OR?: InputMaybe<Array<ProductCustomAttributeValueWhereInput>>;
  Product?: InputMaybe<ProductRelationFilter>;
  attributeId?: InputMaybe<StringFilter>;
  attributeValueText?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductCustomAttributeValueWhereUniqueInput = {
  productId_attributeId_attributeValueText?: InputMaybe<ProductCustomAttributeValueProductIdAttributeIdAttributeValueTextCompoundUniqueInput>;
};

export type ProductDto = {
  __typename?: 'ProductDTO';
  Brand?: Maybe<Brand>;
  Bundle?: Maybe<Array<Bundle>>;
  ProductAttributeValue?: Maybe<Array<ProductAttributeValue>>;
  ProductGeoLocation?: Maybe<Array<ProductGeoLocation>>;
  WorkFlowContextInstance?: Maybe<WorkFlowContextInstance>;
  brandId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  hsn?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  imageUrl?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isGstInclude?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  listingExpiry?: Maybe<Scalars['String']>;
  moq?: Maybe<Scalars['Int']>;
  mrPrice?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  sku?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['Int']>;
  tags?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type ProductGeoLocation = {
  __typename?: 'ProductGeoLocation';
  GeoLocation?: Maybe<GeoLocation>;
  Product?: Maybe<Product>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  geoLocationId: Scalars['String'];
  isInclude?: Maybe<Scalars['Boolean']>;
  productId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductGeoLocationCountAggregate = {
  __typename?: 'ProductGeoLocationCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  geoLocationId: Scalars['Int'];
  isInclude: Scalars['Int'];
  productId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ProductGeoLocationCreateManyGeoLocationInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  productId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductGeoLocationCreateManyGeoLocationInputEnvelope = {
  data: Array<ProductGeoLocationCreateManyGeoLocationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductGeoLocationCreateManyProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  geoLocationId: Scalars['String'];
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductGeoLocationCreateManyProductInputEnvelope = {
  data: Array<ProductGeoLocationCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductGeoLocationCreateNestedManyWithoutGeoLocationInput = {
  connect?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductGeoLocationCreateOrConnectWithoutGeoLocationInput>
  >;
  create?: InputMaybe<Array<ProductGeoLocationCreateWithoutGeoLocationInput>>;
  createMany?: InputMaybe<ProductGeoLocationCreateManyGeoLocationInputEnvelope>;
};

export type ProductGeoLocationCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductGeoLocationCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductGeoLocationCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductGeoLocationCreateManyProductInputEnvelope>;
};

export type ProductGeoLocationCreateOrConnectWithoutGeoLocationInput = {
  create: ProductGeoLocationCreateWithoutGeoLocationInput;
  where: ProductGeoLocationWhereUniqueInput;
};

export type ProductGeoLocationCreateOrConnectWithoutProductInput = {
  create: ProductGeoLocationCreateWithoutProductInput;
  where: ProductGeoLocationWhereUniqueInput;
};

export type ProductGeoLocationCreateWithoutGeoLocationInput = {
  Product?: InputMaybe<ProductCreateNestedOneWithoutGeoLocationsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductGeoLocationCreateWithoutProductInput = {
  GeoLocation?: InputMaybe<GeoLocationCreateNestedOneWithoutProductsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isInclude?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductGeoLocationInputDto = {
  geoLocationId: Scalars['String'];
  isInclude?: InputMaybe<Scalars['Boolean']>;
  productId: Scalars['String'];
};

export type ProductGeoLocationListRelationFilter = {
  every?: InputMaybe<ProductGeoLocationWhereInput>;
  none?: InputMaybe<ProductGeoLocationWhereInput>;
  some?: InputMaybe<ProductGeoLocationWhereInput>;
};

export type ProductGeoLocationMaxAggregate = {
  __typename?: 'ProductGeoLocationMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  isInclude?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductGeoLocationMinAggregate = {
  __typename?: 'ProductGeoLocationMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  geoLocationId?: Maybe<Scalars['String']>;
  isInclude?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductGeoLocationModel = {
  __typename?: 'ProductGeoLocationModel';
  geoLocationId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isInclude?: Maybe<Scalars['Boolean']>;
  productId?: Maybe<Scalars['String']>;
};

export type ProductGeoLocationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductGeoLocationProductIdGeoLocationIdCompoundUniqueInput = {
  geoLocationId: Scalars['String'];
  productId: Scalars['String'];
};

export type ProductGeoLocationScalarWhereInput = {
  AND?: InputMaybe<Array<ProductGeoLocationScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductGeoLocationScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductGeoLocationScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  geoLocationId?: InputMaybe<StringFilter>;
  isInclude?: InputMaybe<BoolNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductGeoLocationUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGeoLocationUpdateManyWithWhereWithoutGeoLocationInput = {
  data: ProductGeoLocationUpdateManyMutationInput;
  where: ProductGeoLocationScalarWhereInput;
};

export type ProductGeoLocationUpdateManyWithWhereWithoutProductInput = {
  data: ProductGeoLocationUpdateManyMutationInput;
  where: ProductGeoLocationScalarWhereInput;
};

export type ProductGeoLocationUpdateManyWithoutGeoLocationInput = {
  connect?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductGeoLocationCreateOrConnectWithoutGeoLocationInput>
  >;
  create?: InputMaybe<Array<ProductGeoLocationCreateWithoutGeoLocationInput>>;
  createMany?: InputMaybe<ProductGeoLocationCreateManyGeoLocationInputEnvelope>;
  delete?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductGeoLocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductGeoLocationUpdateWithWhereUniqueWithoutGeoLocationInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductGeoLocationUpdateManyWithWhereWithoutGeoLocationInput>
  >;
  upsert?: InputMaybe<
    Array<ProductGeoLocationUpsertWithWhereUniqueWithoutGeoLocationInput>
  >;
};

export type ProductGeoLocationUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductGeoLocationCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductGeoLocationCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductGeoLocationCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductGeoLocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductGeoLocationWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductGeoLocationUpdateWithWhereUniqueWithoutProductInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductGeoLocationUpdateManyWithWhereWithoutProductInput>
  >;
  upsert?: InputMaybe<
    Array<ProductGeoLocationUpsertWithWhereUniqueWithoutProductInput>
  >;
};

export type ProductGeoLocationUpdateWithWhereUniqueWithoutGeoLocationInput = {
  data: ProductGeoLocationUpdateWithoutGeoLocationInput;
  where: ProductGeoLocationWhereUniqueInput;
};

export type ProductGeoLocationUpdateWithWhereUniqueWithoutProductInput = {
  data: ProductGeoLocationUpdateWithoutProductInput;
  where: ProductGeoLocationWhereUniqueInput;
};

export type ProductGeoLocationUpdateWithoutGeoLocationInput = {
  Product?: InputMaybe<ProductUpdateOneWithoutGeoLocationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGeoLocationUpdateWithoutProductInput = {
  GeoLocation?: InputMaybe<GeoLocationUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductGeoLocationUpsertWithWhereUniqueWithoutGeoLocationInput = {
  create: ProductGeoLocationCreateWithoutGeoLocationInput;
  update: ProductGeoLocationUpdateWithoutGeoLocationInput;
  where: ProductGeoLocationWhereUniqueInput;
};

export type ProductGeoLocationUpsertWithWhereUniqueWithoutProductInput = {
  create: ProductGeoLocationCreateWithoutProductInput;
  update: ProductGeoLocationUpdateWithoutProductInput;
  where: ProductGeoLocationWhereUniqueInput;
};

export type ProductGeoLocationWhereInput = {
  AND?: InputMaybe<Array<ProductGeoLocationWhereInput>>;
  GeoLocation?: InputMaybe<GeoLocationRelationFilter>;
  NOT?: InputMaybe<Array<ProductGeoLocationWhereInput>>;
  OR?: InputMaybe<Array<ProductGeoLocationWhereInput>>;
  Product?: InputMaybe<ProductRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  geoLocationId?: InputMaybe<StringFilter>;
  isInclude?: InputMaybe<BoolNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductGeoLocationWhereUniqueInput = {
  productId_geoLocationId?: InputMaybe<ProductGeoLocationProductIdGeoLocationIdCompoundUniqueInput>;
};

export type ProductListRelationFilter = {
  every?: InputMaybe<ProductWhereInput>;
  none?: InputMaybe<ProductWhereInput>;
  some?: InputMaybe<ProductWhereInput>;
};

export type ProductMaxAggregate = {
  __typename?: 'ProductMaxAggregate';
  brandId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  hsn?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isGstInclude?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  listingExpiry?: Maybe<Scalars['String']>;
  moq?: Maybe<Scalars['Int']>;
  mrPrice?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  sku?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['Int']>;
  tags?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type ProductMinAggregate = {
  __typename?: 'ProductMinAggregate';
  brandId?: Maybe<Scalars['String']>;
  categoryId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  hsn?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isGeoRestricted?: Maybe<Scalars['Boolean']>;
  isGstInclude?: Maybe<Scalars['Boolean']>;
  isPriceVisible?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  listingExpiry?: Maybe<Scalars['String']>;
  moq?: Maybe<Scalars['Int']>;
  mrPrice?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  sku?: Maybe<Scalars['String']>;
  stock?: Maybe<Scalars['Int']>;
  tags?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workFlowContextInstanceId?: Maybe<Scalars['String']>;
};

export type ProductOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductOrderByWithRelationInput = {
  Assets?: InputMaybe<ProductAssetOrderByRelationAggregateInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueOrderByRelationAggregateInput>;
  Brand?: InputMaybe<BrandOrderByWithRelationInput>;
  Bundles?: InputMaybe<BundleOrderByRelationAggregateInput>;
  Category?: InputMaybe<CategoryOrderByWithRelationInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueOrderByRelationAggregateInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationOrderByRelationAggregateInput>;
  Variants?: InputMaybe<ProductVariantOrderByRelationAggregateInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceOrderByWithRelationInput>;
  brandId?: InputMaybe<SortOrder>;
  categoryId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  hsn?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isGeoRestricted?: InputMaybe<SortOrder>;
  isGstInclude?: InputMaybe<SortOrder>;
  isPriceVisible?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  listingExpiry?: InputMaybe<SortOrder>;
  moq?: InputMaybe<SortOrder>;
  mrPrice?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  tags?: InputMaybe<SortOrder>;
  unitPrice?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
  workFlowContextInstanceId?: InputMaybe<SortOrder>;
};

export type ProductRelationFilter = {
  is?: InputMaybe<ProductWhereInput>;
  isNot?: InputMaybe<ProductWhereInput>;
};

export enum ProductScalarFieldEnum {
  BrandId = 'brandId',
  CategoryId = 'categoryId',
  CreatedAt = 'createdAt',
  CreatedBy = 'createdBy',
  Description = 'description',
  Discount = 'discount',
  Hsn = 'hsn',
  Id = 'id',
  IsActive = 'isActive',
  IsGeoRestricted = 'isGeoRestricted',
  IsGstInclude = 'isGstInclude',
  IsPriceVisible = 'isPriceVisible',
  IsRemoved = 'isRemoved',
  ListingExpiry = 'listingExpiry',
  Moq = 'moq',
  MrPrice = 'mrPrice',
  Name = 'name',
  Sku = 'sku',
  Stock = 'stock',
  Tags = 'tags',
  UnitPrice = 'unitPrice',
  UpdatedAt = 'updatedAt',
  UpdatedBy = 'updatedBy',
  WorkFlowContextInstanceId = 'workFlowContextInstanceId',
}

export type ProductScalarWhereInput = {
  AND?: InputMaybe<Array<ProductScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductScalarWhereInput>>;
  brandId?: InputMaybe<StringNullableFilter>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  hsn?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isGeoRestricted?: InputMaybe<BoolNullableFilter>;
  isGstInclude?: InputMaybe<BoolNullableFilter>;
  isPriceVisible?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  listingExpiry?: InputMaybe<StringNullableFilter>;
  moq?: InputMaybe<IntNullableFilter>;
  mrPrice?: InputMaybe<FloatNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stock?: InputMaybe<IntNullableFilter>;
  tags?: InputMaybe<StringNullableFilter>;
  unitPrice?: InputMaybe<FloatNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type ProductSumAggregate = {
  __typename?: 'ProductSumAggregate';
  discount?: Maybe<Scalars['Float']>;
  moq?: Maybe<Scalars['Int']>;
  mrPrice?: Maybe<Scalars['Float']>;
  stock?: Maybe<Scalars['Int']>;
  unitPrice?: Maybe<Scalars['Float']>;
};

export type ProductUpdateInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutBrandInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutCategoryInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutWorkFlowContextInstanceInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithoutBrandInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutBrandInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutBrandInput>>;
  createMany?: InputMaybe<ProductCreateManyBrandInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutBrandInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutBrandInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutBrandInput>>;
};

export type ProductUpdateManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductCreateOrConnectWithoutCategoryInput>
  >;
  create?: InputMaybe<Array<ProductCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<ProductCreateManyCategoryInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutCategoryInput>>;
  updateMany?: InputMaybe<
    Array<ProductUpdateManyWithWhereWithoutCategoryInput>
  >;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutCategoryInput>>;
};

export type ProductUpdateManyWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductCreateOrConnectWithoutWorkFlowContextInstanceInput>
  >;
  create?: InputMaybe<Array<ProductCreateWithoutWorkFlowContextInstanceInput>>;
  createMany?: InputMaybe<ProductCreateManyWorkFlowContextInstanceInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductUpdateManyWithWhereWithoutWorkFlowContextInstanceInput>
  >;
  upsert?: InputMaybe<
    Array<ProductUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput>
  >;
};

export type ProductUpdateOneRequiredWithoutAttributeValuesInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutAttributeValuesInput>;
  create?: InputMaybe<ProductCreateWithoutAttributeValuesInput>;
  update?: InputMaybe<ProductUpdateWithoutAttributeValuesInput>;
  upsert?: InputMaybe<ProductUpsertWithoutAttributeValuesInput>;
};

export type ProductUpdateOneRequiredWithoutCustomAttributeValuesInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutCustomAttributeValuesInput>;
  create?: InputMaybe<ProductCreateWithoutCustomAttributeValuesInput>;
  update?: InputMaybe<ProductUpdateWithoutCustomAttributeValuesInput>;
  upsert?: InputMaybe<ProductUpsertWithoutCustomAttributeValuesInput>;
};

export type ProductUpdateOneRequiredWithoutVariantsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutVariantsInput>;
  create?: InputMaybe<ProductCreateWithoutVariantsInput>;
  update?: InputMaybe<ProductUpdateWithoutVariantsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutVariantsInput>;
};

export type ProductUpdateOneWithoutAssetsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutAssetsInput>;
  create?: InputMaybe<ProductCreateWithoutAssetsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductUpdateWithoutAssetsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutAssetsInput>;
};

export type ProductUpdateOneWithoutBundlesInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutBundlesInput>;
  create?: InputMaybe<ProductCreateWithoutBundlesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductUpdateWithoutBundlesInput>;
  upsert?: InputMaybe<ProductUpsertWithoutBundlesInput>;
};

export type ProductUpdateOneWithoutGeoLocationsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutGeoLocationsInput>;
  create?: InputMaybe<ProductCreateWithoutGeoLocationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductUpdateWithoutGeoLocationsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutGeoLocationsInput>;
};

export type ProductUpdateWithWhereUniqueWithoutBrandInput = {
  data: ProductUpdateWithoutBrandInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutCategoryInput = {
  data: ProductUpdateWithoutCategoryInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  data: ProductUpdateWithoutWorkFlowContextInstanceInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithoutAssetsInput = {
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutAttributeValuesInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutBrandInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutBundlesInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutCategoryInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutCustomAttributeValuesInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutGeoLocationsInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutVariantsInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceUpdateOneWithoutProductsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutWorkFlowContextInstanceInput = {
  Assets?: InputMaybe<ProductAssetUpdateManyWithoutProductInput>;
  AttributeValues?: InputMaybe<ProductAttributeValueUpdateManyWithoutProductInput>;
  Brand?: InputMaybe<BrandUpdateOneWithoutProductsInput>;
  Bundles?: InputMaybe<BundleUpdateManyWithoutProductInput>;
  Category?: InputMaybe<CategoryUpdateOneWithoutProductsInput>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueUpdateManyWithoutProductInput>;
  GeoLocations?: InputMaybe<ProductGeoLocationUpdateManyWithoutProductInput>;
  Variants?: InputMaybe<ProductVariantUpdateManyWithoutProductInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  hsn?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGeoRestricted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isGstInclude?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isPriceVisible?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  listingExpiry?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  moq?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpsertWithWhereUniqueWithoutBrandInput = {
  create: ProductCreateWithoutBrandInput;
  update: ProductUpdateWithoutBrandInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutCategoryInput = {
  create: ProductCreateWithoutCategoryInput;
  update: ProductUpdateWithoutCategoryInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutWorkFlowContextInstanceInput = {
  create: ProductCreateWithoutWorkFlowContextInstanceInput;
  update: ProductUpdateWithoutWorkFlowContextInstanceInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithoutAssetsInput = {
  create: ProductCreateWithoutAssetsInput;
  update: ProductUpdateWithoutAssetsInput;
};

export type ProductUpsertWithoutAttributeValuesInput = {
  create: ProductCreateWithoutAttributeValuesInput;
  update: ProductUpdateWithoutAttributeValuesInput;
};

export type ProductUpsertWithoutBundlesInput = {
  create: ProductCreateWithoutBundlesInput;
  update: ProductUpdateWithoutBundlesInput;
};

export type ProductUpsertWithoutCustomAttributeValuesInput = {
  create: ProductCreateWithoutCustomAttributeValuesInput;
  update: ProductUpdateWithoutCustomAttributeValuesInput;
};

export type ProductUpsertWithoutGeoLocationsInput = {
  create: ProductCreateWithoutGeoLocationsInput;
  update: ProductUpdateWithoutGeoLocationsInput;
};

export type ProductUpsertWithoutVariantsInput = {
  create: ProductCreateWithoutVariantsInput;
  update: ProductUpdateWithoutVariantsInput;
};

export type ProductVariant = {
  __typename?: 'ProductVariant';
  AttributeValues?: Maybe<Array<ProductVariantAttributeValue>>;
  Bundles?: Maybe<Array<BundleItem>>;
  Product: Product;
  _count: ProductVariantCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mrPrice?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  productId: Scalars['String'];
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductVariantAttributeValue = {
  __typename?: 'ProductVariantAttributeValue';
  Attribute?: Maybe<Attribute>;
  AttributeValue?: Maybe<AttributeValue>;
  ProductVariant?: Maybe<ProductVariant>;
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productVariantId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductVariantAttributeValueCountAggregate = {
  __typename?: 'ProductVariantAttributeValueCountAggregate';
  _all: Scalars['Int'];
  attributeId: Scalars['Int'];
  attributeValueId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  productVariantId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ProductVariantAttributeValueCreateManyAttributeInput = {
  attributeValueId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  productVariantId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantAttributeValueCreateManyAttributeInputEnvelope = {
  data: Array<ProductVariantAttributeValueCreateManyAttributeInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductVariantAttributeValueCreateManyAttributeValueInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  productVariantId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantAttributeValueCreateManyAttributeValueInputEnvelope =
  {
    data: Array<ProductVariantAttributeValueCreateManyAttributeValueInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type ProductVariantAttributeValueCreateManyProductVariantInput = {
  attributeId?: InputMaybe<Scalars['String']>;
  attributeValueId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantAttributeValueCreateManyProductVariantInputEnvelope =
  {
    data: Array<ProductVariantAttributeValueCreateManyProductVariantInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type ProductVariantAttributeValueCreateNestedManyWithoutAttributeInput =
  {
    connect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<ProductVariantAttributeValueCreateOrConnectWithoutAttributeInput>
    >;
    create?: InputMaybe<
      Array<ProductVariantAttributeValueCreateWithoutAttributeInput>
    >;
    createMany?: InputMaybe<ProductVariantAttributeValueCreateManyAttributeInputEnvelope>;
  };

export type ProductVariantAttributeValueCreateNestedManyWithoutAttributeValueInput =
  {
    connect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<ProductVariantAttributeValueCreateOrConnectWithoutAttributeValueInput>
    >;
    create?: InputMaybe<
      Array<ProductVariantAttributeValueCreateWithoutAttributeValueInput>
    >;
    createMany?: InputMaybe<ProductVariantAttributeValueCreateManyAttributeValueInputEnvelope>;
  };

export type ProductVariantAttributeValueCreateNestedManyWithoutProductVariantInput =
  {
    connect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<ProductVariantAttributeValueCreateOrConnectWithoutProductVariantInput>
    >;
    create?: InputMaybe<
      Array<ProductVariantAttributeValueCreateWithoutProductVariantInput>
    >;
    createMany?: InputMaybe<ProductVariantAttributeValueCreateManyProductVariantInputEnvelope>;
  };

export type ProductVariantAttributeValueCreateOrConnectWithoutAttributeInput = {
  create: ProductVariantAttributeValueCreateWithoutAttributeInput;
  where: ProductVariantAttributeValueWhereUniqueInput;
};

export type ProductVariantAttributeValueCreateOrConnectWithoutAttributeValueInput =
  {
    create: ProductVariantAttributeValueCreateWithoutAttributeValueInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueCreateOrConnectWithoutProductVariantInput =
  {
    create: ProductVariantAttributeValueCreateWithoutProductVariantInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueCreateWithoutAttributeInput = {
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutProductVariantsInput>;
  ProductVariant?: InputMaybe<ProductVariantCreateNestedOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantAttributeValueCreateWithoutAttributeValueInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutProductVariantAttributeValueInput>;
  ProductVariant?: InputMaybe<ProductVariantCreateNestedOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantAttributeValueCreateWithoutProductVariantInput = {
  Attribute?: InputMaybe<AttributeCreateNestedOneWithoutProductVariantAttributeValueInput>;
  AttributeValue?: InputMaybe<AttributeValueCreateNestedOneWithoutProductVariantsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantAttributeValueListRelationFilter = {
  every?: InputMaybe<ProductVariantAttributeValueWhereInput>;
  none?: InputMaybe<ProductVariantAttributeValueWhereInput>;
  some?: InputMaybe<ProductVariantAttributeValueWhereInput>;
};

export type ProductVariantAttributeValueMaxAggregate = {
  __typename?: 'ProductVariantAttributeValueMaxAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productVariantId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductVariantAttributeValueMinAggregate = {
  __typename?: 'ProductVariantAttributeValueMinAggregate';
  attributeId?: Maybe<Scalars['String']>;
  attributeValueId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  productVariantId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductVariantAttributeValueProductVariantIdAttributeValueIdCompoundUniqueInput =
  {
    attributeValueId: Scalars['String'];
    productVariantId: Scalars['String'];
  };

export type ProductVariantAttributeValueScalarWhereInput = {
  AND?: InputMaybe<Array<ProductVariantAttributeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantAttributeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantAttributeValueScalarWhereInput>>;
  attributeId?: InputMaybe<StringNullableFilter>;
  attributeValueId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productVariantId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductVariantAttributeValueUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantAttributeValueUpdateManyWithWhereWithoutAttributeInput =
  {
    data: ProductVariantAttributeValueUpdateManyMutationInput;
    where: ProductVariantAttributeValueScalarWhereInput;
  };

export type ProductVariantAttributeValueUpdateManyWithWhereWithoutAttributeValueInput =
  {
    data: ProductVariantAttributeValueUpdateManyMutationInput;
    where: ProductVariantAttributeValueScalarWhereInput;
  };

export type ProductVariantAttributeValueUpdateManyWithWhereWithoutProductVariantInput =
  {
    data: ProductVariantAttributeValueUpdateManyMutationInput;
    where: ProductVariantAttributeValueScalarWhereInput;
  };

export type ProductVariantAttributeValueUpdateManyWithoutAttributeInput = {
  connect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductVariantAttributeValueCreateOrConnectWithoutAttributeInput>
  >;
  create?: InputMaybe<
    Array<ProductVariantAttributeValueCreateWithoutAttributeInput>
  >;
  createMany?: InputMaybe<ProductVariantAttributeValueCreateManyAttributeInputEnvelope>;
  delete?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductVariantAttributeValueUpdateWithWhereUniqueWithoutAttributeInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductVariantAttributeValueUpdateManyWithWhereWithoutAttributeInput>
  >;
  upsert?: InputMaybe<
    Array<ProductVariantAttributeValueUpsertWithWhereUniqueWithoutAttributeInput>
  >;
};

export type ProductVariantAttributeValueUpdateManyWithoutAttributeValueInput = {
  connect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductVariantAttributeValueCreateOrConnectWithoutAttributeValueInput>
  >;
  create?: InputMaybe<
    Array<ProductVariantAttributeValueCreateWithoutAttributeValueInput>
  >;
  createMany?: InputMaybe<ProductVariantAttributeValueCreateManyAttributeValueInputEnvelope>;
  delete?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductVariantAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductVariantAttributeValueUpdateManyWithWhereWithoutAttributeValueInput>
  >;
  upsert?: InputMaybe<
    Array<ProductVariantAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput>
  >;
};

export type ProductVariantAttributeValueUpdateManyWithoutProductVariantInput = {
  connect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductVariantAttributeValueCreateOrConnectWithoutProductVariantInput>
  >;
  create?: InputMaybe<
    Array<ProductVariantAttributeValueCreateWithoutProductVariantInput>
  >;
  createMany?: InputMaybe<ProductVariantAttributeValueCreateManyProductVariantInputEnvelope>;
  delete?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantAttributeValueScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantAttributeValueWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductVariantAttributeValueUpdateWithWhereUniqueWithoutProductVariantInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductVariantAttributeValueUpdateManyWithWhereWithoutProductVariantInput>
  >;
  upsert?: InputMaybe<
    Array<ProductVariantAttributeValueUpsertWithWhereUniqueWithoutProductVariantInput>
  >;
};

export type ProductVariantAttributeValueUpdateWithWhereUniqueWithoutAttributeInput =
  {
    data: ProductVariantAttributeValueUpdateWithoutAttributeInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueUpdateWithWhereUniqueWithoutAttributeValueInput =
  {
    data: ProductVariantAttributeValueUpdateWithoutAttributeValueInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueUpdateWithWhereUniqueWithoutProductVariantInput =
  {
    data: ProductVariantAttributeValueUpdateWithoutProductVariantInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueUpdateWithoutAttributeInput = {
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutProductVariantsInput>;
  ProductVariant?: InputMaybe<ProductVariantUpdateOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantAttributeValueUpdateWithoutAttributeValueInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutProductVariantAttributeValueInput>;
  ProductVariant?: InputMaybe<ProductVariantUpdateOneWithoutAttributeValuesInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantAttributeValueUpdateWithoutProductVariantInput = {
  Attribute?: InputMaybe<AttributeUpdateOneWithoutProductVariantAttributeValueInput>;
  AttributeValue?: InputMaybe<AttributeValueUpdateOneWithoutProductVariantsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantAttributeValueUpsertWithWhereUniqueWithoutAttributeInput =
  {
    create: ProductVariantAttributeValueCreateWithoutAttributeInput;
    update: ProductVariantAttributeValueUpdateWithoutAttributeInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueUpsertWithWhereUniqueWithoutAttributeValueInput =
  {
    create: ProductVariantAttributeValueCreateWithoutAttributeValueInput;
    update: ProductVariantAttributeValueUpdateWithoutAttributeValueInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueUpsertWithWhereUniqueWithoutProductVariantInput =
  {
    create: ProductVariantAttributeValueCreateWithoutProductVariantInput;
    update: ProductVariantAttributeValueUpdateWithoutProductVariantInput;
    where: ProductVariantAttributeValueWhereUniqueInput;
  };

export type ProductVariantAttributeValueWhereInput = {
  AND?: InputMaybe<Array<ProductVariantAttributeValueWhereInput>>;
  Attribute?: InputMaybe<AttributeRelationFilter>;
  AttributeValue?: InputMaybe<AttributeValueRelationFilter>;
  NOT?: InputMaybe<Array<ProductVariantAttributeValueWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantAttributeValueWhereInput>>;
  ProductVariant?: InputMaybe<ProductVariantRelationFilter>;
  attributeId?: InputMaybe<StringNullableFilter>;
  attributeValueId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  productVariantId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductVariantAttributeValueWhereUniqueInput = {
  productVariantId_attributeValueId?: InputMaybe<ProductVariantAttributeValueProductVariantIdAttributeValueIdCompoundUniqueInput>;
};

export type ProductVariantAvgAggregate = {
  __typename?: 'ProductVariantAvgAggregate';
  mrPrice?: Maybe<Scalars['Float']>;
  unitPrice?: Maybe<Scalars['Float']>;
};

export type ProductVariantCount = {
  __typename?: 'ProductVariantCount';
  AttributeValues: Scalars['Int'];
  Bundles: Scalars['Int'];
};

export type ProductVariantCountAggregate = {
  __typename?: 'ProductVariantCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  mrPrice: Scalars['Int'];
  name: Scalars['Int'];
  productId: Scalars['Int'];
  unitPrice: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type ProductVariantCreateManyProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantCreateManyProductInputEnvelope = {
  data: Array<ProductVariantCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductVariantCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductVariantCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductVariantCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductVariantCreateManyProductInputEnvelope>;
};

export type ProductVariantCreateNestedOneWithoutAttributeValuesInput = {
  connect?: InputMaybe<ProductVariantWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductVariantCreateOrConnectWithoutAttributeValuesInput>;
  create?: InputMaybe<ProductVariantCreateWithoutAttributeValuesInput>;
};

export type ProductVariantCreateNestedOneWithoutBundlesInput = {
  connect?: InputMaybe<ProductVariantWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductVariantCreateOrConnectWithoutBundlesInput>;
  create?: InputMaybe<ProductVariantCreateWithoutBundlesInput>;
};

export type ProductVariantCreateOrConnectWithoutAttributeValuesInput = {
  create: ProductVariantCreateWithoutAttributeValuesInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantCreateOrConnectWithoutBundlesInput = {
  create: ProductVariantCreateWithoutBundlesInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantCreateOrConnectWithoutProductInput = {
  create: ProductVariantCreateWithoutProductInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantCreateWithoutAttributeValuesInput = {
  Bundles?: InputMaybe<BundleItemCreateNestedManyWithoutVariantInput>;
  Product: ProductCreateNestedOneWithoutVariantsInput;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantCreateWithoutBundlesInput = {
  AttributeValues?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutProductVariantInput>;
  Product: ProductCreateNestedOneWithoutVariantsInput;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantCreateWithoutProductInput = {
  AttributeValues?: InputMaybe<ProductVariantAttributeValueCreateNestedManyWithoutProductVariantInput>;
  Bundles?: InputMaybe<BundleItemCreateNestedManyWithoutVariantInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mrPrice?: InputMaybe<Scalars['Float']>;
  name?: InputMaybe<Scalars['String']>;
  unitPrice?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type ProductVariantListRelationFilter = {
  every?: InputMaybe<ProductVariantWhereInput>;
  none?: InputMaybe<ProductVariantWhereInput>;
  some?: InputMaybe<ProductVariantWhereInput>;
};

export type ProductVariantMaxAggregate = {
  __typename?: 'ProductVariantMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mrPrice?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductVariantMinAggregate = {
  __typename?: 'ProductVariantMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mrPrice?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  unitPrice?: Maybe<Scalars['Float']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type ProductVariantOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductVariantRelationFilter = {
  is?: InputMaybe<ProductVariantWhereInput>;
  isNot?: InputMaybe<ProductVariantWhereInput>;
};

export type ProductVariantScalarWhereInput = {
  AND?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  mrPrice?: InputMaybe<FloatNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  unitPrice?: InputMaybe<FloatNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductVariantSumAggregate = {
  __typename?: 'ProductVariantSumAggregate';
  mrPrice?: Maybe<Scalars['Float']>;
  unitPrice?: Maybe<Scalars['Float']>;
};

export type ProductVariantUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateManyWithWhereWithoutProductInput = {
  data: ProductVariantUpdateManyMutationInput;
  where: ProductVariantScalarWhereInput;
};

export type ProductVariantUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<ProductVariantCreateOrConnectWithoutProductInput>
  >;
  create?: InputMaybe<Array<ProductVariantCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductVariantCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  update?: InputMaybe<
    Array<ProductVariantUpdateWithWhereUniqueWithoutProductInput>
  >;
  updateMany?: InputMaybe<
    Array<ProductVariantUpdateManyWithWhereWithoutProductInput>
  >;
  upsert?: InputMaybe<
    Array<ProductVariantUpsertWithWhereUniqueWithoutProductInput>
  >;
};

export type ProductVariantUpdateOneWithoutAttributeValuesInput = {
  connect?: InputMaybe<ProductVariantWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductVariantCreateOrConnectWithoutAttributeValuesInput>;
  create?: InputMaybe<ProductVariantCreateWithoutAttributeValuesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductVariantUpdateWithoutAttributeValuesInput>;
  upsert?: InputMaybe<ProductVariantUpsertWithoutAttributeValuesInput>;
};

export type ProductVariantUpdateOneWithoutBundlesInput = {
  connect?: InputMaybe<ProductVariantWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductVariantCreateOrConnectWithoutBundlesInput>;
  create?: InputMaybe<ProductVariantCreateWithoutBundlesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductVariantUpdateWithoutBundlesInput>;
  upsert?: InputMaybe<ProductVariantUpsertWithoutBundlesInput>;
};

export type ProductVariantUpdateWithWhereUniqueWithoutProductInput = {
  data: ProductVariantUpdateWithoutProductInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpdateWithoutAttributeValuesInput = {
  Bundles?: InputMaybe<BundleItemUpdateManyWithoutVariantInput>;
  Product?: InputMaybe<ProductUpdateOneRequiredWithoutVariantsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateWithoutBundlesInput = {
  AttributeValues?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutProductVariantInput>;
  Product?: InputMaybe<ProductUpdateOneRequiredWithoutVariantsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateWithoutProductInput = {
  AttributeValues?: InputMaybe<ProductVariantAttributeValueUpdateManyWithoutProductVariantInput>;
  Bundles?: InputMaybe<BundleItemUpdateManyWithoutVariantInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mrPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unitPrice?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductVariantUpsertWithWhereUniqueWithoutProductInput = {
  create: ProductVariantCreateWithoutProductInput;
  update: ProductVariantUpdateWithoutProductInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpsertWithoutAttributeValuesInput = {
  create: ProductVariantCreateWithoutAttributeValuesInput;
  update: ProductVariantUpdateWithoutAttributeValuesInput;
};

export type ProductVariantUpsertWithoutBundlesInput = {
  create: ProductVariantCreateWithoutBundlesInput;
  update: ProductVariantUpdateWithoutBundlesInput;
};

export type ProductVariantWhereInput = {
  AND?: InputMaybe<Array<ProductVariantWhereInput>>;
  AttributeValues?: InputMaybe<ProductVariantAttributeValueListRelationFilter>;
  Bundles?: InputMaybe<BundleItemListRelationFilter>;
  NOT?: InputMaybe<Array<ProductVariantWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantWhereInput>>;
  Product?: InputMaybe<ProductRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  mrPrice?: InputMaybe<FloatNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  productId?: InputMaybe<StringFilter>;
  unitPrice?: InputMaybe<FloatNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type ProductVariantWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type ProductWhereInput = {
  AND?: InputMaybe<Array<ProductWhereInput>>;
  Assets?: InputMaybe<ProductAssetListRelationFilter>;
  AttributeValues?: InputMaybe<ProductAttributeValueListRelationFilter>;
  Brand?: InputMaybe<BrandRelationFilter>;
  Bundles?: InputMaybe<BundleListRelationFilter>;
  Category?: InputMaybe<CategoryRelationFilter>;
  CustomAttributeValues?: InputMaybe<ProductCustomAttributeValueListRelationFilter>;
  GeoLocations?: InputMaybe<ProductGeoLocationListRelationFilter>;
  NOT?: InputMaybe<Array<ProductWhereInput>>;
  OR?: InputMaybe<Array<ProductWhereInput>>;
  Variants?: InputMaybe<ProductVariantListRelationFilter>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceRelationFilter>;
  brandId?: InputMaybe<StringNullableFilter>;
  categoryId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  hsn?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isGeoRestricted?: InputMaybe<BoolNullableFilter>;
  isGstInclude?: InputMaybe<BoolNullableFilter>;
  isPriceVisible?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  listingExpiry?: InputMaybe<StringNullableFilter>;
  moq?: InputMaybe<IntNullableFilter>;
  mrPrice?: InputMaybe<FloatNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stock?: InputMaybe<IntNullableFilter>;
  tags?: InputMaybe<StringNullableFilter>;
  unitPrice?: InputMaybe<FloatNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workFlowContextInstanceId?: InputMaybe<StringNullableFilter>;
};

export type ProductWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type Query = {
  __typename?: 'Query';
  ProductDetailsAttributeList: Category;
  addresses: Array<AddressDto>;
  addressesCount: Scalars['Float'];
  attributes: AttributeType;
  brand: Brand;
  brands: Array<BrandListDto>;
  brandsCount: Scalars['Float'];
  categories: Array<CategoryHeaderDto>;
  configurations: Array<Configuration>;
  configurationsCount: Scalars['Float'];
  customer: Customer;
  customers: Array<CustomerDto>;
  customersCount: Scalars['Float'];
  geoLocations: Array<LocationModel>;
  kyc: Array<CustomerKyc>;
  products: Array<ProductDto>;
  productsCount: Scalars['Float'];
  roles: Array<Role>;
  rolesCount: Scalars['Float'];
  uptime: Scalars['Float'];
  user: User;
  userPreferences: Array<UserPreference>;
  users: Array<User>;
};

export type QueryProductDetailsAttributeListArgs = {
  where: CategoryWhereUniqueInput;
};

export type QueryAddressesArgs = {
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInputDto>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerAddressWhereInput>;
};

export type QueryAttributesArgs = {
  where: AttributeTypeWhereUniqueInput;
};

export type QueryBrandArgs = {
  where: BrandWhereUniqueInput;
};

export type QueryBrandsArgs = {
  orderBy?: InputMaybe<Array<BrandOrderByWithRelationInputDto>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BrandWhereInputDto>;
};

export type QueryBrandsCountArgs = {
  where: BrandWhereInputDto;
};

export type QueryCategoriesArgs = {
  orderBy?: InputMaybe<Array<CategoryHeaderOrderByWithRelationInputDto>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryHeaderWhereInputDto>;
};

export type QueryConfigurationsArgs = {
  orderBy?: InputMaybe<Array<ConfigurationOrderByWithRelationInputDto>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ConfigurationWhereInputDto>;
};

export type QueryConfigurationsCountArgs = {
  where: ConfigurationWhereInputDto;
};

export type QueryCustomerArgs = {
  where: CustomerWhereDetailInput;
};

export type QueryCustomersArgs = {
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInputDto>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInputDto>;
};

export type QueryCustomersCountArgs = {
  where: CustomerWhereInputDto;
};

export type QueryKycArgs = {
  where: KycGetInput;
};

export type QueryProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type QueryProductsCountArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type QueryRolesArgs = {
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInputDto>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RoleWhereInputDto>;
};

export type QueryRolesCountArgs = {
  where: RoleWhereInputDto;
};

export enum QueryMode {
  Default = 'default',
  Insensitive = 'insensitive',
}

export type RedeemUserPasswordResetLink = {
  __typename?: 'RedeemUserPasswordResetLink';
  isVerified: Scalars['Boolean'];
  message: Scalars['String'];
};

export type RedeemUserPasswordResetTokenInput = {
  password?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
};

export type ReviewInputDto = {
  reviewComments: Scalars['String'];
  reviewStatus: Scalars['String'];
};

export type Role = {
  __typename?: 'Role';
  RoleContext?: Maybe<RoleContext>;
  RolePermission?: Maybe<Array<RolePermission>>;
  UserRole?: Maybe<Array<UserRole>>;
  _count: RoleCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  displayName?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  roleContextId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['Int']>;
};

export type RoleAvgAggregate = {
  __typename?: 'RoleAvgAggregate';
  weight?: Maybe<Scalars['Float']>;
};

export type RoleContext = {
  __typename?: 'RoleContext';
  Role?: Maybe<Array<Role>>;
  _count: RoleContextCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type RoleContextCount = {
  __typename?: 'RoleContextCount';
  Role: Scalars['Int'];
};

export type RoleContextCountAggregate = {
  __typename?: 'RoleContextCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type RoleContextCreateNestedOneWithoutRoleInput = {
  connect?: InputMaybe<RoleContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleContextCreateOrConnectWithoutRoleInput>;
  create?: InputMaybe<RoleContextCreateWithoutRoleInput>;
};

export type RoleContextCreateOrConnectWithoutRoleInput = {
  create: RoleContextCreateWithoutRoleInput;
  where: RoleContextWhereUniqueInput;
};

export type RoleContextCreateWithoutRoleInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type RoleContextMaxAggregate = {
  __typename?: 'RoleContextMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type RoleContextMinAggregate = {
  __typename?: 'RoleContextMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type RoleContextRelationFilter = {
  is?: InputMaybe<RoleContextWhereInput>;
  isNot?: InputMaybe<RoleContextWhereInput>;
};

export type RoleContextUpdateOneWithoutRoleInput = {
  connect?: InputMaybe<RoleContextWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleContextCreateOrConnectWithoutRoleInput>;
  create?: InputMaybe<RoleContextCreateWithoutRoleInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<RoleContextUpdateWithoutRoleInput>;
  upsert?: InputMaybe<RoleContextUpsertWithoutRoleInput>;
};

export type RoleContextUpdateWithoutRoleInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RoleContextUpsertWithoutRoleInput = {
  create: RoleContextCreateWithoutRoleInput;
  update: RoleContextUpdateWithoutRoleInput;
};

export type RoleContextWhereInput = {
  AND?: InputMaybe<Array<RoleContextWhereInput>>;
  NOT?: InputMaybe<Array<RoleContextWhereInput>>;
  OR?: InputMaybe<Array<RoleContextWhereInput>>;
  Role?: InputMaybe<RoleListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type RoleContextWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type RoleCount = {
  __typename?: 'RoleCount';
  RolePermission: Scalars['Int'];
  UserRole: Scalars['Int'];
};

export type RoleCountAggregate = {
  __typename?: 'RoleCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  displayName: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  roleContextId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  weight: Scalars['Int'];
};

export type RoleCreateNestedOneWithoutRolePermissionInput = {
  connect?: InputMaybe<RoleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleCreateOrConnectWithoutRolePermissionInput>;
  create?: InputMaybe<RoleCreateWithoutRolePermissionInput>;
};

export type RoleCreateNestedOneWithoutUserRoleInput = {
  connect?: InputMaybe<RoleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleCreateOrConnectWithoutUserRoleInput>;
  create?: InputMaybe<RoleCreateWithoutUserRoleInput>;
};

export type RoleCreateOrConnectWithoutRolePermissionInput = {
  create: RoleCreateWithoutRolePermissionInput;
  where: RoleWhereUniqueInput;
};

export type RoleCreateOrConnectWithoutUserRoleInput = {
  create: RoleCreateWithoutUserRoleInput;
  where: RoleWhereUniqueInput;
};

export type RoleCreateWithoutRolePermissionInput = {
  RoleContext?: InputMaybe<RoleContextCreateNestedOneWithoutRoleInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutRoleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  displayName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  weight?: InputMaybe<Scalars['Int']>;
};

export type RoleCreateWithoutUserRoleInput = {
  RoleContext?: InputMaybe<RoleContextCreateNestedOneWithoutRoleInput>;
  RolePermission?: InputMaybe<RolePermissionCreateNestedManyWithoutRoleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  displayName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  weight?: InputMaybe<Scalars['Int']>;
};

export type RoleListRelationFilter = {
  every?: InputMaybe<RoleWhereInput>;
  none?: InputMaybe<RoleWhereInput>;
  some?: InputMaybe<RoleWhereInput>;
};

export type RoleMaxAggregate = {
  __typename?: 'RoleMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  displayName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  roleContextId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['Int']>;
};

export type RoleMinAggregate = {
  __typename?: 'RoleMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  displayName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  roleContextId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  weight?: Maybe<Scalars['Int']>;
};

export type RoleNameRoleContextIdCompoundUniqueInput = {
  name: Scalars['String'];
  roleContextId: Scalars['String'];
};

export type RoleOrderByWithRelationInputDto = {
  createdAt?: InputMaybe<SortOrder>;
  displayName?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  weight?: InputMaybe<SortOrder>;
};

export type RolePermission = {
  __typename?: 'RolePermission';
  Permission?: Maybe<Permission>;
  Role?: Maybe<Role>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  permissionId?: Maybe<Scalars['String']>;
  roleId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type RolePermissionCountAggregate = {
  __typename?: 'RolePermissionCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  permissionId: Scalars['Int'];
  roleId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type RolePermissionCreateManyPermissionInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  roleId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type RolePermissionCreateManyPermissionInputEnvelope = {
  data: Array<RolePermissionCreateManyPermissionInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RolePermissionCreateManyRoleInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  permissionId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type RolePermissionCreateManyRoleInputEnvelope = {
  data: Array<RolePermissionCreateManyRoleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RolePermissionCreateNestedManyWithoutPermissionInput = {
  connect?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<RolePermissionCreateOrConnectWithoutPermissionInput>
  >;
  create?: InputMaybe<Array<RolePermissionCreateWithoutPermissionInput>>;
  createMany?: InputMaybe<RolePermissionCreateManyPermissionInputEnvelope>;
};

export type RolePermissionCreateNestedManyWithoutRoleInput = {
  connect?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<RolePermissionCreateOrConnectWithoutRoleInput>
  >;
  create?: InputMaybe<Array<RolePermissionCreateWithoutRoleInput>>;
  createMany?: InputMaybe<RolePermissionCreateManyRoleInputEnvelope>;
};

export type RolePermissionCreateOrConnectWithoutPermissionInput = {
  create: RolePermissionCreateWithoutPermissionInput;
  where: RolePermissionWhereUniqueInput;
};

export type RolePermissionCreateOrConnectWithoutRoleInput = {
  create: RolePermissionCreateWithoutRoleInput;
  where: RolePermissionWhereUniqueInput;
};

export type RolePermissionCreateWithoutPermissionInput = {
  Role?: InputMaybe<RoleCreateNestedOneWithoutRolePermissionInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type RolePermissionCreateWithoutRoleInput = {
  Permission?: InputMaybe<PermissionCreateNestedOneWithoutRolePermissionInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type RolePermissionListRelationFilter = {
  every?: InputMaybe<RolePermissionWhereInput>;
  none?: InputMaybe<RolePermissionWhereInput>;
  some?: InputMaybe<RolePermissionWhereInput>;
};

export type RolePermissionMaxAggregate = {
  __typename?: 'RolePermissionMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  permissionId?: Maybe<Scalars['String']>;
  roleId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type RolePermissionMinAggregate = {
  __typename?: 'RolePermissionMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  permissionId?: Maybe<Scalars['String']>;
  roleId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type RolePermissionRoleIdPermissionIdCompoundUniqueInput = {
  permissionId: Scalars['String'];
  roleId: Scalars['String'];
};

export type RolePermissionScalarWhereInput = {
  AND?: InputMaybe<Array<RolePermissionScalarWhereInput>>;
  NOT?: InputMaybe<Array<RolePermissionScalarWhereInput>>;
  OR?: InputMaybe<Array<RolePermissionScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  permissionId?: InputMaybe<StringNullableFilter>;
  roleId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type RolePermissionUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RolePermissionUpdateManyWithWhereWithoutPermissionInput = {
  data: RolePermissionUpdateManyMutationInput;
  where: RolePermissionScalarWhereInput;
};

export type RolePermissionUpdateManyWithWhereWithoutRoleInput = {
  data: RolePermissionUpdateManyMutationInput;
  where: RolePermissionScalarWhereInput;
};

export type RolePermissionUpdateManyWithoutPermissionInput = {
  connect?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<RolePermissionCreateOrConnectWithoutPermissionInput>
  >;
  create?: InputMaybe<Array<RolePermissionCreateWithoutPermissionInput>>;
  createMany?: InputMaybe<RolePermissionCreateManyPermissionInputEnvelope>;
  delete?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<RolePermissionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  set?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  update?: InputMaybe<
    Array<RolePermissionUpdateWithWhereUniqueWithoutPermissionInput>
  >;
  updateMany?: InputMaybe<
    Array<RolePermissionUpdateManyWithWhereWithoutPermissionInput>
  >;
  upsert?: InputMaybe<
    Array<RolePermissionUpsertWithWhereUniqueWithoutPermissionInput>
  >;
};

export type RolePermissionUpdateManyWithoutRoleInput = {
  connect?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<RolePermissionCreateOrConnectWithoutRoleInput>
  >;
  create?: InputMaybe<Array<RolePermissionCreateWithoutRoleInput>>;
  createMany?: InputMaybe<RolePermissionCreateManyRoleInputEnvelope>;
  delete?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<RolePermissionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  set?: InputMaybe<Array<RolePermissionWhereUniqueInput>>;
  update?: InputMaybe<
    Array<RolePermissionUpdateWithWhereUniqueWithoutRoleInput>
  >;
  updateMany?: InputMaybe<
    Array<RolePermissionUpdateManyWithWhereWithoutRoleInput>
  >;
  upsert?: InputMaybe<
    Array<RolePermissionUpsertWithWhereUniqueWithoutRoleInput>
  >;
};

export type RolePermissionUpdateWithWhereUniqueWithoutPermissionInput = {
  data: RolePermissionUpdateWithoutPermissionInput;
  where: RolePermissionWhereUniqueInput;
};

export type RolePermissionUpdateWithWhereUniqueWithoutRoleInput = {
  data: RolePermissionUpdateWithoutRoleInput;
  where: RolePermissionWhereUniqueInput;
};

export type RolePermissionUpdateWithoutPermissionInput = {
  Role?: InputMaybe<RoleUpdateOneWithoutRolePermissionInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RolePermissionUpdateWithoutRoleInput = {
  Permission?: InputMaybe<PermissionUpdateOneWithoutRolePermissionInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RolePermissionUpsertWithWhereUniqueWithoutPermissionInput = {
  create: RolePermissionCreateWithoutPermissionInput;
  update: RolePermissionUpdateWithoutPermissionInput;
  where: RolePermissionWhereUniqueInput;
};

export type RolePermissionUpsertWithWhereUniqueWithoutRoleInput = {
  create: RolePermissionCreateWithoutRoleInput;
  update: RolePermissionUpdateWithoutRoleInput;
  where: RolePermissionWhereUniqueInput;
};

export type RolePermissionWhereInput = {
  AND?: InputMaybe<Array<RolePermissionWhereInput>>;
  NOT?: InputMaybe<Array<RolePermissionWhereInput>>;
  OR?: InputMaybe<Array<RolePermissionWhereInput>>;
  Permission?: InputMaybe<PermissionRelationFilter>;
  Role?: InputMaybe<RoleRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  permissionId?: InputMaybe<StringNullableFilter>;
  roleId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type RolePermissionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  roleId_permissionId?: InputMaybe<RolePermissionRoleIdPermissionIdCompoundUniqueInput>;
};

export type RoleRelationFilter = {
  is?: InputMaybe<RoleWhereInput>;
  isNot?: InputMaybe<RoleWhereInput>;
};

export type RoleSumAggregate = {
  __typename?: 'RoleSumAggregate';
  weight?: Maybe<Scalars['Int']>;
};

export type RoleUpdateOneWithoutRolePermissionInput = {
  connect?: InputMaybe<RoleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleCreateOrConnectWithoutRolePermissionInput>;
  create?: InputMaybe<RoleCreateWithoutRolePermissionInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<RoleUpdateWithoutRolePermissionInput>;
  upsert?: InputMaybe<RoleUpsertWithoutRolePermissionInput>;
};

export type RoleUpdateOneWithoutUserRoleInput = {
  connect?: InputMaybe<RoleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleCreateOrConnectWithoutUserRoleInput>;
  create?: InputMaybe<RoleCreateWithoutUserRoleInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<RoleUpdateWithoutUserRoleInput>;
  upsert?: InputMaybe<RoleUpsertWithoutUserRoleInput>;
};

export type RoleUpdateWithoutRolePermissionInput = {
  RoleContext?: InputMaybe<RoleContextUpdateOneWithoutRoleInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutRoleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  weight?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type RoleUpdateWithoutUserRoleInput = {
  RoleContext?: InputMaybe<RoleContextUpdateOneWithoutRoleInput>;
  RolePermission?: InputMaybe<RolePermissionUpdateManyWithoutRoleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  weight?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type RoleUpsertWithoutRolePermissionInput = {
  create: RoleCreateWithoutRolePermissionInput;
  update: RoleUpdateWithoutRolePermissionInput;
};

export type RoleUpsertWithoutUserRoleInput = {
  create: RoleCreateWithoutUserRoleInput;
  update: RoleUpdateWithoutUserRoleInput;
};

export type RoleWhereInput = {
  AND?: InputMaybe<Array<RoleWhereInput>>;
  NOT?: InputMaybe<Array<RoleWhereInput>>;
  OR?: InputMaybe<Array<RoleWhereInput>>;
  RoleContext?: InputMaybe<RoleContextRelationFilter>;
  RolePermission?: InputMaybe<RolePermissionListRelationFilter>;
  UserRole?: InputMaybe<UserRoleListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  roleContextId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  weight?: InputMaybe<IntNullableFilter>;
};

export type RoleWhereInputDto = {
  AND?: InputMaybe<Array<RoleWhereInputDto>>;
  NOT?: InputMaybe<Array<RoleWhereInputDto>>;
  OR?: InputMaybe<Array<RoleWhereInputDto>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  displayName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<UuidNullableFilterDto>;
  isActive?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  weight?: InputMaybe<IntNullableFilter>;
};

export type RoleWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  name_roleContextId?: InputMaybe<RoleNameRoleContextIdCompoundUniqueInput>;
};

export type SellerStore = {
  __typename?: 'SellerStore';
  Customer?: Maybe<Customer>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SellerStoreCountAggregate = {
  __typename?: 'SellerStoreCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  customerId: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  logoAssetId: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type SellerStoreCreateManyCustomerInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SellerStoreCreateManyCustomerInputEnvelope = {
  data: Array<SellerStoreCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type SellerStoreCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<SellerStoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<SellerStoreCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<SellerStoreCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<SellerStoreCreateManyCustomerInputEnvelope>;
};

export type SellerStoreCreateOrConnectWithoutCustomerInput = {
  create: SellerStoreCreateWithoutCustomerInput;
  where: SellerStoreWhereUniqueInput;
};

export type SellerStoreCreateWithoutCustomerInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SellerStoreListRelationFilter = {
  every?: InputMaybe<SellerStoreWhereInput>;
  none?: InputMaybe<SellerStoreWhereInput>;
  some?: InputMaybe<SellerStoreWhereInput>;
};

export type SellerStoreMaxAggregate = {
  __typename?: 'SellerStoreMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SellerStoreMinAggregate = {
  __typename?: 'SellerStoreMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  logoAssetId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SellerStoreOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SellerStoreScalarWhereInput = {
  AND?: InputMaybe<Array<SellerStoreScalarWhereInput>>;
  NOT?: InputMaybe<Array<SellerStoreScalarWhereInput>>;
  OR?: InputMaybe<Array<SellerStoreScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  logoAssetId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SellerStoreUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SellerStoreUpdateManyWithWhereWithoutCustomerInput = {
  data: SellerStoreUpdateManyMutationInput;
  where: SellerStoreScalarWhereInput;
};

export type SellerStoreUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<SellerStoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<SellerStoreCreateOrConnectWithoutCustomerInput>
  >;
  create?: InputMaybe<Array<SellerStoreCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<SellerStoreCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<SellerStoreWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SellerStoreScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SellerStoreWhereUniqueInput>>;
  set?: InputMaybe<Array<SellerStoreWhereUniqueInput>>;
  update?: InputMaybe<
    Array<SellerStoreUpdateWithWhereUniqueWithoutCustomerInput>
  >;
  updateMany?: InputMaybe<
    Array<SellerStoreUpdateManyWithWhereWithoutCustomerInput>
  >;
  upsert?: InputMaybe<
    Array<SellerStoreUpsertWithWhereUniqueWithoutCustomerInput>
  >;
};

export type SellerStoreUpdateWithWhereUniqueWithoutCustomerInput = {
  data: SellerStoreUpdateWithoutCustomerInput;
  where: SellerStoreWhereUniqueInput;
};

export type SellerStoreUpdateWithoutCustomerInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  logoAssetId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SellerStoreUpsertWithWhereUniqueWithoutCustomerInput = {
  create: SellerStoreCreateWithoutCustomerInput;
  update: SellerStoreUpdateWithoutCustomerInput;
  where: SellerStoreWhereUniqueInput;
};

export type SellerStoreWhereInput = {
  AND?: InputMaybe<Array<SellerStoreWhereInput>>;
  Customer?: InputMaybe<CustomerRelationFilter>;
  NOT?: InputMaybe<Array<SellerStoreWhereInput>>;
  OR?: InputMaybe<Array<SellerStoreWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  logoAssetId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SellerStoreWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type SendOtp = {
  __typename?: 'SendOTP';
  isSend: Scalars['Boolean'];
  message?: Maybe<Scalars['String']>;
  otp?: Maybe<Scalars['String']>;
  secondsLeft?: Maybe<Scalars['Float']>;
};

export type SendOtpInput = {
  phone: Scalars['String'];
};

export type SendUserPasswordResetLink = {
  __typename?: 'SendUserPasswordResetLink';
  isSuccess?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
};

export type SendUserPasswordResetLinkInput = {
  email: Scalars['String'];
};

export type Session = {
  __typename?: 'Session';
  AuthenticationStrategy?: Maybe<AuthenticationStrategy>;
  User?: Maybe<User>;
  authenticationStrategyId: Scalars['String'];
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresOn?: Maybe<Scalars['DateTime']>;
  id: Scalars['ID'];
  refreshToken?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId: Scalars['String'];
};

export type SessionCountAggregate = {
  __typename?: 'SessionCountAggregate';
  _all: Scalars['Int'];
  authenticationStrategyId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  expiresOn: Scalars['Int'];
  id: Scalars['Int'];
  refreshToken: Scalars['Int'];
  token: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type SessionCreateManyAuthenticationStrategyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  expiresOn?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId: Scalars['String'];
};

export type SessionCreateManyAuthenticationStrategyInputEnvelope = {
  data: Array<SessionCreateManyAuthenticationStrategyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type SessionCreateManyUserInput = {
  authenticationStrategyId: Scalars['String'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  expiresOn?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SessionCreateManyUserInputEnvelope = {
  data: Array<SessionCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type SessionCreateNestedManyWithoutAuthenticationStrategyInput = {
  connect?: InputMaybe<Array<SessionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<SessionCreateOrConnectWithoutAuthenticationStrategyInput>
  >;
  create?: InputMaybe<Array<SessionCreateWithoutAuthenticationStrategyInput>>;
  createMany?: InputMaybe<SessionCreateManyAuthenticationStrategyInputEnvelope>;
};

export type SessionCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<SessionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SessionCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<SessionCreateWithoutUserInput>>;
  createMany?: InputMaybe<SessionCreateManyUserInputEnvelope>;
};

export type SessionCreateOrConnectWithoutAuthenticationStrategyInput = {
  create: SessionCreateWithoutAuthenticationStrategyInput;
  where: SessionWhereUniqueInput;
};

export type SessionCreateOrConnectWithoutUserInput = {
  create: SessionCreateWithoutUserInput;
  where: SessionWhereUniqueInput;
};

export type SessionCreateWithoutAuthenticationStrategyInput = {
  User?: InputMaybe<UserCreateNestedOneWithoutSessionsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  expiresOn?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SessionCreateWithoutUserInput = {
  AuthenticationStrategy?: InputMaybe<AuthenticationStrategyCreateNestedOneWithoutUserSessionInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  expiresOn?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  refreshToken?: InputMaybe<Scalars['String']>;
  token?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SessionListRelationFilter = {
  every?: InputMaybe<SessionWhereInput>;
  none?: InputMaybe<SessionWhereInput>;
  some?: InputMaybe<SessionWhereInput>;
};

export type SessionMaxAggregate = {
  __typename?: 'SessionMaxAggregate';
  authenticationStrategyId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresOn?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  refreshToken?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type SessionMinAggregate = {
  __typename?: 'SessionMinAggregate';
  authenticationStrategyId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresOn?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  refreshToken?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type SessionScalarWhereInput = {
  AND?: InputMaybe<Array<SessionScalarWhereInput>>;
  NOT?: InputMaybe<Array<SessionScalarWhereInput>>;
  OR?: InputMaybe<Array<SessionScalarWhereInput>>;
  authenticationStrategyId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  expiresOn?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  refreshToken?: InputMaybe<StringNullableFilter>;
  token?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringFilter>;
};

export type SessionUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiresOn?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  refreshToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  token?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SessionUpdateManyWithWhereWithoutAuthenticationStrategyInput = {
  data: SessionUpdateManyMutationInput;
  where: SessionScalarWhereInput;
};

export type SessionUpdateManyWithWhereWithoutUserInput = {
  data: SessionUpdateManyMutationInput;
  where: SessionScalarWhereInput;
};

export type SessionUpdateManyWithoutAuthenticationStrategyInput = {
  connect?: InputMaybe<Array<SessionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<SessionCreateOrConnectWithoutAuthenticationStrategyInput>
  >;
  create?: InputMaybe<Array<SessionCreateWithoutAuthenticationStrategyInput>>;
  createMany?: InputMaybe<SessionCreateManyAuthenticationStrategyInputEnvelope>;
  delete?: InputMaybe<Array<SessionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SessionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SessionWhereUniqueInput>>;
  set?: InputMaybe<Array<SessionWhereUniqueInput>>;
  update?: InputMaybe<
    Array<SessionUpdateWithWhereUniqueWithoutAuthenticationStrategyInput>
  >;
  updateMany?: InputMaybe<
    Array<SessionUpdateManyWithWhereWithoutAuthenticationStrategyInput>
  >;
  upsert?: InputMaybe<
    Array<SessionUpsertWithWhereUniqueWithoutAuthenticationStrategyInput>
  >;
};

export type SessionUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<SessionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SessionCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<SessionCreateWithoutUserInput>>;
  createMany?: InputMaybe<SessionCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<SessionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SessionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SessionWhereUniqueInput>>;
  set?: InputMaybe<Array<SessionWhereUniqueInput>>;
  update?: InputMaybe<Array<SessionUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<SessionUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<SessionUpsertWithWhereUniqueWithoutUserInput>>;
};

export type SessionUpdateWithWhereUniqueWithoutAuthenticationStrategyInput = {
  data: SessionUpdateWithoutAuthenticationStrategyInput;
  where: SessionWhereUniqueInput;
};

export type SessionUpdateWithWhereUniqueWithoutUserInput = {
  data: SessionUpdateWithoutUserInput;
  where: SessionWhereUniqueInput;
};

export type SessionUpdateWithoutAuthenticationStrategyInput = {
  User?: InputMaybe<UserUpdateOneWithoutSessionsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiresOn?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  refreshToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  token?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SessionUpdateWithoutUserInput = {
  AuthenticationStrategy?: InputMaybe<AuthenticationStrategyUpdateOneWithoutUserSessionInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiresOn?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  refreshToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  token?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SessionUpsertWithWhereUniqueWithoutAuthenticationStrategyInput = {
  create: SessionCreateWithoutAuthenticationStrategyInput;
  update: SessionUpdateWithoutAuthenticationStrategyInput;
  where: SessionWhereUniqueInput;
};

export type SessionUpsertWithWhereUniqueWithoutUserInput = {
  create: SessionCreateWithoutUserInput;
  update: SessionUpdateWithoutUserInput;
  where: SessionWhereUniqueInput;
};

export type SessionWhereInput = {
  AND?: InputMaybe<Array<SessionWhereInput>>;
  AuthenticationStrategy?: InputMaybe<AuthenticationStrategyRelationFilter>;
  NOT?: InputMaybe<Array<SessionWhereInput>>;
  OR?: InputMaybe<Array<SessionWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  authenticationStrategyId?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  expiresOn?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  refreshToken?: InputMaybe<StringNullableFilter>;
  token?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringFilter>;
};

export type SessionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc',
}

export type StringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export type StringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type StringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<Scalars['String']>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlan = {
  __typename?: 'SubscriptionPlan';
  Customer?: Maybe<Array<Customer>>;
  EnrollmentPayment?: Maybe<Array<EnrollmentPayment>>;
  SubscriptionPlanAttributeValue?: Maybe<Array<SubscriptionPlanAttributeValue>>;
  SubscriptionPlanPermission?: Maybe<Array<SubscriptionPlanPermission>>;
  SubscriptionPlanPricing?: Maybe<SubscriptionPlanPricing>;
  _count: SubscriptionPlanCount;
  applicableDays?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  planEndDate?: Maybe<Scalars['DateTime']>;
  planStartDate?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanAttribute = {
  __typename?: 'SubscriptionPlanAttribute';
  SubscriptionPlanAttributeValue?: Maybe<Array<SubscriptionPlanAttributeValue>>;
  _count: SubscriptionPlanAttributeCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeCount = {
  __typename?: 'SubscriptionPlanAttributeCount';
  SubscriptionPlanAttributeValue: Scalars['Int'];
};

export type SubscriptionPlanAttributeCountAggregate = {
  __typename?: 'SubscriptionPlanAttributeCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type SubscriptionPlanAttributeCreateNestedOneWithoutSubscriptionPlanAttributeValueInput =
  {
    connect?: InputMaybe<SubscriptionPlanAttributeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<SubscriptionPlanAttributeCreateOrConnectWithoutSubscriptionPlanAttributeValueInput>;
    create?: InputMaybe<SubscriptionPlanAttributeCreateWithoutSubscriptionPlanAttributeValueInput>;
  };

export type SubscriptionPlanAttributeCreateOrConnectWithoutSubscriptionPlanAttributeValueInput =
  {
    create: SubscriptionPlanAttributeCreateWithoutSubscriptionPlanAttributeValueInput;
    where: SubscriptionPlanAttributeWhereUniqueInput;
  };

export type SubscriptionPlanAttributeCreateWithoutSubscriptionPlanAttributeValueInput =
  {
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    description?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    name?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type SubscriptionPlanAttributeMaxAggregate = {
  __typename?: 'SubscriptionPlanAttributeMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeMinAggregate = {
  __typename?: 'SubscriptionPlanAttributeMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeRelationFilter = {
  is?: InputMaybe<SubscriptionPlanAttributeWhereInput>;
  isNot?: InputMaybe<SubscriptionPlanAttributeWhereInput>;
};

export type SubscriptionPlanAttributeUpdateOneWithoutSubscriptionPlanAttributeValueInput =
  {
    connect?: InputMaybe<SubscriptionPlanAttributeWhereUniqueInput>;
    connectOrCreate?: InputMaybe<SubscriptionPlanAttributeCreateOrConnectWithoutSubscriptionPlanAttributeValueInput>;
    create?: InputMaybe<SubscriptionPlanAttributeCreateWithoutSubscriptionPlanAttributeValueInput>;
    delete?: InputMaybe<Scalars['Boolean']>;
    disconnect?: InputMaybe<Scalars['Boolean']>;
    update?: InputMaybe<SubscriptionPlanAttributeUpdateWithoutSubscriptionPlanAttributeValueInput>;
    upsert?: InputMaybe<SubscriptionPlanAttributeUpsertWithoutSubscriptionPlanAttributeValueInput>;
  };

export type SubscriptionPlanAttributeUpdateWithoutSubscriptionPlanAttributeValueInput =
  {
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type SubscriptionPlanAttributeUpsertWithoutSubscriptionPlanAttributeValueInput =
  {
    create: SubscriptionPlanAttributeCreateWithoutSubscriptionPlanAttributeValueInput;
    update: SubscriptionPlanAttributeUpdateWithoutSubscriptionPlanAttributeValueInput;
  };

export type SubscriptionPlanAttributeValue = {
  __typename?: 'SubscriptionPlanAttributeValue';
  SubscriptionPlan?: Maybe<SubscriptionPlan>;
  SubscriptionPlanAttribute?: Maybe<SubscriptionPlanAttribute>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  subscriptionPlanAttributeId?: Maybe<Scalars['String']>;
  subscriptionPlanAttributeValue?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeValueCountAggregate = {
  __typename?: 'SubscriptionPlanAttributeValueCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  subscriptionPlanAttributeId: Scalars['Int'];
  subscriptionPlanAttributeValue: Scalars['Int'];
  subscriptionPlanId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type SubscriptionPlanAttributeValueCreateManySubscriptionPlanInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  subscriptionPlanAttributeId?: InputMaybe<Scalars['String']>;
  subscriptionPlanAttributeValue?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeValueCreateManySubscriptionPlanInputEnvelope =
  {
    data: Array<SubscriptionPlanAttributeValueCreateManySubscriptionPlanInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type SubscriptionPlanAttributeValueCreateNestedManyWithoutSubscriptionPlanInput =
  {
    connect?: InputMaybe<Array<SubscriptionPlanAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<SubscriptionPlanAttributeValueCreateOrConnectWithoutSubscriptionPlanInput>
    >;
    create?: InputMaybe<
      Array<SubscriptionPlanAttributeValueCreateWithoutSubscriptionPlanInput>
    >;
    createMany?: InputMaybe<SubscriptionPlanAttributeValueCreateManySubscriptionPlanInputEnvelope>;
  };

export type SubscriptionPlanAttributeValueCreateOrConnectWithoutSubscriptionPlanInput =
  {
    create: SubscriptionPlanAttributeValueCreateWithoutSubscriptionPlanInput;
    where: SubscriptionPlanAttributeValueWhereUniqueInput;
  };

export type SubscriptionPlanAttributeValueCreateWithoutSubscriptionPlanInput = {
  SubscriptionPlanAttribute?: InputMaybe<SubscriptionPlanAttributeCreateNestedOneWithoutSubscriptionPlanAttributeValueInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  subscriptionPlanAttributeValue?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeValueListRelationFilter = {
  every?: InputMaybe<SubscriptionPlanAttributeValueWhereInput>;
  none?: InputMaybe<SubscriptionPlanAttributeValueWhereInput>;
  some?: InputMaybe<SubscriptionPlanAttributeValueWhereInput>;
};

export type SubscriptionPlanAttributeValueMaxAggregate = {
  __typename?: 'SubscriptionPlanAttributeValueMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  subscriptionPlanAttributeId?: Maybe<Scalars['String']>;
  subscriptionPlanAttributeValue?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeValueMinAggregate = {
  __typename?: 'SubscriptionPlanAttributeValueMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  subscriptionPlanAttributeId?: Maybe<Scalars['String']>;
  subscriptionPlanAttributeValue?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeValueOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SubscriptionPlanAttributeValueScalarWhereInput = {
  AND?: InputMaybe<Array<SubscriptionPlanAttributeValueScalarWhereInput>>;
  NOT?: InputMaybe<Array<SubscriptionPlanAttributeValueScalarWhereInput>>;
  OR?: InputMaybe<Array<SubscriptionPlanAttributeValueScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  subscriptionPlanAttributeId?: InputMaybe<StringNullableFilter>;
  subscriptionPlanAttributeValue?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SubscriptionPlanAttributeValueUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  subscriptionPlanAttributeValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanAttributeValueUpdateManyWithWhereWithoutSubscriptionPlanInput =
  {
    data: SubscriptionPlanAttributeValueUpdateManyMutationInput;
    where: SubscriptionPlanAttributeValueScalarWhereInput;
  };

export type SubscriptionPlanAttributeValueUpdateManyWithoutSubscriptionPlanInput =
  {
    connect?: InputMaybe<Array<SubscriptionPlanAttributeValueWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<SubscriptionPlanAttributeValueCreateOrConnectWithoutSubscriptionPlanInput>
    >;
    create?: InputMaybe<
      Array<SubscriptionPlanAttributeValueCreateWithoutSubscriptionPlanInput>
    >;
    createMany?: InputMaybe<SubscriptionPlanAttributeValueCreateManySubscriptionPlanInputEnvelope>;
    delete?: InputMaybe<Array<SubscriptionPlanAttributeValueWhereUniqueInput>>;
    deleteMany?: InputMaybe<
      Array<SubscriptionPlanAttributeValueScalarWhereInput>
    >;
    disconnect?: InputMaybe<
      Array<SubscriptionPlanAttributeValueWhereUniqueInput>
    >;
    set?: InputMaybe<Array<SubscriptionPlanAttributeValueWhereUniqueInput>>;
    update?: InputMaybe<
      Array<SubscriptionPlanAttributeValueUpdateWithWhereUniqueWithoutSubscriptionPlanInput>
    >;
    updateMany?: InputMaybe<
      Array<SubscriptionPlanAttributeValueUpdateManyWithWhereWithoutSubscriptionPlanInput>
    >;
    upsert?: InputMaybe<
      Array<SubscriptionPlanAttributeValueUpsertWithWhereUniqueWithoutSubscriptionPlanInput>
    >;
  };

export type SubscriptionPlanAttributeValueUpdateWithWhereUniqueWithoutSubscriptionPlanInput =
  {
    data: SubscriptionPlanAttributeValueUpdateWithoutSubscriptionPlanInput;
    where: SubscriptionPlanAttributeValueWhereUniqueInput;
  };

export type SubscriptionPlanAttributeValueUpdateWithoutSubscriptionPlanInput = {
  SubscriptionPlanAttribute?: InputMaybe<SubscriptionPlanAttributeUpdateOneWithoutSubscriptionPlanAttributeValueInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  subscriptionPlanAttributeValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanAttributeValueUpsertWithWhereUniqueWithoutSubscriptionPlanInput =
  {
    create: SubscriptionPlanAttributeValueCreateWithoutSubscriptionPlanInput;
    update: SubscriptionPlanAttributeValueUpdateWithoutSubscriptionPlanInput;
    where: SubscriptionPlanAttributeValueWhereUniqueInput;
  };

export type SubscriptionPlanAttributeValueWhereInput = {
  AND?: InputMaybe<Array<SubscriptionPlanAttributeValueWhereInput>>;
  NOT?: InputMaybe<Array<SubscriptionPlanAttributeValueWhereInput>>;
  OR?: InputMaybe<Array<SubscriptionPlanAttributeValueWhereInput>>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanRelationFilter>;
  SubscriptionPlanAttribute?: InputMaybe<SubscriptionPlanAttributeRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  subscriptionPlanAttributeId?: InputMaybe<StringNullableFilter>;
  subscriptionPlanAttributeValue?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SubscriptionPlanAttributeValueWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanAttributeWhereInput = {
  AND?: InputMaybe<Array<SubscriptionPlanAttributeWhereInput>>;
  NOT?: InputMaybe<Array<SubscriptionPlanAttributeWhereInput>>;
  OR?: InputMaybe<Array<SubscriptionPlanAttributeWhereInput>>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SubscriptionPlanAttributeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanAvgAggregate = {
  __typename?: 'SubscriptionPlanAvgAggregate';
  applicableDays?: Maybe<Scalars['Float']>;
};

export type SubscriptionPlanCount = {
  __typename?: 'SubscriptionPlanCount';
  Customer: Scalars['Int'];
  EnrollmentPayment: Scalars['Int'];
  SubscriptionPlanAttributeValue: Scalars['Int'];
  SubscriptionPlanPermission: Scalars['Int'];
};

export type SubscriptionPlanCountAggregate = {
  __typename?: 'SubscriptionPlanCountAggregate';
  _all: Scalars['Int'];
  applicableDays: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  planEndDate: Scalars['Int'];
  planStartDate: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type SubscriptionPlanCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<SubscriptionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SubscriptionPlanCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<SubscriptionPlanCreateWithoutCustomerInput>;
};

export type SubscriptionPlanCreateNestedOneWithoutEnrollmentPaymentInput = {
  connect?: InputMaybe<SubscriptionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SubscriptionPlanCreateOrConnectWithoutEnrollmentPaymentInput>;
  create?: InputMaybe<SubscriptionPlanCreateWithoutEnrollmentPaymentInput>;
};

export type SubscriptionPlanCreateNestedOneWithoutSubscriptionPlanPermissionInput =
  {
    connect?: InputMaybe<SubscriptionPlanWhereUniqueInput>;
    connectOrCreate?: InputMaybe<SubscriptionPlanCreateOrConnectWithoutSubscriptionPlanPermissionInput>;
    create?: InputMaybe<SubscriptionPlanCreateWithoutSubscriptionPlanPermissionInput>;
  };

export type SubscriptionPlanCreateOrConnectWithoutCustomerInput = {
  create: SubscriptionPlanCreateWithoutCustomerInput;
  where: SubscriptionPlanWhereUniqueInput;
};

export type SubscriptionPlanCreateOrConnectWithoutEnrollmentPaymentInput = {
  create: SubscriptionPlanCreateWithoutEnrollmentPaymentInput;
  where: SubscriptionPlanWhereUniqueInput;
};

export type SubscriptionPlanCreateOrConnectWithoutSubscriptionPlanPermissionInput =
  {
    create: SubscriptionPlanCreateWithoutSubscriptionPlanPermissionInput;
    where: SubscriptionPlanWhereUniqueInput;
  };

export type SubscriptionPlanCreateWithoutCustomerInput = {
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingCreateNestedOneWithoutSubscriptionPlanInput>;
  applicableDays?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  planEndDate?: InputMaybe<Scalars['DateTime']>;
  planStartDate?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanCreateWithoutEnrollmentPaymentInput = {
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingCreateNestedOneWithoutSubscriptionPlanInput>;
  applicableDays?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  planEndDate?: InputMaybe<Scalars['DateTime']>;
  planStartDate?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanCreateWithoutSubscriptionPlanPermissionInput = {
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutSubscriptionPlanInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueCreateNestedManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingCreateNestedOneWithoutSubscriptionPlanInput>;
  applicableDays?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  planEndDate?: InputMaybe<Scalars['DateTime']>;
  planStartDate?: InputMaybe<Scalars['DateTime']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanMaxAggregate = {
  __typename?: 'SubscriptionPlanMaxAggregate';
  applicableDays?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  planEndDate?: Maybe<Scalars['DateTime']>;
  planStartDate?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanMinAggregate = {
  __typename?: 'SubscriptionPlanMinAggregate';
  applicableDays?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  planEndDate?: Maybe<Scalars['DateTime']>;
  planStartDate?: Maybe<Scalars['DateTime']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanOrderByWithRelationInput = {
  Customer?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentOrderByRelationAggregateInput>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueOrderByRelationAggregateInput>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionOrderByRelationAggregateInput>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingOrderByWithRelationInput>;
  applicableDays?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  planEndDate?: InputMaybe<SortOrder>;
  planStartDate?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type SubscriptionPlanPermission = {
  __typename?: 'SubscriptionPlanPermission';
  Permission?: Maybe<Permission>;
  SubscriptionPlan?: Maybe<SubscriptionPlan>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  permissionId?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanPermissionCountAggregate = {
  __typename?: 'SubscriptionPlanPermissionCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  permissionId: Scalars['Int'];
  subscriptionPlanId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type SubscriptionPlanPermissionCreateManyPermissionInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanPermissionCreateManyPermissionInputEnvelope = {
  data: Array<SubscriptionPlanPermissionCreateManyPermissionInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type SubscriptionPlanPermissionCreateManySubscriptionPlanInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  permissionId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanPermissionCreateManySubscriptionPlanInputEnvelope =
  {
    data: Array<SubscriptionPlanPermissionCreateManySubscriptionPlanInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type SubscriptionPlanPermissionCreateNestedManyWithoutPermissionInput = {
  connect?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<SubscriptionPlanPermissionCreateOrConnectWithoutPermissionInput>
  >;
  create?: InputMaybe<
    Array<SubscriptionPlanPermissionCreateWithoutPermissionInput>
  >;
  createMany?: InputMaybe<SubscriptionPlanPermissionCreateManyPermissionInputEnvelope>;
};

export type SubscriptionPlanPermissionCreateNestedManyWithoutSubscriptionPlanInput =
  {
    connect?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<SubscriptionPlanPermissionCreateOrConnectWithoutSubscriptionPlanInput>
    >;
    create?: InputMaybe<
      Array<SubscriptionPlanPermissionCreateWithoutSubscriptionPlanInput>
    >;
    createMany?: InputMaybe<SubscriptionPlanPermissionCreateManySubscriptionPlanInputEnvelope>;
  };

export type SubscriptionPlanPermissionCreateOrConnectWithoutPermissionInput = {
  create: SubscriptionPlanPermissionCreateWithoutPermissionInput;
  where: SubscriptionPlanPermissionWhereUniqueInput;
};

export type SubscriptionPlanPermissionCreateOrConnectWithoutSubscriptionPlanInput =
  {
    create: SubscriptionPlanPermissionCreateWithoutSubscriptionPlanInput;
    where: SubscriptionPlanPermissionWhereUniqueInput;
  };

export type SubscriptionPlanPermissionCreateWithoutPermissionInput = {
  SubscriptionPlan?: InputMaybe<SubscriptionPlanCreateNestedOneWithoutSubscriptionPlanPermissionInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanPermissionCreateWithoutSubscriptionPlanInput = {
  Permission?: InputMaybe<PermissionCreateNestedOneWithoutSubscriptionPlanPermissionInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanPermissionListRelationFilter = {
  every?: InputMaybe<SubscriptionPlanPermissionWhereInput>;
  none?: InputMaybe<SubscriptionPlanPermissionWhereInput>;
  some?: InputMaybe<SubscriptionPlanPermissionWhereInput>;
};

export type SubscriptionPlanPermissionMaxAggregate = {
  __typename?: 'SubscriptionPlanPermissionMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  permissionId?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanPermissionMinAggregate = {
  __typename?: 'SubscriptionPlanPermissionMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  permissionId?: Maybe<Scalars['String']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanPermissionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SubscriptionPlanPermissionScalarWhereInput = {
  AND?: InputMaybe<Array<SubscriptionPlanPermissionScalarWhereInput>>;
  NOT?: InputMaybe<Array<SubscriptionPlanPermissionScalarWhereInput>>;
  OR?: InputMaybe<Array<SubscriptionPlanPermissionScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  permissionId?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SubscriptionPlanPermissionSubscriptionPlanIdPermissionIdCompoundUniqueInput =
  {
    permissionId: Scalars['String'];
    subscriptionPlanId: Scalars['String'];
  };

export type SubscriptionPlanPermissionUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanPermissionUpdateManyWithWhereWithoutPermissionInput =
  {
    data: SubscriptionPlanPermissionUpdateManyMutationInput;
    where: SubscriptionPlanPermissionScalarWhereInput;
  };

export type SubscriptionPlanPermissionUpdateManyWithWhereWithoutSubscriptionPlanInput =
  {
    data: SubscriptionPlanPermissionUpdateManyMutationInput;
    where: SubscriptionPlanPermissionScalarWhereInput;
  };

export type SubscriptionPlanPermissionUpdateManyWithoutPermissionInput = {
  connect?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<SubscriptionPlanPermissionCreateOrConnectWithoutPermissionInput>
  >;
  create?: InputMaybe<
    Array<SubscriptionPlanPermissionCreateWithoutPermissionInput>
  >;
  createMany?: InputMaybe<SubscriptionPlanPermissionCreateManyPermissionInputEnvelope>;
  delete?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SubscriptionPlanPermissionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  set?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  update?: InputMaybe<
    Array<SubscriptionPlanPermissionUpdateWithWhereUniqueWithoutPermissionInput>
  >;
  updateMany?: InputMaybe<
    Array<SubscriptionPlanPermissionUpdateManyWithWhereWithoutPermissionInput>
  >;
  upsert?: InputMaybe<
    Array<SubscriptionPlanPermissionUpsertWithWhereUniqueWithoutPermissionInput>
  >;
};

export type SubscriptionPlanPermissionUpdateManyWithoutSubscriptionPlanInput = {
  connect?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<SubscriptionPlanPermissionCreateOrConnectWithoutSubscriptionPlanInput>
  >;
  create?: InputMaybe<
    Array<SubscriptionPlanPermissionCreateWithoutSubscriptionPlanInput>
  >;
  createMany?: InputMaybe<SubscriptionPlanPermissionCreateManySubscriptionPlanInputEnvelope>;
  delete?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SubscriptionPlanPermissionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  set?: InputMaybe<Array<SubscriptionPlanPermissionWhereUniqueInput>>;
  update?: InputMaybe<
    Array<SubscriptionPlanPermissionUpdateWithWhereUniqueWithoutSubscriptionPlanInput>
  >;
  updateMany?: InputMaybe<
    Array<SubscriptionPlanPermissionUpdateManyWithWhereWithoutSubscriptionPlanInput>
  >;
  upsert?: InputMaybe<
    Array<SubscriptionPlanPermissionUpsertWithWhereUniqueWithoutSubscriptionPlanInput>
  >;
};

export type SubscriptionPlanPermissionUpdateWithWhereUniqueWithoutPermissionInput =
  {
    data: SubscriptionPlanPermissionUpdateWithoutPermissionInput;
    where: SubscriptionPlanPermissionWhereUniqueInput;
  };

export type SubscriptionPlanPermissionUpdateWithWhereUniqueWithoutSubscriptionPlanInput =
  {
    data: SubscriptionPlanPermissionUpdateWithoutSubscriptionPlanInput;
    where: SubscriptionPlanPermissionWhereUniqueInput;
  };

export type SubscriptionPlanPermissionUpdateWithoutPermissionInput = {
  SubscriptionPlan?: InputMaybe<SubscriptionPlanUpdateOneWithoutSubscriptionPlanPermissionInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanPermissionUpdateWithoutSubscriptionPlanInput = {
  Permission?: InputMaybe<PermissionUpdateOneWithoutSubscriptionPlanPermissionInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanPermissionUpsertWithWhereUniqueWithoutPermissionInput =
  {
    create: SubscriptionPlanPermissionCreateWithoutPermissionInput;
    update: SubscriptionPlanPermissionUpdateWithoutPermissionInput;
    where: SubscriptionPlanPermissionWhereUniqueInput;
  };

export type SubscriptionPlanPermissionUpsertWithWhereUniqueWithoutSubscriptionPlanInput =
  {
    create: SubscriptionPlanPermissionCreateWithoutSubscriptionPlanInput;
    update: SubscriptionPlanPermissionUpdateWithoutSubscriptionPlanInput;
    where: SubscriptionPlanPermissionWhereUniqueInput;
  };

export type SubscriptionPlanPermissionWhereInput = {
  AND?: InputMaybe<Array<SubscriptionPlanPermissionWhereInput>>;
  NOT?: InputMaybe<Array<SubscriptionPlanPermissionWhereInput>>;
  OR?: InputMaybe<Array<SubscriptionPlanPermissionWhereInput>>;
  Permission?: InputMaybe<PermissionRelationFilter>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  permissionId?: InputMaybe<StringNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SubscriptionPlanPermissionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  subscriptionPlanId_permissionId?: InputMaybe<SubscriptionPlanPermissionSubscriptionPlanIdPermissionIdCompoundUniqueInput>;
};

export type SubscriptionPlanPricing = {
  __typename?: 'SubscriptionPlanPricing';
  SubscriptionPlan?: Maybe<SubscriptionPlan>;
  additionalCharge?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  subscriptionCharge?: Maybe<Scalars['Float']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanPricingAvgAggregate = {
  __typename?: 'SubscriptionPlanPricingAvgAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  subscriptionCharge?: Maybe<Scalars['Float']>;
};

export type SubscriptionPlanPricingCountAggregate = {
  __typename?: 'SubscriptionPlanPricingCountAggregate';
  _all: Scalars['Int'];
  additionalCharge: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  subscriptionCharge: Scalars['Int'];
  subscriptionPlanId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type SubscriptionPlanPricingCreateNestedOneWithoutSubscriptionPlanInput =
  {
    connect?: InputMaybe<SubscriptionPlanPricingWhereUniqueInput>;
    connectOrCreate?: InputMaybe<SubscriptionPlanPricingCreateOrConnectWithoutSubscriptionPlanInput>;
    create?: InputMaybe<SubscriptionPlanPricingCreateWithoutSubscriptionPlanInput>;
  };

export type SubscriptionPlanPricingCreateOrConnectWithoutSubscriptionPlanInput =
  {
    create: SubscriptionPlanPricingCreateWithoutSubscriptionPlanInput;
    where: SubscriptionPlanPricingWhereUniqueInput;
  };

export type SubscriptionPlanPricingCreateWithoutSubscriptionPlanInput = {
  additionalCharge?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  subscriptionCharge?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanPricingMaxAggregate = {
  __typename?: 'SubscriptionPlanPricingMaxAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  subscriptionCharge?: Maybe<Scalars['Float']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanPricingMinAggregate = {
  __typename?: 'SubscriptionPlanPricingMinAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  subscriptionCharge?: Maybe<Scalars['Float']>;
  subscriptionPlanId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type SubscriptionPlanPricingOrderByWithRelationInput = {
  SubscriptionPlan?: InputMaybe<SubscriptionPlanOrderByWithRelationInput>;
  additionalCharge?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  subscriptionCharge?: InputMaybe<SortOrder>;
  subscriptionPlanId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type SubscriptionPlanPricingRelationFilter = {
  is?: InputMaybe<SubscriptionPlanPricingWhereInput>;
  isNot?: InputMaybe<SubscriptionPlanPricingWhereInput>;
};

export type SubscriptionPlanPricingSumAggregate = {
  __typename?: 'SubscriptionPlanPricingSumAggregate';
  additionalCharge?: Maybe<Scalars['Float']>;
  subscriptionCharge?: Maybe<Scalars['Float']>;
};

export type SubscriptionPlanPricingUpdateOneWithoutSubscriptionPlanInput = {
  connect?: InputMaybe<SubscriptionPlanPricingWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SubscriptionPlanPricingCreateOrConnectWithoutSubscriptionPlanInput>;
  create?: InputMaybe<SubscriptionPlanPricingCreateWithoutSubscriptionPlanInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<SubscriptionPlanPricingUpdateWithoutSubscriptionPlanInput>;
  upsert?: InputMaybe<SubscriptionPlanPricingUpsertWithoutSubscriptionPlanInput>;
};

export type SubscriptionPlanPricingUpdateWithoutSubscriptionPlanInput = {
  additionalCharge?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  subscriptionCharge?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanPricingUpsertWithoutSubscriptionPlanInput = {
  create: SubscriptionPlanPricingCreateWithoutSubscriptionPlanInput;
  update: SubscriptionPlanPricingUpdateWithoutSubscriptionPlanInput;
};

export type SubscriptionPlanPricingWhereInput = {
  AND?: InputMaybe<Array<SubscriptionPlanPricingWhereInput>>;
  NOT?: InputMaybe<Array<SubscriptionPlanPricingWhereInput>>;
  OR?: InputMaybe<Array<SubscriptionPlanPricingWhereInput>>;
  SubscriptionPlan?: InputMaybe<SubscriptionPlanRelationFilter>;
  additionalCharge?: InputMaybe<FloatNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  subscriptionCharge?: InputMaybe<FloatNullableFilter>;
  subscriptionPlanId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SubscriptionPlanPricingWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  subscriptionPlanId?: InputMaybe<Scalars['String']>;
};

export type SubscriptionPlanRelationFilter = {
  is?: InputMaybe<SubscriptionPlanWhereInput>;
  isNot?: InputMaybe<SubscriptionPlanWhereInput>;
};

export type SubscriptionPlanSumAggregate = {
  __typename?: 'SubscriptionPlanSumAggregate';
  applicableDays?: Maybe<Scalars['Int']>;
};

export type SubscriptionPlanUpdateOneWithoutCustomerInput = {
  connect?: InputMaybe<SubscriptionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SubscriptionPlanCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<SubscriptionPlanCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<SubscriptionPlanUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<SubscriptionPlanUpsertWithoutCustomerInput>;
};

export type SubscriptionPlanUpdateOneWithoutEnrollmentPaymentInput = {
  connect?: InputMaybe<SubscriptionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SubscriptionPlanCreateOrConnectWithoutEnrollmentPaymentInput>;
  create?: InputMaybe<SubscriptionPlanCreateWithoutEnrollmentPaymentInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<SubscriptionPlanUpdateWithoutEnrollmentPaymentInput>;
  upsert?: InputMaybe<SubscriptionPlanUpsertWithoutEnrollmentPaymentInput>;
};

export type SubscriptionPlanUpdateOneWithoutSubscriptionPlanPermissionInput = {
  connect?: InputMaybe<SubscriptionPlanWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SubscriptionPlanCreateOrConnectWithoutSubscriptionPlanPermissionInput>;
  create?: InputMaybe<SubscriptionPlanCreateWithoutSubscriptionPlanPermissionInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<SubscriptionPlanUpdateWithoutSubscriptionPlanPermissionInput>;
  upsert?: InputMaybe<SubscriptionPlanUpsertWithoutSubscriptionPlanPermissionInput>;
};

export type SubscriptionPlanUpdateWithoutCustomerInput = {
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingUpdateOneWithoutSubscriptionPlanInput>;
  applicableDays?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planEndDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  planStartDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanUpdateWithoutEnrollmentPaymentInput = {
  Customer?: InputMaybe<CustomerUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingUpdateOneWithoutSubscriptionPlanInput>;
  applicableDays?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planEndDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  planStartDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanUpdateWithoutSubscriptionPlanPermissionInput = {
  Customer?: InputMaybe<CustomerUpdateManyWithoutSubscriptionPlanInput>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueUpdateManyWithoutSubscriptionPlanInput>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingUpdateOneWithoutSubscriptionPlanInput>;
  applicableDays?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  planEndDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  planStartDate?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SubscriptionPlanUpsertWithoutCustomerInput = {
  create: SubscriptionPlanCreateWithoutCustomerInput;
  update: SubscriptionPlanUpdateWithoutCustomerInput;
};

export type SubscriptionPlanUpsertWithoutEnrollmentPaymentInput = {
  create: SubscriptionPlanCreateWithoutEnrollmentPaymentInput;
  update: SubscriptionPlanUpdateWithoutEnrollmentPaymentInput;
};

export type SubscriptionPlanUpsertWithoutSubscriptionPlanPermissionInput = {
  create: SubscriptionPlanCreateWithoutSubscriptionPlanPermissionInput;
  update: SubscriptionPlanUpdateWithoutSubscriptionPlanPermissionInput;
};

export type SubscriptionPlanWhereInput = {
  AND?: InputMaybe<Array<SubscriptionPlanWhereInput>>;
  Customer?: InputMaybe<CustomerListRelationFilter>;
  EnrollmentPayment?: InputMaybe<EnrollmentPaymentListRelationFilter>;
  NOT?: InputMaybe<Array<SubscriptionPlanWhereInput>>;
  OR?: InputMaybe<Array<SubscriptionPlanWhereInput>>;
  SubscriptionPlanAttributeValue?: InputMaybe<SubscriptionPlanAttributeValueListRelationFilter>;
  SubscriptionPlanPermission?: InputMaybe<SubscriptionPlanPermissionListRelationFilter>;
  SubscriptionPlanPricing?: InputMaybe<SubscriptionPlanPricingRelationFilter>;
  applicableDays?: InputMaybe<IntNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  planEndDate?: InputMaybe<DateTimeNullableFilter>;
  planStartDate?: InputMaybe<DateTimeNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type SubscriptionPlanWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type SuccessOutputDto = {
  __typename?: 'SuccessOutputDTO';
  isSuccess?: Maybe<Scalars['Boolean']>;
};

export type UuidNullableFilterDto = {
  equals?: InputMaybe<Scalars['String']>;
};

export type UpdateAddressInputDto = {
  addressLine1?: InputMaybe<Scalars['String']>;
  addressLine2?: InputMaybe<Scalars['String']>;
  addressLine3?: InputMaybe<Scalars['String']>;
  alternatePhone?: InputMaybe<Scalars['String']>;
  contactName?: InputMaybe<Scalars['String']>;
  defaultBilling?: InputMaybe<Scalars['Boolean']>;
  defaultShipping?: InputMaybe<Scalars['Boolean']>;
  district?: InputMaybe<Scalars['String']>;
  gstin?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  landmark?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
  pincode?: InputMaybe<Scalars['String']>;
  shopName?: InputMaybe<Scalars['String']>;
  state?: InputMaybe<Scalars['String']>;
};

export type UpdateBrandInputDto = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isGeoRestricted?: InputMaybe<Scalars['Boolean']>;
  isPriceVisible?: InputMaybe<Scalars['Boolean']>;
  logoAssetId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  relationId?: InputMaybe<Scalars['String']>;
  relationshiptype?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UpdateCustomerDto = {
  attributes: Array<CustomerAttributeArray>;
  buisnessType?: InputMaybe<Scalars['String']>;
  customerId: Scalars['String'];
  customerName?: InputMaybe<Scalars['String']>;
  userName?: InputMaybe<Scalars['String']>;
};

export type UpdateLocationDto = {
  Geolocation: Array<LocationAttributeArray>;
};

export type User = {
  __typename?: 'User';
  AuthenticationStrategies?: Maybe<Array<UserAuthenticationStrategy>>;
  Customers?: Maybe<Array<CustomerUser>>;
  EventLog?: Maybe<Array<EventLog>>;
  NotificationLog?: Maybe<Array<NotificationLog>>;
  Sessions?: Maybe<Array<Session>>;
  UserAsset?: Maybe<Array<UserAsset>>;
  UserMobileToken?: Maybe<Array<UserMobileToken>>;
  UserPreference?: Maybe<Array<UserPreference>>;
  UserRole?: Maybe<Array<UserRole>>;
  _count: UserCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  failedLoginAttempt?: Maybe<Scalars['Int']>;
  failedLoginTime?: Maybe<Scalars['DateTime']>;
  fullName?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isEmailVerified?: Maybe<Scalars['Boolean']>;
  isLocked?: Maybe<Scalars['Boolean']>;
  isProfileUpdated?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  phone: Scalars['String'];
  resendAttempt?: Maybe<Scalars['Int']>;
  resendTime?: Maybe<Scalars['DateTime']>;
  shortName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type UserAsset = {
  __typename?: 'UserAsset';
  Asset?: Maybe<Asset>;
  User?: Maybe<User>;
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  internalName?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserAssetCountAggregate = {
  __typename?: 'UserAssetCountAggregate';
  _all: Scalars['Int'];
  assetId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  internalName: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type UserAssetCreateManyAssetInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type UserAssetCreateManyAssetInputEnvelope = {
  data: Array<UserAssetCreateManyAssetInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserAssetCreateManyUserInput = {
  assetId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserAssetCreateManyUserInputEnvelope = {
  data: Array<UserAssetCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserAssetCreateNestedManyWithoutAssetInput = {
  connect?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<UserAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<UserAssetCreateManyAssetInputEnvelope>;
};

export type UserAssetCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserAssetCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<UserAssetCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserAssetCreateManyUserInputEnvelope>;
};

export type UserAssetCreateOrConnectWithoutAssetInput = {
  create: UserAssetCreateWithoutAssetInput;
  where: UserAssetWhereUniqueInput;
};

export type UserAssetCreateOrConnectWithoutUserInput = {
  create: UserAssetCreateWithoutUserInput;
  where: UserAssetWhereUniqueInput;
};

export type UserAssetCreateWithoutAssetInput = {
  User?: InputMaybe<UserCreateNestedOneWithoutUserAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserAssetCreateWithoutUserInput = {
  Asset?: InputMaybe<AssetCreateNestedOneWithoutUserAssetInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  internalName?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserAssetListRelationFilter = {
  every?: InputMaybe<UserAssetWhereInput>;
  none?: InputMaybe<UserAssetWhereInput>;
  some?: InputMaybe<UserAssetWhereInput>;
};

export type UserAssetMaxAggregate = {
  __typename?: 'UserAssetMaxAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserAssetMinAggregate = {
  __typename?: 'UserAssetMinAggregate';
  assetId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  internalName?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserAssetNameUserIdAssetIdCompoundUniqueInput = {
  assetId: Scalars['String'];
  name: Scalars['String'];
  userId: Scalars['String'];
};

export type UserAssetOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type UserAssetScalarWhereInput = {
  AND?: InputMaybe<Array<UserAssetScalarWhereInput>>;
  NOT?: InputMaybe<Array<UserAssetScalarWhereInput>>;
  OR?: InputMaybe<Array<UserAssetScalarWhereInput>>;
  assetId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserAssetUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserAssetUpdateManyWithWhereWithoutAssetInput = {
  data: UserAssetUpdateManyMutationInput;
  where: UserAssetScalarWhereInput;
};

export type UserAssetUpdateManyWithWhereWithoutUserInput = {
  data: UserAssetUpdateManyMutationInput;
  where: UserAssetScalarWhereInput;
};

export type UserAssetUpdateManyWithoutAssetInput = {
  connect?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserAssetCreateOrConnectWithoutAssetInput>
  >;
  create?: InputMaybe<Array<UserAssetCreateWithoutAssetInput>>;
  createMany?: InputMaybe<UserAssetCreateManyAssetInputEnvelope>;
  delete?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  update?: InputMaybe<Array<UserAssetUpdateWithWhereUniqueWithoutAssetInput>>;
  updateMany?: InputMaybe<Array<UserAssetUpdateManyWithWhereWithoutAssetInput>>;
  upsert?: InputMaybe<Array<UserAssetUpsertWithWhereUniqueWithoutAssetInput>>;
};

export type UserAssetUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserAssetCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<UserAssetCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserAssetCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserAssetScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  set?: InputMaybe<Array<UserAssetWhereUniqueInput>>;
  update?: InputMaybe<Array<UserAssetUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<UserAssetUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<UserAssetUpsertWithWhereUniqueWithoutUserInput>>;
};

export type UserAssetUpdateWithWhereUniqueWithoutAssetInput = {
  data: UserAssetUpdateWithoutAssetInput;
  where: UserAssetWhereUniqueInput;
};

export type UserAssetUpdateWithWhereUniqueWithoutUserInput = {
  data: UserAssetUpdateWithoutUserInput;
  where: UserAssetWhereUniqueInput;
};

export type UserAssetUpdateWithoutAssetInput = {
  User?: InputMaybe<UserUpdateOneWithoutUserAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserAssetUpdateWithoutUserInput = {
  Asset?: InputMaybe<AssetUpdateOneWithoutUserAssetInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  internalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserAssetUpsertWithWhereUniqueWithoutAssetInput = {
  create: UserAssetCreateWithoutAssetInput;
  update: UserAssetUpdateWithoutAssetInput;
  where: UserAssetWhereUniqueInput;
};

export type UserAssetUpsertWithWhereUniqueWithoutUserInput = {
  create: UserAssetCreateWithoutUserInput;
  update: UserAssetUpdateWithoutUserInput;
  where: UserAssetWhereUniqueInput;
};

export type UserAssetWhereInput = {
  AND?: InputMaybe<Array<UserAssetWhereInput>>;
  Asset?: InputMaybe<AssetRelationFilter>;
  NOT?: InputMaybe<Array<UserAssetWhereInput>>;
  OR?: InputMaybe<Array<UserAssetWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  assetId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  internalName?: InputMaybe<StringNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserAssetWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name_userId_assetId?: InputMaybe<UserAssetNameUserIdAssetIdCompoundUniqueInput>;
};

export type UserAuthenticationStrategy = {
  __typename?: 'UserAuthenticationStrategy';
  AuthenticationStrategy: AuthenticationStrategy;
  User: User;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresWithin?: Maybe<Scalars['DateTime']>;
  externalIdentifier?: Maybe<Scalars['String']>;
  isFirstLogin?: Maybe<Scalars['Boolean']>;
  passwordHash?: Maybe<Scalars['String']>;
  passwordResetToken?: Maybe<Scalars['String']>;
  strategyId: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId: Scalars['String'];
  verificationToken?: Maybe<Scalars['String']>;
};

export type UserAuthenticationStrategyCountAggregate = {
  __typename?: 'UserAuthenticationStrategyCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  expiresWithin: Scalars['Int'];
  externalIdentifier: Scalars['Int'];
  isFirstLogin: Scalars['Int'];
  passwordHash: Scalars['Int'];
  passwordResetToken: Scalars['Int'];
  strategyId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
  verificationToken: Scalars['Int'];
};

export type UserAuthenticationStrategyCreateManyAuthenticationStrategyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  expiresWithin?: InputMaybe<Scalars['DateTime']>;
  externalIdentifier?: InputMaybe<Scalars['String']>;
  isFirstLogin?: InputMaybe<Scalars['Boolean']>;
  passwordHash?: InputMaybe<Scalars['String']>;
  passwordResetToken?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId: Scalars['String'];
  verificationToken?: InputMaybe<Scalars['String']>;
};

export type UserAuthenticationStrategyCreateManyAuthenticationStrategyInputEnvelope =
  {
    data: Array<UserAuthenticationStrategyCreateManyAuthenticationStrategyInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type UserAuthenticationStrategyCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  expiresWithin?: InputMaybe<Scalars['DateTime']>;
  externalIdentifier?: InputMaybe<Scalars['String']>;
  isFirstLogin?: InputMaybe<Scalars['Boolean']>;
  passwordHash?: InputMaybe<Scalars['String']>;
  passwordResetToken?: InputMaybe<Scalars['String']>;
  strategyId: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  verificationToken?: InputMaybe<Scalars['String']>;
};

export type UserAuthenticationStrategyCreateManyUserInputEnvelope = {
  data: Array<UserAuthenticationStrategyCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserAuthenticationStrategyCreateNestedManyWithoutAuthenticationStrategyInput =
  {
    connect?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<UserAuthenticationStrategyCreateOrConnectWithoutAuthenticationStrategyInput>
    >;
    create?: InputMaybe<
      Array<UserAuthenticationStrategyCreateWithoutAuthenticationStrategyInput>
    >;
    createMany?: InputMaybe<UserAuthenticationStrategyCreateManyAuthenticationStrategyInputEnvelope>;
  };

export type UserAuthenticationStrategyCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserAuthenticationStrategyCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<UserAuthenticationStrategyCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserAuthenticationStrategyCreateManyUserInputEnvelope>;
};

export type UserAuthenticationStrategyCreateOrConnectWithoutAuthenticationStrategyInput =
  {
    create: UserAuthenticationStrategyCreateWithoutAuthenticationStrategyInput;
    where: UserAuthenticationStrategyWhereUniqueInput;
  };

export type UserAuthenticationStrategyCreateOrConnectWithoutUserInput = {
  create: UserAuthenticationStrategyCreateWithoutUserInput;
  where: UserAuthenticationStrategyWhereUniqueInput;
};

export type UserAuthenticationStrategyCreateWithoutAuthenticationStrategyInput =
  {
    User: UserCreateNestedOneWithoutAuthenticationStrategiesInput;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    expiresWithin?: InputMaybe<Scalars['DateTime']>;
    externalIdentifier?: InputMaybe<Scalars['String']>;
    isFirstLogin?: InputMaybe<Scalars['Boolean']>;
    passwordHash?: InputMaybe<Scalars['String']>;
    passwordResetToken?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
    verificationToken?: InputMaybe<Scalars['String']>;
  };

export type UserAuthenticationStrategyCreateWithoutUserInput = {
  AuthenticationStrategy: AuthenticationStrategyCreateNestedOneWithoutUsersInput;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  expiresWithin?: InputMaybe<Scalars['DateTime']>;
  externalIdentifier?: InputMaybe<Scalars['String']>;
  isFirstLogin?: InputMaybe<Scalars['Boolean']>;
  passwordHash?: InputMaybe<Scalars['String']>;
  passwordResetToken?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  verificationToken?: InputMaybe<Scalars['String']>;
};

export type UserAuthenticationStrategyListRelationFilter = {
  every?: InputMaybe<UserAuthenticationStrategyWhereInput>;
  none?: InputMaybe<UserAuthenticationStrategyWhereInput>;
  some?: InputMaybe<UserAuthenticationStrategyWhereInput>;
};

export type UserAuthenticationStrategyMaxAggregate = {
  __typename?: 'UserAuthenticationStrategyMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresWithin?: Maybe<Scalars['DateTime']>;
  externalIdentifier?: Maybe<Scalars['String']>;
  isFirstLogin?: Maybe<Scalars['Boolean']>;
  passwordHash?: Maybe<Scalars['String']>;
  passwordResetToken?: Maybe<Scalars['String']>;
  strategyId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  verificationToken?: Maybe<Scalars['String']>;
};

export type UserAuthenticationStrategyMinAggregate = {
  __typename?: 'UserAuthenticationStrategyMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresWithin?: Maybe<Scalars['DateTime']>;
  externalIdentifier?: Maybe<Scalars['String']>;
  isFirstLogin?: Maybe<Scalars['Boolean']>;
  passwordHash?: Maybe<Scalars['String']>;
  passwordResetToken?: Maybe<Scalars['String']>;
  strategyId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  verificationToken?: Maybe<Scalars['String']>;
};

export type UserAuthenticationStrategyScalarWhereInput = {
  AND?: InputMaybe<Array<UserAuthenticationStrategyScalarWhereInput>>;
  NOT?: InputMaybe<Array<UserAuthenticationStrategyScalarWhereInput>>;
  OR?: InputMaybe<Array<UserAuthenticationStrategyScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  expiresWithin?: InputMaybe<DateTimeNullableFilter>;
  externalIdentifier?: InputMaybe<StringNullableFilter>;
  isFirstLogin?: InputMaybe<BoolNullableFilter>;
  passwordHash?: InputMaybe<StringNullableFilter>;
  passwordResetToken?: InputMaybe<StringNullableFilter>;
  strategyId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringFilter>;
  verificationToken?: InputMaybe<StringNullableFilter>;
};

export type UserAuthenticationStrategyStrategyIdUserIdCompoundUniqueInput = {
  strategyId: Scalars['String'];
  userId: Scalars['String'];
};

export type UserAuthenticationStrategyUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiresWithin?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalIdentifier?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isFirstLogin?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  passwordHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  passwordResetToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  verificationToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserAuthenticationStrategyUpdateManyWithWhereWithoutAuthenticationStrategyInput =
  {
    data: UserAuthenticationStrategyUpdateManyMutationInput;
    where: UserAuthenticationStrategyScalarWhereInput;
  };

export type UserAuthenticationStrategyUpdateManyWithWhereWithoutUserInput = {
  data: UserAuthenticationStrategyUpdateManyMutationInput;
  where: UserAuthenticationStrategyScalarWhereInput;
};

export type UserAuthenticationStrategyUpdateManyWithoutAuthenticationStrategyInput =
  {
    connect?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<UserAuthenticationStrategyCreateOrConnectWithoutAuthenticationStrategyInput>
    >;
    create?: InputMaybe<
      Array<UserAuthenticationStrategyCreateWithoutAuthenticationStrategyInput>
    >;
    createMany?: InputMaybe<UserAuthenticationStrategyCreateManyAuthenticationStrategyInputEnvelope>;
    delete?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
    deleteMany?: InputMaybe<Array<UserAuthenticationStrategyScalarWhereInput>>;
    disconnect?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
    set?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
    update?: InputMaybe<
      Array<UserAuthenticationStrategyUpdateWithWhereUniqueWithoutAuthenticationStrategyInput>
    >;
    updateMany?: InputMaybe<
      Array<UserAuthenticationStrategyUpdateManyWithWhereWithoutAuthenticationStrategyInput>
    >;
    upsert?: InputMaybe<
      Array<UserAuthenticationStrategyUpsertWithWhereUniqueWithoutAuthenticationStrategyInput>
    >;
  };

export type UserAuthenticationStrategyUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserAuthenticationStrategyCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<UserAuthenticationStrategyCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserAuthenticationStrategyCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserAuthenticationStrategyScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
  set?: InputMaybe<Array<UserAuthenticationStrategyWhereUniqueInput>>;
  update?: InputMaybe<
    Array<UserAuthenticationStrategyUpdateWithWhereUniqueWithoutUserInput>
  >;
  updateMany?: InputMaybe<
    Array<UserAuthenticationStrategyUpdateManyWithWhereWithoutUserInput>
  >;
  upsert?: InputMaybe<
    Array<UserAuthenticationStrategyUpsertWithWhereUniqueWithoutUserInput>
  >;
};

export type UserAuthenticationStrategyUpdateWithWhereUniqueWithoutAuthenticationStrategyInput =
  {
    data: UserAuthenticationStrategyUpdateWithoutAuthenticationStrategyInput;
    where: UserAuthenticationStrategyWhereUniqueInput;
  };

export type UserAuthenticationStrategyUpdateWithWhereUniqueWithoutUserInput = {
  data: UserAuthenticationStrategyUpdateWithoutUserInput;
  where: UserAuthenticationStrategyWhereUniqueInput;
};

export type UserAuthenticationStrategyUpdateWithoutAuthenticationStrategyInput =
  {
    User?: InputMaybe<UserUpdateOneRequiredWithoutAuthenticationStrategiesInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    expiresWithin?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    externalIdentifier?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    isFirstLogin?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    passwordHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    passwordResetToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    verificationToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type UserAuthenticationStrategyUpdateWithoutUserInput = {
  AuthenticationStrategy?: InputMaybe<AuthenticationStrategyUpdateOneRequiredWithoutUsersInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expiresWithin?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  externalIdentifier?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  isFirstLogin?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  passwordHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  passwordResetToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  verificationToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserAuthenticationStrategyUpsertWithWhereUniqueWithoutAuthenticationStrategyInput =
  {
    create: UserAuthenticationStrategyCreateWithoutAuthenticationStrategyInput;
    update: UserAuthenticationStrategyUpdateWithoutAuthenticationStrategyInput;
    where: UserAuthenticationStrategyWhereUniqueInput;
  };

export type UserAuthenticationStrategyUpsertWithWhereUniqueWithoutUserInput = {
  create: UserAuthenticationStrategyCreateWithoutUserInput;
  update: UserAuthenticationStrategyUpdateWithoutUserInput;
  where: UserAuthenticationStrategyWhereUniqueInput;
};

export type UserAuthenticationStrategyWhereInput = {
  AND?: InputMaybe<Array<UserAuthenticationStrategyWhereInput>>;
  AuthenticationStrategy?: InputMaybe<AuthenticationStrategyRelationFilter>;
  NOT?: InputMaybe<Array<UserAuthenticationStrategyWhereInput>>;
  OR?: InputMaybe<Array<UserAuthenticationStrategyWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  expiresWithin?: InputMaybe<DateTimeNullableFilter>;
  externalIdentifier?: InputMaybe<StringNullableFilter>;
  isFirstLogin?: InputMaybe<BoolNullableFilter>;
  passwordHash?: InputMaybe<StringNullableFilter>;
  passwordResetToken?: InputMaybe<StringNullableFilter>;
  strategyId?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringFilter>;
  verificationToken?: InputMaybe<StringNullableFilter>;
};

export type UserAuthenticationStrategyWhereUniqueInput = {
  strategyId_userId?: InputMaybe<UserAuthenticationStrategyStrategyIdUserIdCompoundUniqueInput>;
};

export type UserAvgAggregate = {
  __typename?: 'UserAvgAggregate';
  failedLoginAttempt?: Maybe<Scalars['Float']>;
  resendAttempt?: Maybe<Scalars['Float']>;
};

export type UserCount = {
  __typename?: 'UserCount';
  AuthenticationStrategies: Scalars['Int'];
  Customers: Scalars['Int'];
  EventLog: Scalars['Int'];
  NotificationLog: Scalars['Int'];
  Sessions: Scalars['Int'];
  UserAsset: Scalars['Int'];
  UserMobileToken: Scalars['Int'];
  UserPreference: Scalars['Int'];
  UserRole: Scalars['Int'];
};

export type UserCountAggregate = {
  __typename?: 'UserCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  email: Scalars['Int'];
  failedLoginAttempt: Scalars['Int'];
  failedLoginTime: Scalars['Int'];
  fullName: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isEmailVerified: Scalars['Int'];
  isLocked: Scalars['Int'];
  isProfileUpdated: Scalars['Int'];
  isRemoved: Scalars['Int'];
  phone: Scalars['Int'];
  resendAttempt: Scalars['Int'];
  resendTime: Scalars['Int'];
  shortName: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type UserCreateNestedOneWithoutAuthenticationStrategiesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAuthenticationStrategiesInput>;
  create?: InputMaybe<UserCreateWithoutAuthenticationStrategiesInput>;
};

export type UserCreateNestedOneWithoutCustomersInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<UserCreateWithoutCustomersInput>;
};

export type UserCreateNestedOneWithoutSessionsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutSessionsInput>;
  create?: InputMaybe<UserCreateWithoutSessionsInput>;
};

export type UserCreateNestedOneWithoutUserAssetInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutUserAssetInput>;
  create?: InputMaybe<UserCreateWithoutUserAssetInput>;
};

export type UserCreateNestedOneWithoutUserPreferenceInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutUserPreferenceInput>;
  create?: InputMaybe<UserCreateWithoutUserPreferenceInput>;
};

export type UserCreateNestedOneWithoutUserRoleInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutUserRoleInput>;
  create?: InputMaybe<UserCreateWithoutUserRoleInput>;
};

export type UserCreateOrConnectWithoutAuthenticationStrategiesInput = {
  create: UserCreateWithoutAuthenticationStrategiesInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutCustomersInput = {
  create: UserCreateWithoutCustomersInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutSessionsInput = {
  create: UserCreateWithoutSessionsInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutUserAssetInput = {
  create: UserCreateWithoutUserAssetInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutUserPreferenceInput = {
  create: UserCreateWithoutUserPreferenceInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutUserRoleInput = {
  create: UserCreateWithoutUserRoleInput;
  where: UserWhereUniqueInput;
};

export type UserCreateWithoutAuthenticationStrategiesInput = {
  Customers?: InputMaybe<CustomerUserCreateNestedManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogCreateNestedManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogCreateNestedManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionCreateNestedManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenCreateNestedManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  failedLoginAttempt?: InputMaybe<Scalars['Int']>;
  failedLoginTime?: InputMaybe<Scalars['DateTime']>;
  fullName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isEmailVerified?: InputMaybe<Scalars['Boolean']>;
  isLocked?: InputMaybe<Scalars['Boolean']>;
  isProfileUpdated?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  phone: Scalars['String'];
  resendAttempt?: InputMaybe<Scalars['Int']>;
  resendTime?: InputMaybe<Scalars['DateTime']>;
  shortName?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserCreateWithoutCustomersInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyCreateNestedManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogCreateNestedManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogCreateNestedManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionCreateNestedManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenCreateNestedManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  failedLoginAttempt?: InputMaybe<Scalars['Int']>;
  failedLoginTime?: InputMaybe<Scalars['DateTime']>;
  fullName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isEmailVerified?: InputMaybe<Scalars['Boolean']>;
  isLocked?: InputMaybe<Scalars['Boolean']>;
  isProfileUpdated?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  phone: Scalars['String'];
  resendAttempt?: InputMaybe<Scalars['Int']>;
  resendTime?: InputMaybe<Scalars['DateTime']>;
  shortName?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserCreateWithoutSessionsInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyCreateNestedManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserCreateNestedManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogCreateNestedManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogCreateNestedManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenCreateNestedManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  failedLoginAttempt?: InputMaybe<Scalars['Int']>;
  failedLoginTime?: InputMaybe<Scalars['DateTime']>;
  fullName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isEmailVerified?: InputMaybe<Scalars['Boolean']>;
  isLocked?: InputMaybe<Scalars['Boolean']>;
  isProfileUpdated?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  phone: Scalars['String'];
  resendAttempt?: InputMaybe<Scalars['Int']>;
  resendTime?: InputMaybe<Scalars['DateTime']>;
  shortName?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserCreateWithoutUserAssetInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyCreateNestedManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserCreateNestedManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogCreateNestedManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogCreateNestedManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionCreateNestedManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenCreateNestedManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  failedLoginAttempt?: InputMaybe<Scalars['Int']>;
  failedLoginTime?: InputMaybe<Scalars['DateTime']>;
  fullName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isEmailVerified?: InputMaybe<Scalars['Boolean']>;
  isLocked?: InputMaybe<Scalars['Boolean']>;
  isProfileUpdated?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  phone: Scalars['String'];
  resendAttempt?: InputMaybe<Scalars['Int']>;
  resendTime?: InputMaybe<Scalars['DateTime']>;
  shortName?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserCreateWithoutUserPreferenceInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyCreateNestedManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserCreateNestedManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogCreateNestedManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogCreateNestedManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionCreateNestedManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenCreateNestedManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  failedLoginAttempt?: InputMaybe<Scalars['Int']>;
  failedLoginTime?: InputMaybe<Scalars['DateTime']>;
  fullName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isEmailVerified?: InputMaybe<Scalars['Boolean']>;
  isLocked?: InputMaybe<Scalars['Boolean']>;
  isProfileUpdated?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  phone: Scalars['String'];
  resendAttempt?: InputMaybe<Scalars['Int']>;
  resendTime?: InputMaybe<Scalars['DateTime']>;
  shortName?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserCreateWithoutUserRoleInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyCreateNestedManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserCreateNestedManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogCreateNestedManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogCreateNestedManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionCreateNestedManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetCreateNestedManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenCreateNestedManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  email?: InputMaybe<Scalars['String']>;
  failedLoginAttempt?: InputMaybe<Scalars['Int']>;
  failedLoginTime?: InputMaybe<Scalars['DateTime']>;
  fullName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isEmailVerified?: InputMaybe<Scalars['Boolean']>;
  isLocked?: InputMaybe<Scalars['Boolean']>;
  isProfileUpdated?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  phone: Scalars['String'];
  resendAttempt?: InputMaybe<Scalars['Int']>;
  resendTime?: InputMaybe<Scalars['DateTime']>;
  shortName?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserMaxAggregate = {
  __typename?: 'UserMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  failedLoginAttempt?: Maybe<Scalars['Int']>;
  failedLoginTime?: Maybe<Scalars['DateTime']>;
  fullName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isEmailVerified?: Maybe<Scalars['Boolean']>;
  isLocked?: Maybe<Scalars['Boolean']>;
  isProfileUpdated?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  phone?: Maybe<Scalars['String']>;
  resendAttempt?: Maybe<Scalars['Int']>;
  resendTime?: Maybe<Scalars['DateTime']>;
  shortName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type UserMinAggregate = {
  __typename?: 'UserMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  failedLoginAttempt?: Maybe<Scalars['Int']>;
  failedLoginTime?: Maybe<Scalars['DateTime']>;
  fullName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isEmailVerified?: Maybe<Scalars['Boolean']>;
  isLocked?: Maybe<Scalars['Boolean']>;
  isProfileUpdated?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  phone?: Maybe<Scalars['String']>;
  resendAttempt?: Maybe<Scalars['Int']>;
  resendTime?: Maybe<Scalars['DateTime']>;
  shortName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type UserMobileToken = {
  __typename?: 'UserMobileToken';
  User?: Maybe<User>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isRemoved?: Maybe<Scalars['Boolean']>;
  mobileToken?: Maybe<Scalars['String']>;
  osType?: Maybe<Scalars['String']>;
  osVersion?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserMobileTokenCountAggregate = {
  __typename?: 'UserMobileTokenCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isRemoved: Scalars['Int'];
  mobileToken: Scalars['Int'];
  osType: Scalars['Int'];
  osVersion: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type UserMobileTokenCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mobileToken?: InputMaybe<Scalars['String']>;
  osType?: InputMaybe<Scalars['String']>;
  osVersion?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserMobileTokenCreateManyUserInputEnvelope = {
  data: Array<UserMobileTokenCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserMobileTokenCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserMobileTokenWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserMobileTokenCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<UserMobileTokenCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserMobileTokenCreateManyUserInputEnvelope>;
};

export type UserMobileTokenCreateOrConnectWithoutUserInput = {
  create: UserMobileTokenCreateWithoutUserInput;
  where: UserMobileTokenWhereUniqueInput;
};

export type UserMobileTokenCreateWithoutUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  mobileToken?: InputMaybe<Scalars['String']>;
  osType?: InputMaybe<Scalars['String']>;
  osVersion?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserMobileTokenListRelationFilter = {
  every?: InputMaybe<UserMobileTokenWhereInput>;
  none?: InputMaybe<UserMobileTokenWhereInput>;
  some?: InputMaybe<UserMobileTokenWhereInput>;
};

export type UserMobileTokenMaxAggregate = {
  __typename?: 'UserMobileTokenMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mobileToken?: Maybe<Scalars['String']>;
  osType?: Maybe<Scalars['String']>;
  osVersion?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserMobileTokenMinAggregate = {
  __typename?: 'UserMobileTokenMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  mobileToken?: Maybe<Scalars['String']>;
  osType?: Maybe<Scalars['String']>;
  osVersion?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserMobileTokenScalarWhereInput = {
  AND?: InputMaybe<Array<UserMobileTokenScalarWhereInput>>;
  NOT?: InputMaybe<Array<UserMobileTokenScalarWhereInput>>;
  OR?: InputMaybe<Array<UserMobileTokenScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  mobileToken?: InputMaybe<StringNullableFilter>;
  osType?: InputMaybe<StringNullableFilter>;
  osVersion?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserMobileTokenUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mobileToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  osType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  osVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserMobileTokenUpdateManyWithWhereWithoutUserInput = {
  data: UserMobileTokenUpdateManyMutationInput;
  where: UserMobileTokenScalarWhereInput;
};

export type UserMobileTokenUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserMobileTokenWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserMobileTokenCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<UserMobileTokenCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserMobileTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<UserMobileTokenWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserMobileTokenScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserMobileTokenWhereUniqueInput>>;
  set?: InputMaybe<Array<UserMobileTokenWhereUniqueInput>>;
  update?: InputMaybe<
    Array<UserMobileTokenUpdateWithWhereUniqueWithoutUserInput>
  >;
  updateMany?: InputMaybe<
    Array<UserMobileTokenUpdateManyWithWhereWithoutUserInput>
  >;
  upsert?: InputMaybe<
    Array<UserMobileTokenUpsertWithWhereUniqueWithoutUserInput>
  >;
};

export type UserMobileTokenUpdateWithWhereUniqueWithoutUserInput = {
  data: UserMobileTokenUpdateWithoutUserInput;
  where: UserMobileTokenWhereUniqueInput;
};

export type UserMobileTokenUpdateWithoutUserInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  mobileToken?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  osType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  osVersion?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserMobileTokenUpsertWithWhereUniqueWithoutUserInput = {
  create: UserMobileTokenCreateWithoutUserInput;
  update: UserMobileTokenUpdateWithoutUserInput;
  where: UserMobileTokenWhereUniqueInput;
};

export type UserMobileTokenWhereInput = {
  AND?: InputMaybe<Array<UserMobileTokenWhereInput>>;
  NOT?: InputMaybe<Array<UserMobileTokenWhereInput>>;
  OR?: InputMaybe<Array<UserMobileTokenWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  mobileToken?: InputMaybe<StringNullableFilter>;
  osType?: InputMaybe<StringNullableFilter>;
  osVersion?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserMobileTokenWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type UserPreference = {
  __typename?: 'UserPreference';
  CategoryHeader?: Maybe<CategoryHeader>;
  Channel?: Maybe<Channel>;
  User?: Maybe<User>;
  categoryHeaderId?: Maybe<Scalars['String']>;
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserPreferenceCountAggregate = {
  __typename?: 'UserPreferenceCountAggregate';
  _all: Scalars['Int'];
  categoryHeaderId: Scalars['Int'];
  channelId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type UserPreferenceCreateManyCategoryHeaderInput = {
  channelId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type UserPreferenceCreateManyCategoryHeaderInputEnvelope = {
  data: Array<UserPreferenceCreateManyCategoryHeaderInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserPreferenceCreateManyChannelInput = {
  categoryHeaderId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type UserPreferenceCreateManyChannelInputEnvelope = {
  data: Array<UserPreferenceCreateManyChannelInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserPreferenceCreateManyUserInput = {
  categoryHeaderId?: InputMaybe<Scalars['String']>;
  channelId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserPreferenceCreateManyUserInputEnvelope = {
  data: Array<UserPreferenceCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserPreferenceCreateManyWithoutUserInputDto = {
  createMany?: InputMaybe<UserPreferenceUpdateManyUserInputEnvelopeDto>;
  deleteMany?: InputMaybe<Array<UserPreferenceScalarWhereInputDto>>;
};

export type UserPreferenceCreateNestedManyWithoutCategoryHeaderInput = {
  connect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserPreferenceCreateOrConnectWithoutCategoryHeaderInput>
  >;
  create?: InputMaybe<Array<UserPreferenceCreateWithoutCategoryHeaderInput>>;
  createMany?: InputMaybe<UserPreferenceCreateManyCategoryHeaderInputEnvelope>;
};

export type UserPreferenceCreateNestedManyWithoutChannelInput = {
  connect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserPreferenceCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<UserPreferenceCreateWithoutChannelInput>>;
  createMany?: InputMaybe<UserPreferenceCreateManyChannelInputEnvelope>;
};

export type UserPreferenceCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserPreferenceCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<UserPreferenceCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserPreferenceCreateManyUserInputEnvelope>;
};

export type UserPreferenceCreateOrConnectWithoutCategoryHeaderInput = {
  create: UserPreferenceCreateWithoutCategoryHeaderInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceCreateOrConnectWithoutChannelInput = {
  create: UserPreferenceCreateWithoutChannelInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceCreateOrConnectWithoutUserInput = {
  create: UserPreferenceCreateWithoutUserInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceCreateWithoutCategoryHeaderInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutUserPreferenceInput>;
  User?: InputMaybe<UserCreateNestedOneWithoutUserPreferenceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserPreferenceCreateWithoutChannelInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedOneWithoutUserPreferenceInput>;
  User?: InputMaybe<UserCreateNestedOneWithoutUserPreferenceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserPreferenceCreateWithoutUserInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderCreateNestedOneWithoutUserPreferenceInput>;
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutUserPreferenceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserPreferenceInput = {
  categoryHeaderId: Scalars['String'];
  channelId?: InputMaybe<Scalars['String']>;
};

export type UserPreferenceListRelationFilter = {
  every?: InputMaybe<UserPreferenceWhereInput>;
  none?: InputMaybe<UserPreferenceWhereInput>;
  some?: InputMaybe<UserPreferenceWhereInput>;
};

export type UserPreferenceMaxAggregate = {
  __typename?: 'UserPreferenceMaxAggregate';
  categoryHeaderId?: Maybe<Scalars['String']>;
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserPreferenceMinAggregate = {
  __typename?: 'UserPreferenceMinAggregate';
  categoryHeaderId?: Maybe<Scalars['String']>;
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserPreferenceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type UserPreferenceScalarWhereInput = {
  AND?: InputMaybe<Array<UserPreferenceScalarWhereInput>>;
  NOT?: InputMaybe<Array<UserPreferenceScalarWhereInput>>;
  OR?: InputMaybe<Array<UserPreferenceScalarWhereInput>>;
  categoryHeaderId?: InputMaybe<StringNullableFilter>;
  channelId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserPreferenceScalarWhereInputDto = {
  categoryHeaderId: UuidNullableFilterDto;
  channelId?: InputMaybe<UuidNullableFilterDto>;
};

export type UserPreferenceUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserPreferenceUpdateManyUserInputEnvelopeDto = {
  data: Array<UserPreferenceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserPreferenceUpdateManyWithWhereWithoutCategoryHeaderInput = {
  data: UserPreferenceUpdateManyMutationInput;
  where: UserPreferenceScalarWhereInput;
};

export type UserPreferenceUpdateManyWithWhereWithoutChannelInput = {
  data: UserPreferenceUpdateManyMutationInput;
  where: UserPreferenceScalarWhereInput;
};

export type UserPreferenceUpdateManyWithWhereWithoutUserInput = {
  data: UserPreferenceUpdateManyMutationInput;
  where: UserPreferenceScalarWhereInput;
};

export type UserPreferenceUpdateManyWithoutCategoryHeaderInput = {
  connect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserPreferenceCreateOrConnectWithoutCategoryHeaderInput>
  >;
  create?: InputMaybe<Array<UserPreferenceCreateWithoutCategoryHeaderInput>>;
  createMany?: InputMaybe<UserPreferenceCreateManyCategoryHeaderInputEnvelope>;
  delete?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserPreferenceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  set?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  update?: InputMaybe<
    Array<UserPreferenceUpdateWithWhereUniqueWithoutCategoryHeaderInput>
  >;
  updateMany?: InputMaybe<
    Array<UserPreferenceUpdateManyWithWhereWithoutCategoryHeaderInput>
  >;
  upsert?: InputMaybe<
    Array<UserPreferenceUpsertWithWhereUniqueWithoutCategoryHeaderInput>
  >;
};

export type UserPreferenceUpdateManyWithoutChannelInput = {
  connect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserPreferenceCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<UserPreferenceCreateWithoutChannelInput>>;
  createMany?: InputMaybe<UserPreferenceCreateManyChannelInputEnvelope>;
  delete?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserPreferenceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  set?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  update?: InputMaybe<
    Array<UserPreferenceUpdateWithWhereUniqueWithoutChannelInput>
  >;
  updateMany?: InputMaybe<
    Array<UserPreferenceUpdateManyWithWhereWithoutChannelInput>
  >;
  upsert?: InputMaybe<
    Array<UserPreferenceUpsertWithWhereUniqueWithoutChannelInput>
  >;
};

export type UserPreferenceUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserPreferenceCreateOrConnectWithoutUserInput>
  >;
  create?: InputMaybe<Array<UserPreferenceCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserPreferenceCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserPreferenceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  set?: InputMaybe<Array<UserPreferenceWhereUniqueInput>>;
  update?: InputMaybe<
    Array<UserPreferenceUpdateWithWhereUniqueWithoutUserInput>
  >;
  updateMany?: InputMaybe<
    Array<UserPreferenceUpdateManyWithWhereWithoutUserInput>
  >;
  upsert?: InputMaybe<
    Array<UserPreferenceUpsertWithWhereUniqueWithoutUserInput>
  >;
};

export type UserPreferenceUpdateWithWhereUniqueWithoutCategoryHeaderInput = {
  data: UserPreferenceUpdateWithoutCategoryHeaderInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceUpdateWithWhereUniqueWithoutChannelInput = {
  data: UserPreferenceUpdateWithoutChannelInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceUpdateWithWhereUniqueWithoutUserInput = {
  data: UserPreferenceUpdateWithoutUserInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceUpdateWithoutCategoryHeaderInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutUserPreferenceInput>;
  User?: InputMaybe<UserUpdateOneWithoutUserPreferenceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserPreferenceUpdateWithoutChannelInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateOneWithoutUserPreferenceInput>;
  User?: InputMaybe<UserUpdateOneWithoutUserPreferenceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserPreferenceUpdateWithoutUserInput = {
  CategoryHeader?: InputMaybe<CategoryHeaderUpdateOneWithoutUserPreferenceInput>;
  Channel?: InputMaybe<ChannelUpdateOneWithoutUserPreferenceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserPreferenceUpsertWithWhereUniqueWithoutCategoryHeaderInput = {
  create: UserPreferenceCreateWithoutCategoryHeaderInput;
  update: UserPreferenceUpdateWithoutCategoryHeaderInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceUpsertWithWhereUniqueWithoutChannelInput = {
  create: UserPreferenceCreateWithoutChannelInput;
  update: UserPreferenceUpdateWithoutChannelInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceUpsertWithWhereUniqueWithoutUserInput = {
  create: UserPreferenceCreateWithoutUserInput;
  update: UserPreferenceUpdateWithoutUserInput;
  where: UserPreferenceWhereUniqueInput;
};

export type UserPreferenceUserIdChannelIdCategoryHeaderIdCompoundUniqueInput = {
  categoryHeaderId: Scalars['String'];
  channelId: Scalars['String'];
  userId: Scalars['String'];
};

export type UserPreferenceWhereInput = {
  AND?: InputMaybe<Array<UserPreferenceWhereInput>>;
  CategoryHeader?: InputMaybe<CategoryHeaderRelationFilter>;
  Channel?: InputMaybe<ChannelRelationFilter>;
  NOT?: InputMaybe<Array<UserPreferenceWhereInput>>;
  OR?: InputMaybe<Array<UserPreferenceWhereInput>>;
  User?: InputMaybe<UserRelationFilter>;
  categoryHeaderId?: InputMaybe<StringNullableFilter>;
  channelId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserPreferenceWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  userId_channelId_categoryHeaderId?: InputMaybe<UserPreferenceUserIdChannelIdCategoryHeaderIdCompoundUniqueInput>;
};

export type UserRelationFilter = {
  is?: InputMaybe<UserWhereInput>;
  isNot?: InputMaybe<UserWhereInput>;
};

export type UserRole = {
  __typename?: 'UserRole';
  Channel?: Maybe<Channel>;
  Role?: Maybe<Role>;
  User?: Maybe<User>;
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  roleId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserRoleCountAggregate = {
  __typename?: 'UserRoleCountAggregate';
  _all: Scalars['Int'];
  channelId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  roleId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userId: Scalars['Int'];
};

export type UserRoleCreateManyChannelInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  roleId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type UserRoleCreateManyChannelInputEnvelope = {
  data: Array<UserRoleCreateManyChannelInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserRoleCreateManyRoleInput = {
  channelId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type UserRoleCreateManyRoleInputEnvelope = {
  data: Array<UserRoleCreateManyRoleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserRoleCreateManyUserInput = {
  channelId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  roleId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserRoleCreateManyUserInputEnvelope = {
  data: Array<UserRoleCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type UserRoleCreateNestedManyWithoutChannelInput = {
  connect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserRoleCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<UserRoleCreateWithoutChannelInput>>;
  createMany?: InputMaybe<UserRoleCreateManyChannelInputEnvelope>;
};

export type UserRoleCreateNestedManyWithoutRoleInput = {
  connect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserRoleCreateOrConnectWithoutRoleInput>>;
  create?: InputMaybe<Array<UserRoleCreateWithoutRoleInput>>;
  createMany?: InputMaybe<UserRoleCreateManyRoleInputEnvelope>;
};

export type UserRoleCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserRoleCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<UserRoleCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserRoleCreateManyUserInputEnvelope>;
};

export type UserRoleCreateOrConnectWithoutChannelInput = {
  create: UserRoleCreateWithoutChannelInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleCreateOrConnectWithoutRoleInput = {
  create: UserRoleCreateWithoutRoleInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleCreateOrConnectWithoutUserInput = {
  create: UserRoleCreateWithoutUserInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleCreateWithoutChannelInput = {
  Role?: InputMaybe<RoleCreateNestedOneWithoutUserRoleInput>;
  User?: InputMaybe<UserCreateNestedOneWithoutUserRoleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserRoleCreateWithoutRoleInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutUserRoleInput>;
  User?: InputMaybe<UserCreateNestedOneWithoutUserRoleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserRoleCreateWithoutUserInput = {
  Channel?: InputMaybe<ChannelCreateNestedOneWithoutUserRoleInput>;
  Role?: InputMaybe<RoleCreateNestedOneWithoutUserRoleInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type UserRoleListRelationFilter = {
  every?: InputMaybe<UserRoleWhereInput>;
  none?: InputMaybe<UserRoleWhereInput>;
  some?: InputMaybe<UserRoleWhereInput>;
};

export type UserRoleMaxAggregate = {
  __typename?: 'UserRoleMaxAggregate';
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  roleId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserRoleMinAggregate = {
  __typename?: 'UserRoleMinAggregate';
  channelId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  roleId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserRoleOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type UserRoleRoleIdUserIdChannelIdCompoundUniqueInput = {
  channelId: Scalars['String'];
  roleId: Scalars['String'];
  userId: Scalars['String'];
};

export type UserRoleScalarWhereInput = {
  AND?: InputMaybe<Array<UserRoleScalarWhereInput>>;
  NOT?: InputMaybe<Array<UserRoleScalarWhereInput>>;
  OR?: InputMaybe<Array<UserRoleScalarWhereInput>>;
  channelId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  roleId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserRoleUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserRoleUpdateManyWithWhereWithoutChannelInput = {
  data: UserRoleUpdateManyMutationInput;
  where: UserRoleScalarWhereInput;
};

export type UserRoleUpdateManyWithWhereWithoutRoleInput = {
  data: UserRoleUpdateManyMutationInput;
  where: UserRoleScalarWhereInput;
};

export type UserRoleUpdateManyWithWhereWithoutUserInput = {
  data: UserRoleUpdateManyMutationInput;
  where: UserRoleScalarWhereInput;
};

export type UserRoleUpdateManyWithoutChannelInput = {
  connect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<UserRoleCreateOrConnectWithoutChannelInput>
  >;
  create?: InputMaybe<Array<UserRoleCreateWithoutChannelInput>>;
  createMany?: InputMaybe<UserRoleCreateManyChannelInputEnvelope>;
  delete?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserRoleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  set?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  update?: InputMaybe<Array<UserRoleUpdateWithWhereUniqueWithoutChannelInput>>;
  updateMany?: InputMaybe<
    Array<UserRoleUpdateManyWithWhereWithoutChannelInput>
  >;
  upsert?: InputMaybe<Array<UserRoleUpsertWithWhereUniqueWithoutChannelInput>>;
};

export type UserRoleUpdateManyWithoutRoleInput = {
  connect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserRoleCreateOrConnectWithoutRoleInput>>;
  create?: InputMaybe<Array<UserRoleCreateWithoutRoleInput>>;
  createMany?: InputMaybe<UserRoleCreateManyRoleInputEnvelope>;
  delete?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserRoleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  set?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  update?: InputMaybe<Array<UserRoleUpdateWithWhereUniqueWithoutRoleInput>>;
  updateMany?: InputMaybe<Array<UserRoleUpdateManyWithWhereWithoutRoleInput>>;
  upsert?: InputMaybe<Array<UserRoleUpsertWithWhereUniqueWithoutRoleInput>>;
};

export type UserRoleUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserRoleCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<UserRoleCreateWithoutUserInput>>;
  createMany?: InputMaybe<UserRoleCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserRoleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  set?: InputMaybe<Array<UserRoleWhereUniqueInput>>;
  update?: InputMaybe<Array<UserRoleUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<UserRoleUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<UserRoleUpsertWithWhereUniqueWithoutUserInput>>;
};

export type UserRoleUpdateWithWhereUniqueWithoutChannelInput = {
  data: UserRoleUpdateWithoutChannelInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleUpdateWithWhereUniqueWithoutRoleInput = {
  data: UserRoleUpdateWithoutRoleInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleUpdateWithWhereUniqueWithoutUserInput = {
  data: UserRoleUpdateWithoutUserInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleUpdateWithoutChannelInput = {
  Role?: InputMaybe<RoleUpdateOneWithoutUserRoleInput>;
  User?: InputMaybe<UserUpdateOneWithoutUserRoleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserRoleUpdateWithoutRoleInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutUserRoleInput>;
  User?: InputMaybe<UserUpdateOneWithoutUserRoleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserRoleUpdateWithoutUserInput = {
  Channel?: InputMaybe<ChannelUpdateOneWithoutUserRoleInput>;
  Role?: InputMaybe<RoleUpdateOneWithoutUserRoleInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserRoleUpsertWithWhereUniqueWithoutChannelInput = {
  create: UserRoleCreateWithoutChannelInput;
  update: UserRoleUpdateWithoutChannelInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleUpsertWithWhereUniqueWithoutRoleInput = {
  create: UserRoleCreateWithoutRoleInput;
  update: UserRoleUpdateWithoutRoleInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleUpsertWithWhereUniqueWithoutUserInput = {
  create: UserRoleCreateWithoutUserInput;
  update: UserRoleUpdateWithoutUserInput;
  where: UserRoleWhereUniqueInput;
};

export type UserRoleWhereInput = {
  AND?: InputMaybe<Array<UserRoleWhereInput>>;
  Channel?: InputMaybe<ChannelRelationFilter>;
  NOT?: InputMaybe<Array<UserRoleWhereInput>>;
  OR?: InputMaybe<Array<UserRoleWhereInput>>;
  Role?: InputMaybe<RoleRelationFilter>;
  User?: InputMaybe<UserRelationFilter>;
  channelId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  roleId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type UserRoleWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  roleId_userId_channelId?: InputMaybe<UserRoleRoleIdUserIdChannelIdCompoundUniqueInput>;
};

export type UserSessionCountAggregate = {
  __typename?: 'UserSessionCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  expiresOn: Scalars['Int'];
  id: Scalars['Int'];
  refreshToken: Scalars['Int'];
  token: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  userAuthenticationStrategyId: Scalars['Int'];
  userId: Scalars['Int'];
};

export type UserSessionMaxAggregate = {
  __typename?: 'UserSessionMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresOn?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  refreshToken?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userAuthenticationStrategyId?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserSessionMinAggregate = {
  __typename?: 'UserSessionMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  expiresOn?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  refreshToken?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  userAuthenticationStrategyId?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type UserSumAggregate = {
  __typename?: 'UserSumAggregate';
  failedLoginAttempt?: Maybe<Scalars['Int']>;
  resendAttempt?: Maybe<Scalars['Int']>;
};

export type UserToken = {
  __typename?: 'UserToken';
  isFirstLogin?: Maybe<Scalars['Boolean']>;
  isVerified?: Maybe<Scalars['Boolean']>;
  loginAttemptsLeft?: Maybe<Scalars['Float']>;
  message: Scalars['String'];
  refreshToken?: Maybe<Scalars['String']>;
  token?: Maybe<Scalars['String']>;
  user?: Maybe<User>;
};

export type UserUpdateInputDto = {
  UserPreference?: InputMaybe<UserPreferenceCreateManyWithoutUserInputDto>;
  email?: InputMaybe<NullableEmailFieldUpdateOperationsInputDto>;
  fullName?: InputMaybe<NullableStringFieldUpdateOperationsInputDto>;
  isProfileUpdated?: InputMaybe<Scalars['Boolean']>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInputDto>;
  shortName?: InputMaybe<NullableStringFieldUpdateOperationsInputDto>;
};

export type UserUpdateOneRequiredWithoutAuthenticationStrategiesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAuthenticationStrategiesInput>;
  create?: InputMaybe<UserCreateWithoutAuthenticationStrategiesInput>;
  update?: InputMaybe<UserUpdateWithoutAuthenticationStrategiesInput>;
  upsert?: InputMaybe<UserUpsertWithoutAuthenticationStrategiesInput>;
};

export type UserUpdateOneWithoutCustomersInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<UserCreateWithoutCustomersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUpdateWithoutCustomersInput>;
  upsert?: InputMaybe<UserUpsertWithoutCustomersInput>;
};

export type UserUpdateOneWithoutSessionsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutSessionsInput>;
  create?: InputMaybe<UserCreateWithoutSessionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUpdateWithoutSessionsInput>;
  upsert?: InputMaybe<UserUpsertWithoutSessionsInput>;
};

export type UserUpdateOneWithoutUserAssetInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutUserAssetInput>;
  create?: InputMaybe<UserCreateWithoutUserAssetInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUpdateWithoutUserAssetInput>;
  upsert?: InputMaybe<UserUpsertWithoutUserAssetInput>;
};

export type UserUpdateOneWithoutUserPreferenceInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutUserPreferenceInput>;
  create?: InputMaybe<UserCreateWithoutUserPreferenceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUpdateWithoutUserPreferenceInput>;
  upsert?: InputMaybe<UserUpsertWithoutUserPreferenceInput>;
};

export type UserUpdateOneWithoutUserRoleInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutUserRoleInput>;
  create?: InputMaybe<UserCreateWithoutUserRoleInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUpdateWithoutUserRoleInput>;
  upsert?: InputMaybe<UserUpsertWithoutUserRoleInput>;
};

export type UserUpdateWithoutAuthenticationStrategiesInput = {
  Customers?: InputMaybe<CustomerUserUpdateManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogUpdateManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogUpdateManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionUpdateManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenUpdateManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  failedLoginAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  failedLoginTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isEmailVerified?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isLocked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isProfileUpdated?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  phone?: InputMaybe<StringFieldUpdateOperationsInput>;
  resendAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  resendTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  shortName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutCustomersInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyUpdateManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogUpdateManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogUpdateManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionUpdateManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenUpdateManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  failedLoginAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  failedLoginTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isEmailVerified?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isLocked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isProfileUpdated?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  phone?: InputMaybe<StringFieldUpdateOperationsInput>;
  resendAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  resendTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  shortName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutSessionsInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyUpdateManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserUpdateManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogUpdateManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogUpdateManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenUpdateManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  failedLoginAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  failedLoginTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isEmailVerified?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isLocked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isProfileUpdated?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  phone?: InputMaybe<StringFieldUpdateOperationsInput>;
  resendAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  resendTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  shortName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutUserAssetInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyUpdateManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserUpdateManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogUpdateManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogUpdateManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionUpdateManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenUpdateManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  failedLoginAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  failedLoginTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isEmailVerified?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isLocked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isProfileUpdated?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  phone?: InputMaybe<StringFieldUpdateOperationsInput>;
  resendAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  resendTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  shortName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutUserPreferenceInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyUpdateManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserUpdateManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogUpdateManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogUpdateManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionUpdateManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenUpdateManyWithoutUserInput>;
  UserRole?: InputMaybe<UserRoleUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  failedLoginAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  failedLoginTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isEmailVerified?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isLocked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isProfileUpdated?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  phone?: InputMaybe<StringFieldUpdateOperationsInput>;
  resendAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  resendTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  shortName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutUserRoleInput = {
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyUpdateManyWithoutUserInput>;
  Customers?: InputMaybe<CustomerUserUpdateManyWithoutUserInput>;
  EventLog?: InputMaybe<EventLogUpdateManyWithoutUserInput>;
  NotificationLog?: InputMaybe<NotificationLogUpdateManyWithoutUserInput>;
  Sessions?: InputMaybe<SessionUpdateManyWithoutUserInput>;
  UserAsset?: InputMaybe<UserAssetUpdateManyWithoutUserInput>;
  UserMobileToken?: InputMaybe<UserMobileTokenUpdateManyWithoutUserInput>;
  UserPreference?: InputMaybe<UserPreferenceUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  failedLoginAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  failedLoginTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  fullName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isEmailVerified?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isLocked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isProfileUpdated?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  phone?: InputMaybe<StringFieldUpdateOperationsInput>;
  resendAttempt?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  resendTime?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  shortName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutAuthenticationStrategiesInput = {
  create: UserCreateWithoutAuthenticationStrategiesInput;
  update: UserUpdateWithoutAuthenticationStrategiesInput;
};

export type UserUpsertWithoutCustomersInput = {
  create: UserCreateWithoutCustomersInput;
  update: UserUpdateWithoutCustomersInput;
};

export type UserUpsertWithoutSessionsInput = {
  create: UserCreateWithoutSessionsInput;
  update: UserUpdateWithoutSessionsInput;
};

export type UserUpsertWithoutUserAssetInput = {
  create: UserCreateWithoutUserAssetInput;
  update: UserUpdateWithoutUserAssetInput;
};

export type UserUpsertWithoutUserPreferenceInput = {
  create: UserCreateWithoutUserPreferenceInput;
  update: UserUpdateWithoutUserPreferenceInput;
};

export type UserUpsertWithoutUserRoleInput = {
  create: UserCreateWithoutUserRoleInput;
  update: UserUpdateWithoutUserRoleInput;
};

export type UserWhereInput = {
  AND?: InputMaybe<Array<UserWhereInput>>;
  AuthenticationStrategies?: InputMaybe<UserAuthenticationStrategyListRelationFilter>;
  Customers?: InputMaybe<CustomerUserListRelationFilter>;
  EventLog?: InputMaybe<EventLogListRelationFilter>;
  NOT?: InputMaybe<Array<UserWhereInput>>;
  NotificationLog?: InputMaybe<NotificationLogListRelationFilter>;
  OR?: InputMaybe<Array<UserWhereInput>>;
  Sessions?: InputMaybe<SessionListRelationFilter>;
  UserAsset?: InputMaybe<UserAssetListRelationFilter>;
  UserMobileToken?: InputMaybe<UserMobileTokenListRelationFilter>;
  UserPreference?: InputMaybe<UserPreferenceListRelationFilter>;
  UserRole?: InputMaybe<UserRoleListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  failedLoginAttempt?: InputMaybe<IntNullableFilter>;
  failedLoginTime?: InputMaybe<DateTimeNullableFilter>;
  fullName?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isEmailVerified?: InputMaybe<BoolNullableFilter>;
  isLocked?: InputMaybe<BoolNullableFilter>;
  isProfileUpdated?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  phone?: InputMaybe<StringFilter>;
  resendAttempt?: InputMaybe<IntNullableFilter>;
  resendTime?: InputMaybe<DateTimeNullableFilter>;
  shortName?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type UserWhereUniqueInput = {
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  phone?: InputMaybe<Scalars['String']>;
};

export type VerifyOtpInput = {
  otp: Scalars['String'];
  phone: Scalars['String'];
};

export type WorkFlow = {
  __typename?: 'WorkFlow';
  ChannelEnrollment?: Maybe<Array<ChannelEnrollment>>;
  WorkflowActivity?: Maybe<Array<WorkflowActivity>>;
  WorkflowInstance?: Maybe<Array<WorkflowInstance>>;
  _count: WorkFlowCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  processCode?: Maybe<Scalars['String']>;
  processName?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['Int']>;
};

export type WorkFlowAvgAggregate = {
  __typename?: 'WorkFlowAvgAggregate';
  version?: Maybe<Scalars['Float']>;
};

export type WorkFlowContextInstance = {
  __typename?: 'WorkFlowContextInstance';
  Address?: Maybe<Array<Address>>;
  Brand?: Maybe<Array<Brand>>;
  Context?: Maybe<Context>;
  Customer?: Maybe<Array<Customer>>;
  CustomerKYC?: Maybe<Array<CustomerKyc>>;
  Products?: Maybe<Array<Product>>;
  WorkFlowStatus?: Maybe<WorkFlowStatus>;
  _count: WorkFlowContextInstanceCount;
  comments?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  reviewedAt?: Maybe<Scalars['DateTime']>;
  reviewedBy?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type WorkFlowContextInstanceCount = {
  __typename?: 'WorkFlowContextInstanceCount';
  Address: Scalars['Int'];
  Brand: Scalars['Int'];
  Customer: Scalars['Int'];
  CustomerKYC: Scalars['Int'];
  Products: Scalars['Int'];
};

export type WorkFlowContextInstanceCountAggregate = {
  __typename?: 'WorkFlowContextInstanceCountAggregate';
  _all: Scalars['Int'];
  comments: Scalars['Int'];
  contextFKValue: Scalars['Int'];
  contextId: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  reviewedAt: Scalars['Int'];
  reviewedBy: Scalars['Int'];
  status: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type WorkFlowContextInstanceCreateManyContextInput = {
  comments?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  reviewedAt?: InputMaybe<Scalars['DateTime']>;
  reviewedBy?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowContextInstanceCreateManyContextInputEnvelope = {
  data: Array<WorkFlowContextInstanceCreateManyContextInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WorkFlowContextInstanceCreateNestedManyWithoutContextInput = {
  connect?: InputMaybe<Array<WorkFlowContextInstanceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkFlowContextInstanceCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<Array<WorkFlowContextInstanceCreateWithoutContextInput>>;
  createMany?: InputMaybe<WorkFlowContextInstanceCreateManyContextInputEnvelope>;
};

export type WorkFlowContextInstanceCreateNestedOneWithoutAddressInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutAddressInput>;
};

export type WorkFlowContextInstanceCreateNestedOneWithoutBrandInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutBrandInput>;
};

export type WorkFlowContextInstanceCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutCustomerInput>;
};

export type WorkFlowContextInstanceCreateNestedOneWithoutCustomerKycInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutCustomerKycInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutCustomerKycInput>;
};

export type WorkFlowContextInstanceCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutProductsInput>;
};

export type WorkFlowContextInstanceCreateOrConnectWithoutAddressInput = {
  create: WorkFlowContextInstanceCreateWithoutAddressInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceCreateOrConnectWithoutBrandInput = {
  create: WorkFlowContextInstanceCreateWithoutBrandInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceCreateOrConnectWithoutContextInput = {
  create: WorkFlowContextInstanceCreateWithoutContextInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceCreateOrConnectWithoutCustomerInput = {
  create: WorkFlowContextInstanceCreateWithoutCustomerInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceCreateOrConnectWithoutCustomerKycInput = {
  create: WorkFlowContextInstanceCreateWithoutCustomerKycInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceCreateOrConnectWithoutProductsInput = {
  create: WorkFlowContextInstanceCreateWithoutProductsInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceCreateWithoutAddressInput = {
  Brand?: InputMaybe<BrandCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  reviewedAt?: InputMaybe<Scalars['DateTime']>;
  reviewedBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowContextInstanceCreateWithoutBrandInput = {
  Address?: InputMaybe<AddressCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  reviewedAt?: InputMaybe<Scalars['DateTime']>;
  reviewedBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowContextInstanceCreateWithoutContextInput = {
  Address?: InputMaybe<AddressCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  reviewedAt?: InputMaybe<Scalars['DateTime']>;
  reviewedBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowContextInstanceCreateWithoutCustomerInput = {
  Address?: InputMaybe<AddressCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  reviewedAt?: InputMaybe<Scalars['DateTime']>;
  reviewedBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowContextInstanceCreateWithoutCustomerKycInput = {
  Address?: InputMaybe<AddressCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  reviewedAt?: InputMaybe<Scalars['DateTime']>;
  reviewedBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowContextInstanceCreateWithoutProductsInput = {
  Address?: InputMaybe<AddressCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycCreateNestedManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusCreateNestedOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<Scalars['String']>;
  contextFKValue?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  reviewedAt?: InputMaybe<Scalars['DateTime']>;
  reviewedBy?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowContextInstanceListRelationFilter = {
  every?: InputMaybe<WorkFlowContextInstanceWhereInput>;
  none?: InputMaybe<WorkFlowContextInstanceWhereInput>;
  some?: InputMaybe<WorkFlowContextInstanceWhereInput>;
};

export type WorkFlowContextInstanceMaxAggregate = {
  __typename?: 'WorkFlowContextInstanceMaxAggregate';
  comments?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  reviewedAt?: Maybe<Scalars['DateTime']>;
  reviewedBy?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type WorkFlowContextInstanceMinAggregate = {
  __typename?: 'WorkFlowContextInstanceMinAggregate';
  comments?: Maybe<Scalars['String']>;
  contextFKValue?: Maybe<Scalars['String']>;
  contextId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  reviewedAt?: Maybe<Scalars['DateTime']>;
  reviewedBy?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type WorkFlowContextInstanceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WorkFlowContextInstanceOrderByWithRelationInput = {
  Address?: InputMaybe<AddressOrderByRelationAggregateInput>;
  Brand?: InputMaybe<BrandOrderByRelationAggregateInput>;
  Context?: InputMaybe<ContextOrderByWithRelationInput>;
  Customer?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  CustomerKYC?: InputMaybe<CustomerKycOrderByRelationAggregateInput>;
  Products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusOrderByWithRelationInput>;
  comments?: InputMaybe<SortOrder>;
  contextFKValue?: InputMaybe<SortOrder>;
  contextId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  reviewedAt?: InputMaybe<SortOrder>;
  reviewedBy?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type WorkFlowContextInstanceRelationFilter = {
  is?: InputMaybe<WorkFlowContextInstanceWhereInput>;
  isNot?: InputMaybe<WorkFlowContextInstanceWhereInput>;
};

export type WorkFlowContextInstanceScalarWhereInput = {
  AND?: InputMaybe<Array<WorkFlowContextInstanceScalarWhereInput>>;
  NOT?: InputMaybe<Array<WorkFlowContextInstanceScalarWhereInput>>;
  OR?: InputMaybe<Array<WorkFlowContextInstanceScalarWhereInput>>;
  comments?: InputMaybe<StringNullableFilter>;
  contextFKValue?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  reviewedAt?: InputMaybe<DateTimeNullableFilter>;
  reviewedBy?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type WorkFlowContextInstanceUpdateManyMutationInput = {
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  reviewedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reviewedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowContextInstanceUpdateManyWithWhereWithoutContextInput = {
  data: WorkFlowContextInstanceUpdateManyMutationInput;
  where: WorkFlowContextInstanceScalarWhereInput;
};

export type WorkFlowContextInstanceUpdateManyWithoutContextInput = {
  connect?: InputMaybe<Array<WorkFlowContextInstanceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkFlowContextInstanceCreateOrConnectWithoutContextInput>
  >;
  create?: InputMaybe<Array<WorkFlowContextInstanceCreateWithoutContextInput>>;
  createMany?: InputMaybe<WorkFlowContextInstanceCreateManyContextInputEnvelope>;
  delete?: InputMaybe<Array<WorkFlowContextInstanceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<WorkFlowContextInstanceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<WorkFlowContextInstanceWhereUniqueInput>>;
  set?: InputMaybe<Array<WorkFlowContextInstanceWhereUniqueInput>>;
  update?: InputMaybe<
    Array<WorkFlowContextInstanceUpdateWithWhereUniqueWithoutContextInput>
  >;
  updateMany?: InputMaybe<
    Array<WorkFlowContextInstanceUpdateManyWithWhereWithoutContextInput>
  >;
  upsert?: InputMaybe<
    Array<WorkFlowContextInstanceUpsertWithWhereUniqueWithoutContextInput>
  >;
};

export type WorkFlowContextInstanceUpdateOneWithoutAddressInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutAddressInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowContextInstanceUpdateWithoutAddressInput>;
  upsert?: InputMaybe<WorkFlowContextInstanceUpsertWithoutAddressInput>;
};

export type WorkFlowContextInstanceUpdateOneWithoutBrandInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutBrandInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutBrandInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowContextInstanceUpdateWithoutBrandInput>;
  upsert?: InputMaybe<WorkFlowContextInstanceUpsertWithoutBrandInput>;
};

export type WorkFlowContextInstanceUpdateOneWithoutCustomerInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowContextInstanceUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<WorkFlowContextInstanceUpsertWithoutCustomerInput>;
};

export type WorkFlowContextInstanceUpdateOneWithoutCustomerKycInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutCustomerKycInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutCustomerKycInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowContextInstanceUpdateWithoutCustomerKycInput>;
  upsert?: InputMaybe<WorkFlowContextInstanceUpsertWithoutCustomerKycInput>;
};

export type WorkFlowContextInstanceUpdateOneWithoutProductsInput = {
  connect?: InputMaybe<WorkFlowContextInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowContextInstanceCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<WorkFlowContextInstanceCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowContextInstanceUpdateWithoutProductsInput>;
  upsert?: InputMaybe<WorkFlowContextInstanceUpsertWithoutProductsInput>;
};

export type WorkFlowContextInstanceUpdateWithWhereUniqueWithoutContextInput = {
  data: WorkFlowContextInstanceUpdateWithoutContextInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceUpdateWithoutAddressInput = {
  Brand?: InputMaybe<BrandUpdateManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusUpdateOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  reviewedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reviewedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowContextInstanceUpdateWithoutBrandInput = {
  Address?: InputMaybe<AddressUpdateManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusUpdateOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  reviewedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reviewedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowContextInstanceUpdateWithoutContextInput = {
  Address?: InputMaybe<AddressUpdateManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandUpdateManyWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusUpdateOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  reviewedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reviewedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowContextInstanceUpdateWithoutCustomerInput = {
  Address?: InputMaybe<AddressUpdateManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandUpdateManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusUpdateOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  reviewedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reviewedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowContextInstanceUpdateWithoutCustomerKycInput = {
  Address?: InputMaybe<AddressUpdateManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandUpdateManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutWorkFlowContextInstanceInput>;
  Products?: InputMaybe<ProductUpdateManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusUpdateOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  reviewedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reviewedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowContextInstanceUpdateWithoutProductsInput = {
  Address?: InputMaybe<AddressUpdateManyWithoutWorkFlowContextInstanceInput>;
  Brand?: InputMaybe<BrandUpdateManyWithoutWorkFlowContextInstanceInput>;
  Context?: InputMaybe<ContextUpdateOneWithoutWorkFlowContextInstanceInput>;
  Customer?: InputMaybe<CustomerUpdateManyWithoutWorkFlowContextInstanceInput>;
  CustomerKYC?: InputMaybe<CustomerKycUpdateManyWithoutWorkFlowContextInstanceInput>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusUpdateOneWithoutWorkFlowContextInstanceInput>;
  comments?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contextFKValue?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  reviewedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  reviewedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowContextInstanceUpsertWithWhereUniqueWithoutContextInput = {
  create: WorkFlowContextInstanceCreateWithoutContextInput;
  update: WorkFlowContextInstanceUpdateWithoutContextInput;
  where: WorkFlowContextInstanceWhereUniqueInput;
};

export type WorkFlowContextInstanceUpsertWithoutAddressInput = {
  create: WorkFlowContextInstanceCreateWithoutAddressInput;
  update: WorkFlowContextInstanceUpdateWithoutAddressInput;
};

export type WorkFlowContextInstanceUpsertWithoutBrandInput = {
  create: WorkFlowContextInstanceCreateWithoutBrandInput;
  update: WorkFlowContextInstanceUpdateWithoutBrandInput;
};

export type WorkFlowContextInstanceUpsertWithoutCustomerInput = {
  create: WorkFlowContextInstanceCreateWithoutCustomerInput;
  update: WorkFlowContextInstanceUpdateWithoutCustomerInput;
};

export type WorkFlowContextInstanceUpsertWithoutCustomerKycInput = {
  create: WorkFlowContextInstanceCreateWithoutCustomerKycInput;
  update: WorkFlowContextInstanceUpdateWithoutCustomerKycInput;
};

export type WorkFlowContextInstanceUpsertWithoutProductsInput = {
  create: WorkFlowContextInstanceCreateWithoutProductsInput;
  update: WorkFlowContextInstanceUpdateWithoutProductsInput;
};

export type WorkFlowContextInstanceWhereInput = {
  AND?: InputMaybe<Array<WorkFlowContextInstanceWhereInput>>;
  Address?: InputMaybe<AddressListRelationFilter>;
  Brand?: InputMaybe<BrandListRelationFilter>;
  Context?: InputMaybe<ContextRelationFilter>;
  Customer?: InputMaybe<CustomerListRelationFilter>;
  CustomerKYC?: InputMaybe<CustomerKycListRelationFilter>;
  NOT?: InputMaybe<Array<WorkFlowContextInstanceWhereInput>>;
  OR?: InputMaybe<Array<WorkFlowContextInstanceWhereInput>>;
  Products?: InputMaybe<ProductListRelationFilter>;
  WorkFlowStatus?: InputMaybe<WorkFlowStatusRelationFilter>;
  comments?: InputMaybe<StringNullableFilter>;
  contextFKValue?: InputMaybe<StringNullableFilter>;
  contextId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  reviewedAt?: InputMaybe<DateTimeNullableFilter>;
  reviewedBy?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type WorkFlowContextInstanceWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type WorkFlowCount = {
  __typename?: 'WorkFlowCount';
  ChannelEnrollment: Scalars['Int'];
  WorkflowActivity: Scalars['Int'];
  WorkflowInstance: Scalars['Int'];
};

export type WorkFlowCountAggregate = {
  __typename?: 'WorkFlowCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  name: Scalars['Int'];
  processCode: Scalars['Int'];
  processName: Scalars['Int'];
  status: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  version: Scalars['Int'];
};

export type WorkFlowCreateNestedOneWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<WorkFlowWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowCreateOrConnectWithoutChannelEnrollmentInput>;
  create?: InputMaybe<WorkFlowCreateWithoutChannelEnrollmentInput>;
};

export type WorkFlowCreateNestedOneWithoutWorkflowActivityInput = {
  connect?: InputMaybe<WorkFlowWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowCreateOrConnectWithoutWorkflowActivityInput>;
  create?: InputMaybe<WorkFlowCreateWithoutWorkflowActivityInput>;
};

export type WorkFlowCreateNestedOneWithoutWorkflowInstanceInput = {
  connect?: InputMaybe<WorkFlowWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowCreateOrConnectWithoutWorkflowInstanceInput>;
  create?: InputMaybe<WorkFlowCreateWithoutWorkflowInstanceInput>;
};

export type WorkFlowCreateOrConnectWithoutChannelEnrollmentInput = {
  create: WorkFlowCreateWithoutChannelEnrollmentInput;
  where: WorkFlowWhereUniqueInput;
};

export type WorkFlowCreateOrConnectWithoutWorkflowActivityInput = {
  create: WorkFlowCreateWithoutWorkflowActivityInput;
  where: WorkFlowWhereUniqueInput;
};

export type WorkFlowCreateOrConnectWithoutWorkflowInstanceInput = {
  create: WorkFlowCreateWithoutWorkflowInstanceInput;
  where: WorkFlowWhereUniqueInput;
};

export type WorkFlowCreateWithoutChannelEnrollmentInput = {
  WorkflowActivity?: InputMaybe<WorkflowActivityCreateNestedManyWithoutWorkFlowInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedManyWithoutWorkFlowInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  processCode?: InputMaybe<Scalars['String']>;
  processName?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  version?: InputMaybe<Scalars['Int']>;
};

export type WorkFlowCreateWithoutWorkflowActivityInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedManyWithoutWorkFlowInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedManyWithoutWorkFlowInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  processCode?: InputMaybe<Scalars['String']>;
  processName?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  version?: InputMaybe<Scalars['Int']>;
};

export type WorkFlowCreateWithoutWorkflowInstanceInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentCreateNestedManyWithoutWorkFlowInput>;
  WorkflowActivity?: InputMaybe<WorkflowActivityCreateNestedManyWithoutWorkFlowInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  processCode?: InputMaybe<Scalars['String']>;
  processName?: InputMaybe<Scalars['String']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  version?: InputMaybe<Scalars['Int']>;
};

export type WorkFlowMaxAggregate = {
  __typename?: 'WorkFlowMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  processCode?: Maybe<Scalars['String']>;
  processName?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['Int']>;
};

export type WorkFlowMinAggregate = {
  __typename?: 'WorkFlowMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  processCode?: Maybe<Scalars['String']>;
  processName?: Maybe<Scalars['String']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  version?: Maybe<Scalars['Int']>;
};

export type WorkFlowNameVersionCompoundUniqueInput = {
  name: Scalars['String'];
  version: Scalars['Int'];
};

export type WorkFlowOrderByWithRelationInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentOrderByRelationAggregateInput>;
  WorkflowActivity?: InputMaybe<WorkflowActivityOrderByRelationAggregateInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  processCode?: InputMaybe<SortOrder>;
  processName?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
  version?: InputMaybe<SortOrder>;
};

export type WorkFlowRelationFilter = {
  is?: InputMaybe<WorkFlowWhereInput>;
  isNot?: InputMaybe<WorkFlowWhereInput>;
};

export type WorkFlowStatus = {
  __typename?: 'WorkFlowStatus';
  WorkFlowContextInstance?: Maybe<Array<WorkFlowContextInstance>>;
  _count: WorkFlowStatusCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  name: Scalars['String'];
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type WorkFlowStatusCount = {
  __typename?: 'WorkFlowStatusCount';
  WorkFlowContextInstance: Scalars['Int'];
};

export type WorkFlowStatusCountAggregate = {
  __typename?: 'WorkFlowStatusCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
};

export type WorkFlowStatusCreateNestedOneWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<WorkFlowStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowStatusCreateOrConnectWithoutWorkFlowContextInstanceInput>;
  create?: InputMaybe<WorkFlowStatusCreateWithoutWorkFlowContextInstanceInput>;
};

export type WorkFlowStatusCreateOrConnectWithoutWorkFlowContextInstanceInput = {
  create: WorkFlowStatusCreateWithoutWorkFlowContextInstanceInput;
  where: WorkFlowStatusWhereUniqueInput;
};

export type WorkFlowStatusCreateWithoutWorkFlowContextInstanceInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkFlowStatusMaxAggregate = {
  __typename?: 'WorkFlowStatusMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type WorkFlowStatusMinAggregate = {
  __typename?: 'WorkFlowStatusMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
};

export type WorkFlowStatusOrderByWithRelationInput = {
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
};

export type WorkFlowStatusRelationFilter = {
  is?: InputMaybe<WorkFlowStatusWhereInput>;
  isNot?: InputMaybe<WorkFlowStatusWhereInput>;
};

export type WorkFlowStatusUpdateOneWithoutWorkFlowContextInstanceInput = {
  connect?: InputMaybe<WorkFlowStatusWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowStatusCreateOrConnectWithoutWorkFlowContextInstanceInput>;
  create?: InputMaybe<WorkFlowStatusCreateWithoutWorkFlowContextInstanceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowStatusUpdateWithoutWorkFlowContextInstanceInput>;
  upsert?: InputMaybe<WorkFlowStatusUpsertWithoutWorkFlowContextInstanceInput>;
};

export type WorkFlowStatusUpdateWithoutWorkFlowContextInstanceInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkFlowStatusUpsertWithoutWorkFlowContextInstanceInput = {
  create: WorkFlowStatusCreateWithoutWorkFlowContextInstanceInput;
  update: WorkFlowStatusUpdateWithoutWorkFlowContextInstanceInput;
};

export type WorkFlowStatusWhereInput = {
  AND?: InputMaybe<Array<WorkFlowStatusWhereInput>>;
  NOT?: InputMaybe<Array<WorkFlowStatusWhereInput>>;
  OR?: InputMaybe<Array<WorkFlowStatusWhereInput>>;
  WorkFlowContextInstance?: InputMaybe<WorkFlowContextInstanceListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
};

export type WorkFlowStatusWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
};

export type WorkFlowSumAggregate = {
  __typename?: 'WorkFlowSumAggregate';
  version?: Maybe<Scalars['Int']>;
};

export type WorkFlowUpdateOneWithoutChannelEnrollmentInput = {
  connect?: InputMaybe<WorkFlowWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowCreateOrConnectWithoutChannelEnrollmentInput>;
  create?: InputMaybe<WorkFlowCreateWithoutChannelEnrollmentInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowUpdateWithoutChannelEnrollmentInput>;
  upsert?: InputMaybe<WorkFlowUpsertWithoutChannelEnrollmentInput>;
};

export type WorkFlowUpdateOneWithoutWorkflowActivityInput = {
  connect?: InputMaybe<WorkFlowWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowCreateOrConnectWithoutWorkflowActivityInput>;
  create?: InputMaybe<WorkFlowCreateWithoutWorkflowActivityInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowUpdateWithoutWorkflowActivityInput>;
  upsert?: InputMaybe<WorkFlowUpsertWithoutWorkflowActivityInput>;
};

export type WorkFlowUpdateOneWithoutWorkflowInstanceInput = {
  connect?: InputMaybe<WorkFlowWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkFlowCreateOrConnectWithoutWorkflowInstanceInput>;
  create?: InputMaybe<WorkFlowCreateWithoutWorkflowInstanceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkFlowUpdateWithoutWorkflowInstanceInput>;
  upsert?: InputMaybe<WorkFlowUpsertWithoutWorkflowInstanceInput>;
};

export type WorkFlowUpdateWithoutChannelEnrollmentInput = {
  WorkflowActivity?: InputMaybe<WorkflowActivityUpdateManyWithoutWorkFlowInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateManyWithoutWorkFlowInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type WorkFlowUpdateWithoutWorkflowActivityInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateManyWithoutWorkFlowInput>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateManyWithoutWorkFlowInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type WorkFlowUpdateWithoutWorkflowInstanceInput = {
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentUpdateManyWithoutWorkFlowInput>;
  WorkflowActivity?: InputMaybe<WorkflowActivityUpdateManyWithoutWorkFlowInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  processName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  version?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
};

export type WorkFlowUpsertWithoutChannelEnrollmentInput = {
  create: WorkFlowCreateWithoutChannelEnrollmentInput;
  update: WorkFlowUpdateWithoutChannelEnrollmentInput;
};

export type WorkFlowUpsertWithoutWorkflowActivityInput = {
  create: WorkFlowCreateWithoutWorkflowActivityInput;
  update: WorkFlowUpdateWithoutWorkflowActivityInput;
};

export type WorkFlowUpsertWithoutWorkflowInstanceInput = {
  create: WorkFlowCreateWithoutWorkflowInstanceInput;
  update: WorkFlowUpdateWithoutWorkflowInstanceInput;
};

export type WorkFlowWhereInput = {
  AND?: InputMaybe<Array<WorkFlowWhereInput>>;
  ChannelEnrollment?: InputMaybe<ChannelEnrollmentListRelationFilter>;
  NOT?: InputMaybe<Array<WorkFlowWhereInput>>;
  OR?: InputMaybe<Array<WorkFlowWhereInput>>;
  WorkflowActivity?: InputMaybe<WorkflowActivityListRelationFilter>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  processCode?: InputMaybe<StringNullableFilter>;
  processName?: InputMaybe<StringNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  version?: InputMaybe<IntNullableFilter>;
};

export type WorkFlowWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  name_version?: InputMaybe<WorkFlowNameVersionCompoundUniqueInput>;
};

export type WorkflowActivity = {
  __typename?: 'WorkflowActivity';
  Activity_ActivityToWorkflowActivity_fromActivityId?: Maybe<Activity>;
  Activity_ActivityToWorkflowActivity_toActivityId?: Maybe<Activity>;
  WorkFlow?: Maybe<WorkFlow>;
  WorkflowActivityInstance?: Maybe<Array<WorkflowActivityInstance>>;
  _count: WorkflowActivityCount;
  attachedItemId?: Maybe<Scalars['String']>;
  condition?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  fromActivityId?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  toActivityId?: Maybe<Scalars['String']>;
  trigger?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
};

export type WorkflowActivityCount = {
  __typename?: 'WorkflowActivityCount';
  WorkflowActivityInstance: Scalars['Int'];
};

export type WorkflowActivityCountAggregate = {
  __typename?: 'WorkflowActivityCountAggregate';
  _all: Scalars['Int'];
  attachedItemId: Scalars['Int'];
  condition: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  fromActivityId: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  toActivityId: Scalars['Int'];
  trigger: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workflowId: Scalars['Int'];
};

export type WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    attachedItemId?: InputMaybe<Scalars['String']>;
    condition?: InputMaybe<Scalars['String']>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isActive?: InputMaybe<Scalars['Boolean']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    toActivityId?: InputMaybe<Scalars['String']>;
    trigger?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
    workflowId?: InputMaybe<Scalars['String']>;
  };

export type WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_FromActivityIdInputEnvelope =
  {
    data: Array<WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    attachedItemId?: InputMaybe<Scalars['String']>;
    condition?: InputMaybe<Scalars['String']>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    fromActivityId?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isActive?: InputMaybe<Scalars['Boolean']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    trigger?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
    workflowId?: InputMaybe<Scalars['String']>;
  };

export type WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_ToActivityIdInputEnvelope =
  {
    data: Array<WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    skipDuplicates?: InputMaybe<Scalars['Boolean']>;
  };

export type WorkflowActivityCreateManyWorkFlowInput = {
  attachedItemId?: InputMaybe<Scalars['String']>;
  condition?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  fromActivityId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  toActivityId?: InputMaybe<Scalars['String']>;
  trigger?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityCreateManyWorkFlowInputEnvelope = {
  data: Array<WorkflowActivityCreateManyWorkFlowInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WorkflowActivityCreateNestedManyWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    connect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<WorkflowActivityCreateOrConnectWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>
    >;
    create?: InputMaybe<
      Array<WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>
    >;
    createMany?: InputMaybe<WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_FromActivityIdInputEnvelope>;
  };

export type WorkflowActivityCreateNestedManyWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    connect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<WorkflowActivityCreateOrConnectWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>
    >;
    create?: InputMaybe<
      Array<WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>
    >;
    createMany?: InputMaybe<WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_ToActivityIdInputEnvelope>;
  };

export type WorkflowActivityCreateNestedManyWithoutWorkFlowInput = {
  connect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkflowActivityCreateOrConnectWithoutWorkFlowInput>
  >;
  create?: InputMaybe<Array<WorkflowActivityCreateWithoutWorkFlowInput>>;
  createMany?: InputMaybe<WorkflowActivityCreateManyWorkFlowInputEnvelope>;
};

export type WorkflowActivityCreateNestedOneWithoutWorkflowActivityInstanceInput =
  {
    connect?: InputMaybe<WorkflowActivityWhereUniqueInput>;
    connectOrCreate?: InputMaybe<WorkflowActivityCreateOrConnectWithoutWorkflowActivityInstanceInput>;
    create?: InputMaybe<WorkflowActivityCreateWithoutWorkflowActivityInstanceInput>;
  };

export type WorkflowActivityCreateOrConnectWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    create: WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput;
    where: WorkflowActivityWhereUniqueInput;
  };

export type WorkflowActivityCreateOrConnectWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    create: WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput;
    where: WorkflowActivityWhereUniqueInput;
  };

export type WorkflowActivityCreateOrConnectWithoutWorkFlowInput = {
  create: WorkflowActivityCreateWithoutWorkFlowInput;
  where: WorkflowActivityWhereUniqueInput;
};

export type WorkflowActivityCreateOrConnectWithoutWorkflowActivityInstanceInput =
  {
    create: WorkflowActivityCreateWithoutWorkflowActivityInstanceInput;
    where: WorkflowActivityWhereUniqueInput;
  };

export type WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    Activity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutWorkflowActivityInput>;
    WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceCreateNestedManyWithoutWorkflowActivityInput>;
    attachedItemId?: InputMaybe<Scalars['String']>;
    condition?: InputMaybe<Scalars['String']>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isActive?: InputMaybe<Scalars['Boolean']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    trigger?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    Activity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutWorkflowActivityInput>;
    WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceCreateNestedManyWithoutWorkflowActivityInput>;
    attachedItemId?: InputMaybe<Scalars['String']>;
    condition?: InputMaybe<Scalars['String']>;
    createdAt?: InputMaybe<Scalars['DateTime']>;
    createdBy?: InputMaybe<Scalars['String']>;
    id?: InputMaybe<Scalars['String']>;
    isActive?: InputMaybe<Scalars['Boolean']>;
    isRemoved?: InputMaybe<Scalars['Boolean']>;
    trigger?: InputMaybe<Scalars['String']>;
    updatedAt?: InputMaybe<Scalars['DateTime']>;
    updatedBy?: InputMaybe<Scalars['String']>;
  };

export type WorkflowActivityCreateWithoutWorkFlowInput = {
  Activity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
  Activity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceCreateNestedManyWithoutWorkflowActivityInput>;
  attachedItemId?: InputMaybe<Scalars['String']>;
  condition?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  trigger?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityCreateWithoutWorkflowActivityInstanceInput = {
  Activity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
  Activity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<ActivityCreateNestedOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutWorkflowActivityInput>;
  attachedItemId?: InputMaybe<Scalars['String']>;
  condition?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  trigger?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityInstance = {
  __typename?: 'WorkflowActivityInstance';
  WorkflowActivity?: Maybe<WorkflowActivity>;
  WorkflowInstance?: Maybe<WorkflowInstance>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowActivityId?: Maybe<Scalars['String']>;
  workflowInstanceId?: Maybe<Scalars['String']>;
};

export type WorkflowActivityInstanceCountAggregate = {
  __typename?: 'WorkflowActivityInstanceCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  data: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  status: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workflowActivityId: Scalars['Int'];
  workflowInstanceId: Scalars['Int'];
};

export type WorkflowActivityInstanceCreateManyWorkflowActivityInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowInstanceId?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityInstanceCreateManyWorkflowActivityInputEnvelope = {
  data: Array<WorkflowActivityInstanceCreateManyWorkflowActivityInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WorkflowActivityInstanceCreateManyWorkflowInstanceInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
  workflowActivityId?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityInstanceCreateManyWorkflowInstanceInputEnvelope = {
  data: Array<WorkflowActivityInstanceCreateManyWorkflowInstanceInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WorkflowActivityInstanceCreateNestedManyWithoutWorkflowActivityInput =
  {
    connect?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<WorkflowActivityInstanceCreateOrConnectWithoutWorkflowActivityInput>
    >;
    create?: InputMaybe<
      Array<WorkflowActivityInstanceCreateWithoutWorkflowActivityInput>
    >;
    createMany?: InputMaybe<WorkflowActivityInstanceCreateManyWorkflowActivityInputEnvelope>;
  };

export type WorkflowActivityInstanceCreateNestedManyWithoutWorkflowInstanceInput =
  {
    connect?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<WorkflowActivityInstanceCreateOrConnectWithoutWorkflowInstanceInput>
    >;
    create?: InputMaybe<
      Array<WorkflowActivityInstanceCreateWithoutWorkflowInstanceInput>
    >;
    createMany?: InputMaybe<WorkflowActivityInstanceCreateManyWorkflowInstanceInputEnvelope>;
  };

export type WorkflowActivityInstanceCreateOrConnectWithoutWorkflowActivityInput =
  {
    create: WorkflowActivityInstanceCreateWithoutWorkflowActivityInput;
    where: WorkflowActivityInstanceWhereUniqueInput;
  };

export type WorkflowActivityInstanceCreateOrConnectWithoutWorkflowInstanceInput =
  {
    create: WorkflowActivityInstanceCreateWithoutWorkflowInstanceInput;
    where: WorkflowActivityInstanceWhereUniqueInput;
  };

export type WorkflowActivityInstanceCreateWithoutWorkflowActivityInput = {
  WorkflowInstance?: InputMaybe<WorkflowInstanceCreateNestedOneWithoutWorkflowActivityInstanceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityInstanceCreateWithoutWorkflowInstanceInput = {
  WorkflowActivity?: InputMaybe<WorkflowActivityCreateNestedOneWithoutWorkflowActivityInstanceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  data?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  status?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityInstanceListRelationFilter = {
  every?: InputMaybe<WorkflowActivityInstanceWhereInput>;
  none?: InputMaybe<WorkflowActivityInstanceWhereInput>;
  some?: InputMaybe<WorkflowActivityInstanceWhereInput>;
};

export type WorkflowActivityInstanceMaxAggregate = {
  __typename?: 'WorkflowActivityInstanceMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowActivityId?: Maybe<Scalars['String']>;
  workflowInstanceId?: Maybe<Scalars['String']>;
};

export type WorkflowActivityInstanceMinAggregate = {
  __typename?: 'WorkflowActivityInstanceMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  data?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  status?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowActivityId?: Maybe<Scalars['String']>;
  workflowInstanceId?: Maybe<Scalars['String']>;
};

export type WorkflowActivityInstanceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WorkflowActivityInstanceScalarWhereInput = {
  AND?: InputMaybe<Array<WorkflowActivityInstanceScalarWhereInput>>;
  NOT?: InputMaybe<Array<WorkflowActivityInstanceScalarWhereInput>>;
  OR?: InputMaybe<Array<WorkflowActivityInstanceScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  data?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowActivityId?: InputMaybe<StringNullableFilter>;
  workflowInstanceId?: InputMaybe<StringNullableFilter>;
};

export type WorkflowActivityInstanceUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  data?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowActivityInstanceUpdateManyWithWhereWithoutWorkflowActivityInput =
  {
    data: WorkflowActivityInstanceUpdateManyMutationInput;
    where: WorkflowActivityInstanceScalarWhereInput;
  };

export type WorkflowActivityInstanceUpdateManyWithWhereWithoutWorkflowInstanceInput =
  {
    data: WorkflowActivityInstanceUpdateManyMutationInput;
    where: WorkflowActivityInstanceScalarWhereInput;
  };

export type WorkflowActivityInstanceUpdateManyWithoutWorkflowActivityInput = {
  connect?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkflowActivityInstanceCreateOrConnectWithoutWorkflowActivityInput>
  >;
  create?: InputMaybe<
    Array<WorkflowActivityInstanceCreateWithoutWorkflowActivityInput>
  >;
  createMany?: InputMaybe<WorkflowActivityInstanceCreateManyWorkflowActivityInputEnvelope>;
  delete?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<WorkflowActivityInstanceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  set?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  update?: InputMaybe<
    Array<WorkflowActivityInstanceUpdateWithWhereUniqueWithoutWorkflowActivityInput>
  >;
  updateMany?: InputMaybe<
    Array<WorkflowActivityInstanceUpdateManyWithWhereWithoutWorkflowActivityInput>
  >;
  upsert?: InputMaybe<
    Array<WorkflowActivityInstanceUpsertWithWhereUniqueWithoutWorkflowActivityInput>
  >;
};

export type WorkflowActivityInstanceUpdateManyWithoutWorkflowInstanceInput = {
  connect?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkflowActivityInstanceCreateOrConnectWithoutWorkflowInstanceInput>
  >;
  create?: InputMaybe<
    Array<WorkflowActivityInstanceCreateWithoutWorkflowInstanceInput>
  >;
  createMany?: InputMaybe<WorkflowActivityInstanceCreateManyWorkflowInstanceInputEnvelope>;
  delete?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<WorkflowActivityInstanceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  set?: InputMaybe<Array<WorkflowActivityInstanceWhereUniqueInput>>;
  update?: InputMaybe<
    Array<WorkflowActivityInstanceUpdateWithWhereUniqueWithoutWorkflowInstanceInput>
  >;
  updateMany?: InputMaybe<
    Array<WorkflowActivityInstanceUpdateManyWithWhereWithoutWorkflowInstanceInput>
  >;
  upsert?: InputMaybe<
    Array<WorkflowActivityInstanceUpsertWithWhereUniqueWithoutWorkflowInstanceInput>
  >;
};

export type WorkflowActivityInstanceUpdateWithWhereUniqueWithoutWorkflowActivityInput =
  {
    data: WorkflowActivityInstanceUpdateWithoutWorkflowActivityInput;
    where: WorkflowActivityInstanceWhereUniqueInput;
  };

export type WorkflowActivityInstanceUpdateWithWhereUniqueWithoutWorkflowInstanceInput =
  {
    data: WorkflowActivityInstanceUpdateWithoutWorkflowInstanceInput;
    where: WorkflowActivityInstanceWhereUniqueInput;
  };

export type WorkflowActivityInstanceUpdateWithoutWorkflowActivityInput = {
  WorkflowInstance?: InputMaybe<WorkflowInstanceUpdateOneWithoutWorkflowActivityInstanceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  data?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowActivityInstanceUpdateWithoutWorkflowInstanceInput = {
  WorkflowActivity?: InputMaybe<WorkflowActivityUpdateOneWithoutWorkflowActivityInstanceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  data?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  status?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowActivityInstanceUpsertWithWhereUniqueWithoutWorkflowActivityInput =
  {
    create: WorkflowActivityInstanceCreateWithoutWorkflowActivityInput;
    update: WorkflowActivityInstanceUpdateWithoutWorkflowActivityInput;
    where: WorkflowActivityInstanceWhereUniqueInput;
  };

export type WorkflowActivityInstanceUpsertWithWhereUniqueWithoutWorkflowInstanceInput =
  {
    create: WorkflowActivityInstanceCreateWithoutWorkflowInstanceInput;
    update: WorkflowActivityInstanceUpdateWithoutWorkflowInstanceInput;
    where: WorkflowActivityInstanceWhereUniqueInput;
  };

export type WorkflowActivityInstanceWhereInput = {
  AND?: InputMaybe<Array<WorkflowActivityInstanceWhereInput>>;
  NOT?: InputMaybe<Array<WorkflowActivityInstanceWhereInput>>;
  OR?: InputMaybe<Array<WorkflowActivityInstanceWhereInput>>;
  WorkflowActivity?: InputMaybe<WorkflowActivityRelationFilter>;
  WorkflowInstance?: InputMaybe<WorkflowInstanceRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  data?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  status?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowActivityId?: InputMaybe<StringNullableFilter>;
  workflowInstanceId?: InputMaybe<StringNullableFilter>;
};

export type WorkflowActivityInstanceWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type WorkflowActivityListRelationFilter = {
  every?: InputMaybe<WorkflowActivityWhereInput>;
  none?: InputMaybe<WorkflowActivityWhereInput>;
  some?: InputMaybe<WorkflowActivityWhereInput>;
};

export type WorkflowActivityMaxAggregate = {
  __typename?: 'WorkflowActivityMaxAggregate';
  attachedItemId?: Maybe<Scalars['String']>;
  condition?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  fromActivityId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  toActivityId?: Maybe<Scalars['String']>;
  trigger?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
};

export type WorkflowActivityMinAggregate = {
  __typename?: 'WorkflowActivityMinAggregate';
  attachedItemId?: Maybe<Scalars['String']>;
  condition?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  fromActivityId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  toActivityId?: Maybe<Scalars['String']>;
  trigger?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
};

export type WorkflowActivityOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WorkflowActivityRelationFilter = {
  is?: InputMaybe<WorkflowActivityWhereInput>;
  isNot?: InputMaybe<WorkflowActivityWhereInput>;
};

export type WorkflowActivityScalarWhereInput = {
  AND?: InputMaybe<Array<WorkflowActivityScalarWhereInput>>;
  NOT?: InputMaybe<Array<WorkflowActivityScalarWhereInput>>;
  OR?: InputMaybe<Array<WorkflowActivityScalarWhereInput>>;
  attachedItemId?: InputMaybe<StringNullableFilter>;
  condition?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  fromActivityId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  toActivityId?: InputMaybe<StringNullableFilter>;
  trigger?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowId?: InputMaybe<StringNullableFilter>;
};

export type WorkflowActivityUpdateManyMutationInput = {
  attachedItemId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  condition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  trigger?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowActivityUpdateManyWithWhereWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    data: WorkflowActivityUpdateManyMutationInput;
    where: WorkflowActivityScalarWhereInput;
  };

export type WorkflowActivityUpdateManyWithWhereWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    data: WorkflowActivityUpdateManyMutationInput;
    where: WorkflowActivityScalarWhereInput;
  };

export type WorkflowActivityUpdateManyWithWhereWithoutWorkFlowInput = {
  data: WorkflowActivityUpdateManyMutationInput;
  where: WorkflowActivityScalarWhereInput;
};

export type WorkflowActivityUpdateManyWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    connect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<WorkflowActivityCreateOrConnectWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>
    >;
    create?: InputMaybe<
      Array<WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>
    >;
    createMany?: InputMaybe<WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_FromActivityIdInputEnvelope>;
    delete?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    deleteMany?: InputMaybe<Array<WorkflowActivityScalarWhereInput>>;
    disconnect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    set?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    update?: InputMaybe<
      Array<WorkflowActivityUpdateWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>
    >;
    updateMany?: InputMaybe<
      Array<WorkflowActivityUpdateManyWithWhereWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>
    >;
    upsert?: InputMaybe<
      Array<WorkflowActivityUpsertWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput>
    >;
  };

export type WorkflowActivityUpdateManyWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    connect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    connectOrCreate?: InputMaybe<
      Array<WorkflowActivityCreateOrConnectWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>
    >;
    create?: InputMaybe<
      Array<WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>
    >;
    createMany?: InputMaybe<WorkflowActivityCreateManyActivity_ActivityToWorkflowActivity_ToActivityIdInputEnvelope>;
    delete?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    deleteMany?: InputMaybe<Array<WorkflowActivityScalarWhereInput>>;
    disconnect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    set?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
    update?: InputMaybe<
      Array<WorkflowActivityUpdateWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>
    >;
    updateMany?: InputMaybe<
      Array<WorkflowActivityUpdateManyWithWhereWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>
    >;
    upsert?: InputMaybe<
      Array<WorkflowActivityUpsertWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput>
    >;
  };

export type WorkflowActivityUpdateManyWithoutWorkFlowInput = {
  connect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkflowActivityCreateOrConnectWithoutWorkFlowInput>
  >;
  create?: InputMaybe<Array<WorkflowActivityCreateWithoutWorkFlowInput>>;
  createMany?: InputMaybe<WorkflowActivityCreateManyWorkFlowInputEnvelope>;
  delete?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<WorkflowActivityScalarWhereInput>>;
  disconnect?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
  set?: InputMaybe<Array<WorkflowActivityWhereUniqueInput>>;
  update?: InputMaybe<
    Array<WorkflowActivityUpdateWithWhereUniqueWithoutWorkFlowInput>
  >;
  updateMany?: InputMaybe<
    Array<WorkflowActivityUpdateManyWithWhereWithoutWorkFlowInput>
  >;
  upsert?: InputMaybe<
    Array<WorkflowActivityUpsertWithWhereUniqueWithoutWorkFlowInput>
  >;
};

export type WorkflowActivityUpdateOneWithoutWorkflowActivityInstanceInput = {
  connect?: InputMaybe<WorkflowActivityWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkflowActivityCreateOrConnectWithoutWorkflowActivityInstanceInput>;
  create?: InputMaybe<WorkflowActivityCreateWithoutWorkflowActivityInstanceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkflowActivityUpdateWithoutWorkflowActivityInstanceInput>;
  upsert?: InputMaybe<WorkflowActivityUpsertWithoutWorkflowActivityInstanceInput>;
};

export type WorkflowActivityUpdateWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    data: WorkflowActivityUpdateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput;
    where: WorkflowActivityWhereUniqueInput;
  };

export type WorkflowActivityUpdateWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    data: WorkflowActivityUpdateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput;
    where: WorkflowActivityWhereUniqueInput;
  };

export type WorkflowActivityUpdateWithWhereUniqueWithoutWorkFlowInput = {
  data: WorkflowActivityUpdateWithoutWorkFlowInput;
  where: WorkflowActivityWhereUniqueInput;
};

export type WorkflowActivityUpdateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    Activity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
    WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutWorkflowActivityInput>;
    WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceUpdateManyWithoutWorkflowActivityInput>;
    attachedItemId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    condition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    trigger?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type WorkflowActivityUpdateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    Activity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
    WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutWorkflowActivityInput>;
    WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceUpdateManyWithoutWorkflowActivityInput>;
    attachedItemId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    condition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    id?: InputMaybe<StringFieldUpdateOperationsInput>;
    isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
    trigger?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
    updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
    updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  };

export type WorkflowActivityUpdateWithoutWorkFlowInput = {
  Activity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
  Activity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceUpdateManyWithoutWorkflowActivityInput>;
  attachedItemId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  condition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  trigger?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowActivityUpdateWithoutWorkflowActivityInstanceInput = {
  Activity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_FromActivityIdInput>;
  Activity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<ActivityUpdateOneWithoutWorkflowActivity_ActivityToWorkflowActivity_ToActivityIdInput>;
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutWorkflowActivityInput>;
  attachedItemId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  condition?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  trigger?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowActivityUpsertWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput =
  {
    create: WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput;
    update: WorkflowActivityUpdateWithoutActivity_ActivityToWorkflowActivity_FromActivityIdInput;
    where: WorkflowActivityWhereUniqueInput;
  };

export type WorkflowActivityUpsertWithWhereUniqueWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput =
  {
    create: WorkflowActivityCreateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput;
    update: WorkflowActivityUpdateWithoutActivity_ActivityToWorkflowActivity_ToActivityIdInput;
    where: WorkflowActivityWhereUniqueInput;
  };

export type WorkflowActivityUpsertWithWhereUniqueWithoutWorkFlowInput = {
  create: WorkflowActivityCreateWithoutWorkFlowInput;
  update: WorkflowActivityUpdateWithoutWorkFlowInput;
  where: WorkflowActivityWhereUniqueInput;
};

export type WorkflowActivityUpsertWithoutWorkflowActivityInstanceInput = {
  create: WorkflowActivityCreateWithoutWorkflowActivityInstanceInput;
  update: WorkflowActivityUpdateWithoutWorkflowActivityInstanceInput;
};

export type WorkflowActivityWhereInput = {
  AND?: InputMaybe<Array<WorkflowActivityWhereInput>>;
  Activity_ActivityToWorkflowActivity_fromActivityId?: InputMaybe<ActivityRelationFilter>;
  Activity_ActivityToWorkflowActivity_toActivityId?: InputMaybe<ActivityRelationFilter>;
  NOT?: InputMaybe<Array<WorkflowActivityWhereInput>>;
  OR?: InputMaybe<Array<WorkflowActivityWhereInput>>;
  WorkFlow?: InputMaybe<WorkFlowRelationFilter>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceListRelationFilter>;
  attachedItemId?: InputMaybe<StringNullableFilter>;
  condition?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  fromActivityId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  toActivityId?: InputMaybe<StringNullableFilter>;
  trigger?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowId?: InputMaybe<StringNullableFilter>;
};

export type WorkflowActivityWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type WorkflowInstance = {
  __typename?: 'WorkflowInstance';
  Customer?: Maybe<Array<Customer>>;
  WorkFlow?: Maybe<WorkFlow>;
  WorkflowActivityInstance?: Maybe<Array<WorkflowActivityInstance>>;
  _count: WorkflowInstanceCount;
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id: Scalars['ID'];
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
};

export type WorkflowInstanceCount = {
  __typename?: 'WorkflowInstanceCount';
  Customer: Scalars['Int'];
  WorkflowActivityInstance: Scalars['Int'];
};

export type WorkflowInstanceCountAggregate = {
  __typename?: 'WorkflowInstanceCountAggregate';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  createdBy: Scalars['Int'];
  id: Scalars['Int'];
  isActive: Scalars['Int'];
  isRemoved: Scalars['Int'];
  updatedAt: Scalars['Int'];
  updatedBy: Scalars['Int'];
  workflowId: Scalars['Int'];
};

export type WorkflowInstanceCreateManyWorkFlowInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowInstanceCreateManyWorkFlowInputEnvelope = {
  data: Array<WorkflowInstanceCreateManyWorkFlowInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WorkflowInstanceCreateNestedManyWithoutWorkFlowInput = {
  connect?: InputMaybe<Array<WorkflowInstanceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkflowInstanceCreateOrConnectWithoutWorkFlowInput>
  >;
  create?: InputMaybe<Array<WorkflowInstanceCreateWithoutWorkFlowInput>>;
  createMany?: InputMaybe<WorkflowInstanceCreateManyWorkFlowInputEnvelope>;
};

export type WorkflowInstanceCreateNestedOneWithoutCustomerInput = {
  connect?: InputMaybe<WorkflowInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkflowInstanceCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<WorkflowInstanceCreateWithoutCustomerInput>;
};

export type WorkflowInstanceCreateNestedOneWithoutWorkflowActivityInstanceInput =
  {
    connect?: InputMaybe<WorkflowInstanceWhereUniqueInput>;
    connectOrCreate?: InputMaybe<WorkflowInstanceCreateOrConnectWithoutWorkflowActivityInstanceInput>;
    create?: InputMaybe<WorkflowInstanceCreateWithoutWorkflowActivityInstanceInput>;
  };

export type WorkflowInstanceCreateOrConnectWithoutCustomerInput = {
  create: WorkflowInstanceCreateWithoutCustomerInput;
  where: WorkflowInstanceWhereUniqueInput;
};

export type WorkflowInstanceCreateOrConnectWithoutWorkFlowInput = {
  create: WorkflowInstanceCreateWithoutWorkFlowInput;
  where: WorkflowInstanceWhereUniqueInput;
};

export type WorkflowInstanceCreateOrConnectWithoutWorkflowActivityInstanceInput =
  {
    create: WorkflowInstanceCreateWithoutWorkflowActivityInstanceInput;
    where: WorkflowInstanceWhereUniqueInput;
  };

export type WorkflowInstanceCreateWithoutCustomerInput = {
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutWorkflowInstanceInput>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceCreateNestedManyWithoutWorkflowInstanceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowInstanceCreateWithoutWorkFlowInput = {
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutWorkflowInstanceInput>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceCreateNestedManyWithoutWorkflowInstanceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowInstanceCreateWithoutWorkflowActivityInstanceInput = {
  Customer?: InputMaybe<CustomerCreateNestedManyWithoutWorkflowInstanceInput>;
  WorkFlow?: InputMaybe<WorkFlowCreateNestedOneWithoutWorkflowInstanceInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  createdBy?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  isRemoved?: InputMaybe<Scalars['Boolean']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  updatedBy?: InputMaybe<Scalars['String']>;
};

export type WorkflowInstanceListRelationFilter = {
  every?: InputMaybe<WorkflowInstanceWhereInput>;
  none?: InputMaybe<WorkflowInstanceWhereInput>;
  some?: InputMaybe<WorkflowInstanceWhereInput>;
};

export type WorkflowInstanceMaxAggregate = {
  __typename?: 'WorkflowInstanceMaxAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
};

export type WorkflowInstanceMinAggregate = {
  __typename?: 'WorkflowInstanceMinAggregate';
  createdAt?: Maybe<Scalars['DateTime']>;
  createdBy?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  isRemoved?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  updatedBy?: Maybe<Scalars['String']>;
  workflowId?: Maybe<Scalars['String']>;
};

export type WorkflowInstanceOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WorkflowInstanceOrderByWithRelationInput = {
  Customer?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  WorkFlow?: InputMaybe<WorkFlowOrderByWithRelationInput>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  createdBy?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  isRemoved?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  updatedBy?: InputMaybe<SortOrder>;
  workflowId?: InputMaybe<SortOrder>;
};

export type WorkflowInstanceRelationFilter = {
  is?: InputMaybe<WorkflowInstanceWhereInput>;
  isNot?: InputMaybe<WorkflowInstanceWhereInput>;
};

export type WorkflowInstanceScalarWhereInput = {
  AND?: InputMaybe<Array<WorkflowInstanceScalarWhereInput>>;
  NOT?: InputMaybe<Array<WorkflowInstanceScalarWhereInput>>;
  OR?: InputMaybe<Array<WorkflowInstanceScalarWhereInput>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowId?: InputMaybe<StringNullableFilter>;
};

export type WorkflowInstanceUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowInstanceUpdateManyWithWhereWithoutWorkFlowInput = {
  data: WorkflowInstanceUpdateManyMutationInput;
  where: WorkflowInstanceScalarWhereInput;
};

export type WorkflowInstanceUpdateManyWithoutWorkFlowInput = {
  connect?: InputMaybe<Array<WorkflowInstanceWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<
    Array<WorkflowInstanceCreateOrConnectWithoutWorkFlowInput>
  >;
  create?: InputMaybe<Array<WorkflowInstanceCreateWithoutWorkFlowInput>>;
  createMany?: InputMaybe<WorkflowInstanceCreateManyWorkFlowInputEnvelope>;
  delete?: InputMaybe<Array<WorkflowInstanceWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<WorkflowInstanceScalarWhereInput>>;
  disconnect?: InputMaybe<Array<WorkflowInstanceWhereUniqueInput>>;
  set?: InputMaybe<Array<WorkflowInstanceWhereUniqueInput>>;
  update?: InputMaybe<
    Array<WorkflowInstanceUpdateWithWhereUniqueWithoutWorkFlowInput>
  >;
  updateMany?: InputMaybe<
    Array<WorkflowInstanceUpdateManyWithWhereWithoutWorkFlowInput>
  >;
  upsert?: InputMaybe<
    Array<WorkflowInstanceUpsertWithWhereUniqueWithoutWorkFlowInput>
  >;
};

export type WorkflowInstanceUpdateOneWithoutCustomerInput = {
  connect?: InputMaybe<WorkflowInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkflowInstanceCreateOrConnectWithoutCustomerInput>;
  create?: InputMaybe<WorkflowInstanceCreateWithoutCustomerInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkflowInstanceUpdateWithoutCustomerInput>;
  upsert?: InputMaybe<WorkflowInstanceUpsertWithoutCustomerInput>;
};

export type WorkflowInstanceUpdateOneWithoutWorkflowActivityInstanceInput = {
  connect?: InputMaybe<WorkflowInstanceWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WorkflowInstanceCreateOrConnectWithoutWorkflowActivityInstanceInput>;
  create?: InputMaybe<WorkflowInstanceCreateWithoutWorkflowActivityInstanceInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WorkflowInstanceUpdateWithoutWorkflowActivityInstanceInput>;
  upsert?: InputMaybe<WorkflowInstanceUpsertWithoutWorkflowActivityInstanceInput>;
};

export type WorkflowInstanceUpdateWithWhereUniqueWithoutWorkFlowInput = {
  data: WorkflowInstanceUpdateWithoutWorkFlowInput;
  where: WorkflowInstanceWhereUniqueInput;
};

export type WorkflowInstanceUpdateWithoutCustomerInput = {
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutWorkflowInstanceInput>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceUpdateManyWithoutWorkflowInstanceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowInstanceUpdateWithoutWorkFlowInput = {
  Customer?: InputMaybe<CustomerUpdateManyWithoutWorkflowInstanceInput>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceUpdateManyWithoutWorkflowInstanceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowInstanceUpdateWithoutWorkflowActivityInstanceInput = {
  Customer?: InputMaybe<CustomerUpdateManyWithoutWorkflowInstanceInput>;
  WorkFlow?: InputMaybe<WorkFlowUpdateOneWithoutWorkflowInstanceInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isRemoved?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  updatedBy?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WorkflowInstanceUpsertWithWhereUniqueWithoutWorkFlowInput = {
  create: WorkflowInstanceCreateWithoutWorkFlowInput;
  update: WorkflowInstanceUpdateWithoutWorkFlowInput;
  where: WorkflowInstanceWhereUniqueInput;
};

export type WorkflowInstanceUpsertWithoutCustomerInput = {
  create: WorkflowInstanceCreateWithoutCustomerInput;
  update: WorkflowInstanceUpdateWithoutCustomerInput;
};

export type WorkflowInstanceUpsertWithoutWorkflowActivityInstanceInput = {
  create: WorkflowInstanceCreateWithoutWorkflowActivityInstanceInput;
  update: WorkflowInstanceUpdateWithoutWorkflowActivityInstanceInput;
};

export type WorkflowInstanceWhereInput = {
  AND?: InputMaybe<Array<WorkflowInstanceWhereInput>>;
  Customer?: InputMaybe<CustomerListRelationFilter>;
  NOT?: InputMaybe<Array<WorkflowInstanceWhereInput>>;
  OR?: InputMaybe<Array<WorkflowInstanceWhereInput>>;
  WorkFlow?: InputMaybe<WorkFlowRelationFilter>;
  WorkflowActivityInstance?: InputMaybe<WorkflowActivityInstanceListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  createdBy?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  isRemoved?: InputMaybe<BoolNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  updatedBy?: InputMaybe<StringNullableFilter>;
  workflowId?: InputMaybe<StringNullableFilter>;
};

export type WorkflowInstanceWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type SendOtpMutationMutationVariables = Exact<{
  data: SendOtpInput;
}>;

export type SendOtpMutationMutation = {
  __typename?: 'Mutation';
  sendOTP: {
    __typename?: 'SendOTP';
    isSend: boolean;
    message?: string | null;
    secondsLeft?: number | null;
    otp?: string | null;
  };
};

export type VerifyOtpMutationVariables = Exact<{
  data: VerifyOtpInput;
}>;

export type VerifyOtpMutation = {
  __typename?: 'Mutation';
  verifyOTP: {
    __typename?: 'UserToken';
    token?: string | null;
    refreshToken?: string | null;
    message: string;
    isVerified?: boolean | null;
    loginAttemptsLeft?: number | null;
    isFirstLogin?: boolean | null;
    user?: {
      __typename?: 'User';
      fullName?: string | null;
      id: string;
      email?: string | null;
      phone: string;
      isLocked?: boolean | null;
      failedLoginAttempt?: number | null;
      Customers?: Array<{
        __typename?: 'CustomerUser';
        customerId: string;
      }> | null;
    } | null;
  };
};

export type UpdateUserMutationVariables = Exact<{
  data: UserUpdateInputDto;
}>;

export type UpdateUserMutation = {
  __typename?: 'Mutation';
  updateUser: {
    __typename?: 'User';
    id: string;
    fullName?: string | null;
    shortName?: string | null;
    email?: string | null;
  };
};

export type UserLoginMutationVariables = Exact<{
  data: AuthLoginInput;
}>;

export type UserLoginMutation = {
  __typename?: 'Mutation';
  passwordLogin: {
    __typename?: 'UserToken';
    token?: string | null;
    message: string;
    isVerified?: boolean | null;
    user?: {
      __typename?: 'User';
      id: string;
      fullName?: string | null;
      Customers?: Array<{
        __typename?: 'CustomerUser';
        customerId: string;
      }> | null;
    } | null;
  };
};

export type SendUserPasswordResetLinkMutationVariables = Exact<{
  data: SendUserPasswordResetLinkInput;
}>;

export type SendUserPasswordResetLinkMutation = {
  __typename?: 'Mutation';
  sendUserPasswordResetLink: {
    __typename?: 'SendUserPasswordResetLink';
    message?: string | null;
    isSuccess?: string | null;
  };
};

export type RedeemUserPasswordResetTokenMutationVariables = Exact<{
  data: RedeemUserPasswordResetTokenInput;
}>;

export type RedeemUserPasswordResetTokenMutation = {
  __typename?: 'Mutation';
  redeemUserPasswordResetToken: {
    __typename?: 'RedeemUserPasswordResetLink';
    message: string;
    isVerified: boolean;
  };
};

export type AddAddressMutationVariables = Exact<{
  data: AddressTypeUpdateInput;
}>;

export type AddAddressMutation = {
  __typename?: 'Mutation';
  createAddress: { __typename?: 'Address'; id: string };
};

export type GetAddressQueryVariables = Exact<{
  where?: InputMaybe<CustomerAddressWhereInput>;
}>;

export type GetAddressQuery = {
  __typename?: 'Query';
  addresses: Array<{
    __typename?: 'AddressDTO';
    id: string;
    shopName?: string | null;
    contactName?: string | null;
    phone?: string | null;
    addressLine1?: string | null;
    addressLine2?: string | null;
    landmark?: string | null;
    pincode?: string | null;
    gstin?: string | null;
    defaultBilling?: boolean | null;
    defaultShipping?: boolean | null;
    isActive?: boolean | null;
  }>;
};

export type UpdateAddressMutationVariables = Exact<{
  data: UpdateAddressInputDto;
  where?: InputMaybe<AddressWhereUniqueInput>;
}>;

export type UpdateAddressMutation = {
  __typename?: 'Mutation';
  updateAddress: {
    __typename?: 'Address';
    id: string;
    shopName?: string | null;
    contactName?: string | null;
    phone?: string | null;
    addressLine1?: string | null;
    addressLine2?: string | null;
    landmark?: string | null;
    pincode?: string | null;
    gstin?: string | null;
    defaultBilling?: boolean | null;
    defaultShipping?: boolean | null;
  };
};

export type DeleteAddressMutationVariables = Exact<{
  where?: InputMaybe<AddressWhereUniqueInput>;
}>;

export type DeleteAddressMutation = {
  __typename?: 'Mutation';
  deleteAddress: {
    __typename?: 'Address';
    id: string;
    addressTypeId?: string | null;
  };
};

export type EnrollUserMutationVariables = Exact<{
  data: EnrollUserInput;
}>;

export type EnrollUserMutation = {
  __typename?: 'Mutation';
  enrollUser: {
    __typename?: 'Customer';
    id: string;
    name?: string | null;
    channelId: string;
    Users?: Array<{
      __typename?: 'CustomerUser';
      User?: { __typename?: 'User'; fullName?: string | null } | null;
    }> | null;
  };
};

export type ViewCustomerDetailsQueryVariables = Exact<{
  where: CustomerWhereDetailInput;
}>;

export type ViewCustomerDetailsQuery = {
  __typename?: 'Query';
  customer: {
    __typename?: 'Customer';
    name?: string | null;
    CustomerEnrollmentValue?: Array<{
      __typename?: 'CustomerEnrollmentValue';
      attributeId?: string | null;
      attributeValueText?: string | null;
      Attribute?: { __typename?: 'Attribute'; name: string } | null;
    }> | null;
    EnrollmentType?: {
      __typename?: 'EnrollmentType';
      id: string;
      name?: string | null;
    } | null;
  };
};

export type CategoriesQueryVariables = Exact<{ [key: string]: never }>;

export type CategoriesQuery = {
  __typename?: 'Query';
  categories: Array<{
    __typename?: 'CategoryHeaderDTO';
    id: string;
    name?: string | null;
    description?: string | null;
    logoAssetId?: string | null;
    Asset?: {
      __typename?: 'Asset';
      id: string;
      AssetStore?: {
        __typename?: 'AssetStore';
        storage?: string | null;
      } | null;
    } | null;
    CategoryLinkedCategoryHeader?: Array<{
      __typename?: 'CategoryLinkedCategoryHeader';
      Category?: {
        __typename?: 'Category';
        id: string;
        name?: string | null;
      } | null;
    }> | null;
  }>;
};

export type CategoryUpdateMutationVariables = Exact<{
  data: UserUpdateInputDto;
}>;

export type CategoryUpdateMutation = {
  __typename?: 'Mutation';
  updateUser: {
    __typename?: 'User';
    email?: string | null;
    UserPreference?: Array<{
      __typename?: 'UserPreference';
      userId?: string | null;
      channelId?: string | null;
      categoryHeaderId?: string | null;
      CategoryHeader?: {
        __typename?: 'CategoryHeader';
        name?: string | null;
      } | null;
    }> | null;
  };
};

export type UserPreferencesQueryVariables = Exact<{ [key: string]: never }>;

export type UserPreferencesQuery = {
  __typename?: 'Query';
  userPreferences: Array<{
    __typename?: 'UserPreference';
    id: string;
    userId?: string | null;
    channelId?: string | null;
    categoryHeaderId?: string | null;
    CategoryHeader?: {
      __typename?: 'CategoryHeader';
      id: string;
      name?: string | null;
    } | null;
  }>;
};

export type UpdateCustomerDetailsMutationVariables = Exact<{
  data: UpdateCustomerDto;
}>;

export type UpdateCustomerDetailsMutation = {
  __typename?: 'Mutation';
  updateCustomer: { __typename?: 'Customer'; id: string; name?: string | null };
};

export type BrandsQueryVariables = Exact<{
  where?: InputMaybe<BrandWhereInputDto>;
  take?: InputMaybe<Scalars['Int']>;
  skip?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<
    Array<BrandOrderByWithRelationInputDto> | BrandOrderByWithRelationInputDto
  >;
  brandsCountWhere2: BrandWhereInputDto;
}>;

export type BrandsQuery = {
  __typename?: 'Query';
  brandsCount: number;
  brands: Array<{
    __typename?: 'BrandListDTO';
    id: string;
    name?: string | null;
    decription?: string | null;
    rating?: number | null;
    logoURL?: string | null;
    BrandRelation?: {
      __typename?: 'BrandRelation';
      id: string;
      name?: string | null;
    } | null;
    WorkFlowContextInstance?: {
      __typename?: 'WorkFlowContextInstance';
      WorkFlowStatus?: { __typename?: 'WorkFlowStatus'; name: string } | null;
    } | null;
  }>;
};

export type AddBrandMutationVariables = Exact<{
  data: BrandCreateInput;
}>;

export type AddBrandMutation = {
  __typename?: 'Mutation';
  createBrand: {
    __typename?: 'Brand';
    id: string;
    name?: string | null;
    decription?: string | null;
    customerId?: string | null;
  };
};

export type ProductDetailsAttributeListQueryVariables = Exact<{
  where: CategoryWhereUniqueInput;
}>;

export type ProductDetailsAttributeListQuery = {
  __typename?: 'Query';
  ProductDetailsAttributeList: {
    __typename?: 'Category';
    Attributes?: Array<{
      __typename?: 'CategoryAttribute';
      Attribute?: {
        __typename?: 'Attribute';
        id: string;
        name: string;
        AttributeValue?: Array<{
          __typename?: 'AttributeValue';
          id: string;
          name?: string | null;
          AttributeValue_TL?: Array<{
            __typename?: 'AttributeValue_TL';
            name: string;
          }> | null;
        }> | null;
        Attribute_TL?: Array<{
          __typename?: 'Attribute_TL';
          name?: string | null;
        }> | null;
        AttributeControlTypeValue?: Array<{
          __typename?: 'AttributeControlTypeValue';
          controlValue?: string | null;
          AttributeControlType?: {
            __typename?: 'AttributeControlType';
            controlField?: string | null;
          } | null;
        }> | null;
      } | null;
    }> | null;
  };
};

export type BrandDetailsQueryVariables = Exact<{
  where: BrandWhereUniqueInput;
}>;

export type BrandDetailsQuery = {
  __typename?: 'Query';
  brand: {
    __typename?: 'Brand';
    id: string;
    name?: string | null;
    decription?: string | null;
    customerId?: string | null;
    logoAssetId?: string | null;
    BrandRelation?: {
      __typename?: 'BrandRelation';
      id: string;
      name?: string | null;
    } | null;
    WorkFlowContextInstance?: {
      __typename?: 'WorkFlowContextInstance';
      WorkFlowStatus?: { __typename?: 'WorkFlowStatus'; name: string } | null;
    } | null;
    Products?: Array<{
      __typename?: 'Product';
      id: string;
      name?: string | null;
      description?: string | null;
      categoryId: string;
      brandId?: string | null;
      unitPrice?: number | null;
      discount?: number | null;
      isActive?: boolean | null;
      WorkFlowContextInstance?: {
        __typename?: 'WorkFlowContextInstance';
        WorkFlowStatus?: { __typename?: 'WorkFlowStatus'; name: string } | null;
      } | null;
    }> | null;
    BrandAsset?: Array<{
      __typename?: 'BrandAsset';
      Asset?: {
        __typename?: 'Asset';
        AssetStore?: {
          __typename?: 'AssetStore';
          storage?: string | null;
        } | null;
      } | null;
    }> | null;
  };
};

export type ProductListWithBrandIdQueryVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  take?: InputMaybe<Scalars['Int']>;
  skip?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<
    Array<ProductOrderByWithRelationInput> | ProductOrderByWithRelationInput
  >;
}>;

export type ProductListWithBrandIdQuery = {
  __typename?: 'Query';
  productsCount: number;
  products: Array<{
    __typename?: 'ProductDTO';
    id: string;
    title?: string | null;
    name?: string | null;
    isActive?: boolean | null;
    brandId?: string | null;
    unitPrice?: number | null;
    description?: string | null;
    moq?: number | null;
    imageUrl?: string | null;
    discount?: number | null;
  }>;
};

export type BrandsSelectQueryVariables = Exact<{
  where?: InputMaybe<BrandWhereInputDto>;
}>;

export type BrandsSelectQuery = {
  __typename?: 'Query';
  brands: Array<{
    __typename?: 'BrandListDTO';
    id: string;
    name?: string | null;
    logoURL?: string | null;
  }>;
};

export type CreateKycMutationVariables = Exact<{
  data: KycCreateInput;
}>;

export type CreateKycMutation = {
  __typename?: 'Mutation';
  createKYC: Array<{
    __typename?: 'CustomerKYC';
    id: string;
    customerId?: string | null;
    KYCHeader?: { __typename?: 'KYCHeader'; name: string } | null;
    CustomerKYCAsset?: Array<{
      __typename?: 'CustomerKYCAsset';
      Asset?: {
        __typename?: 'Asset';
        AssetStore?: {
          __typename?: 'AssetStore';
          storage?: string | null;
        } | null;
      } | null;
    }> | null;
  }>;
};

export type BrandIdGeoLocationsQueryVariables = Exact<{ [key: string]: never }>;

export type BrandIdGeoLocationsQuery = {
  __typename?: 'Query';
  geoLocations: Array<{
    __typename?: 'LocationModel';
    id: string;
    name?: string | null;
    SubGeoLocation?: Array<{
      __typename?: 'GeoLocation';
      id: string;
      name?: string | null;
    }> | null;
  }>;
};

export type ProductListQueryVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  take?: InputMaybe<Scalars['Int']>;
  skip?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<
    Array<ProductOrderByWithRelationInput> | ProductOrderByWithRelationInput
  >;
}>;

export type ProductListQuery = {
  __typename?: 'Query';
  productsCount: number;
  products: Array<{
    __typename?: 'ProductDTO';
    id: string;
    title?: string | null;
    name?: string | null;
    imageUrl?: string | null;
    description?: string | null;
    unitPrice?: number | null;
    isActive?: boolean | null;
    moq?: number | null;
  }>;
};

export type UpdateProductMutationVariables = Exact<{
  where: ProductWhereUniqueInput;
  data: ProductUpdateInput;
}>;

export type UpdateProductMutation = {
  __typename?: 'Mutation';
  updateProduct: {
    __typename?: 'Product';
    id: string;
    categoryId: string;
    isActive?: boolean | null;
    name?: string | null;
  };
};

export type LocationsQueryVariables = Exact<{ [key: string]: never }>;

export type LocationsQuery = {
  __typename?: 'Query';
  geoLocations: Array<{
    __typename?: 'LocationModel';
    id: string;
    name?: string | null;
    SubGeoLocation?: Array<{
      __typename?: 'GeoLocation';
      id: string;
      name?: string | null;
      parentId?: string | null;
    }> | null;
  }>;
};

export const SendOtpMutationDocument = `
    mutation SendOtpMutation($data: SendOTPInput!) {
  sendOTP(data: $data) {
    isSend
    message
    secondsLeft
    otp
  }
}
    `;
export const useSendOtpMutationMutation = <
  TError = unknown,
  TContext = unknown
>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    SendOtpMutationMutation,
    TError,
    SendOtpMutationMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    SendOtpMutationMutation,
    TError,
    SendOtpMutationMutationVariables,
    TContext
  >(
    ['SendOtpMutation'],
    (variables?: SendOtpMutationMutationVariables) =>
      fetcher<SendOtpMutationMutation, SendOtpMutationMutationVariables>(
        client,
        SendOtpMutationDocument,
        variables,
        headers
      )(),
    options
  );
export const VerifyOtpDocument = `
    mutation VerifyOTP($data: VerifyOTPInput!) {
  verifyOTP(data: $data) {
    token
    refreshToken
    message
    isVerified
    loginAttemptsLeft
    isFirstLogin
    user {
      fullName
      id
      email
      phone
      isLocked
      failedLoginAttempt
      Customers {
        customerId
      }
    }
  }
}
    `;
export const useVerifyOtpMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    VerifyOtpMutation,
    TError,
    VerifyOtpMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<VerifyOtpMutation, TError, VerifyOtpMutationVariables, TContext>(
    ['VerifyOTP'],
    (variables?: VerifyOtpMutationVariables) =>
      fetcher<VerifyOtpMutation, VerifyOtpMutationVariables>(
        client,
        VerifyOtpDocument,
        variables,
        headers
      )(),
    options
  );
export const UpdateUserDocument = `
    mutation UpdateUser($data: UserUpdateInputDto!) {
  updateUser(data: $data) {
    id
    fullName
    shortName
    email
  }
}
    `;
export const useUpdateUserMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    UpdateUserMutation,
    TError,
    UpdateUserMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    UpdateUserMutation,
    TError,
    UpdateUserMutationVariables,
    TContext
  >(
    ['UpdateUser'],
    (variables?: UpdateUserMutationVariables) =>
      fetcher<UpdateUserMutation, UpdateUserMutationVariables>(
        client,
        UpdateUserDocument,
        variables,
        headers
      )(),
    options
  );
export const UserLoginDocument = `
    mutation UserLogin($data: AuthLoginInput!) {
  passwordLogin(data: $data) {
    token
    user {
      id
      fullName
      Customers {
        customerId
      }
    }
    message
    isVerified
  }
}
    `;
export const useUserLoginMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    UserLoginMutation,
    TError,
    UserLoginMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<UserLoginMutation, TError, UserLoginMutationVariables, TContext>(
    ['UserLogin'],
    (variables?: UserLoginMutationVariables) =>
      fetcher<UserLoginMutation, UserLoginMutationVariables>(
        client,
        UserLoginDocument,
        variables,
        headers
      )(),
    options
  );
export const SendUserPasswordResetLinkDocument = `
    mutation SendUserPasswordResetLink($data: SendUserPasswordResetLinkInput!) {
  sendUserPasswordResetLink(data: $data) {
    message
    isSuccess
  }
}
    `;
export const useSendUserPasswordResetLinkMutation = <
  TError = unknown,
  TContext = unknown
>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    SendUserPasswordResetLinkMutation,
    TError,
    SendUserPasswordResetLinkMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    SendUserPasswordResetLinkMutation,
    TError,
    SendUserPasswordResetLinkMutationVariables,
    TContext
  >(
    ['SendUserPasswordResetLink'],
    (variables?: SendUserPasswordResetLinkMutationVariables) =>
      fetcher<
        SendUserPasswordResetLinkMutation,
        SendUserPasswordResetLinkMutationVariables
      >(client, SendUserPasswordResetLinkDocument, variables, headers)(),
    options
  );
export const RedeemUserPasswordResetTokenDocument = `
    mutation RedeemUserPasswordResetToken($data: RedeemUserPasswordResetTokenInput!) {
  redeemUserPasswordResetToken(data: $data) {
    message
    isVerified
  }
}
    `;
export const useRedeemUserPasswordResetTokenMutation = <
  TError = unknown,
  TContext = unknown
>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    RedeemUserPasswordResetTokenMutation,
    TError,
    RedeemUserPasswordResetTokenMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    RedeemUserPasswordResetTokenMutation,
    TError,
    RedeemUserPasswordResetTokenMutationVariables,
    TContext
  >(
    ['RedeemUserPasswordResetToken'],
    (variables?: RedeemUserPasswordResetTokenMutationVariables) =>
      fetcher<
        RedeemUserPasswordResetTokenMutation,
        RedeemUserPasswordResetTokenMutationVariables
      >(client, RedeemUserPasswordResetTokenDocument, variables, headers)(),
    options
  );
export const AddAddressDocument = `
    mutation AddAddress($data: AddressTypeUpdateInput!) {
  createAddress(data: $data) {
    id
  }
}
    `;
export const useAddAddressMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    AddAddressMutation,
    TError,
    AddAddressMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    AddAddressMutation,
    TError,
    AddAddressMutationVariables,
    TContext
  >(
    ['AddAddress'],
    (variables?: AddAddressMutationVariables) =>
      fetcher<AddAddressMutation, AddAddressMutationVariables>(
        client,
        AddAddressDocument,
        variables,
        headers
      )(),
    options
  );
export const GetAddressDocument = `
    query GetAddress($where: CustomerAddressWhereInput) {
  addresses(where: $where) {
    id
    shopName
    contactName
    phone
    addressLine1
    addressLine2
    landmark
    pincode
    gstin
    defaultBilling
    defaultShipping
    isActive
  }
}
    `;
export const useGetAddressQuery = <TData = GetAddressQuery, TError = unknown>(
  client: GraphQLClient,
  variables?: GetAddressQueryVariables,
  options?: UseQueryOptions<GetAddressQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<GetAddressQuery, TError, TData>(
    variables === undefined ? ['GetAddress'] : ['GetAddress', variables],
    fetcher<GetAddressQuery, GetAddressQueryVariables>(
      client,
      GetAddressDocument,
      variables,
      headers
    ),
    options
  );
export const UpdateAddressDocument = `
    mutation UpdateAddress($data: UpdateAddressInputDTO!, $where: AddressWhereUniqueInput) {
  updateAddress(data: $data, where: $where) {
    id
    shopName
    contactName
    phone
    addressLine1
    addressLine2
    landmark
    pincode
    gstin
    defaultBilling
    defaultShipping
  }
}
    `;
export const useUpdateAddressMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    UpdateAddressMutation,
    TError,
    UpdateAddressMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    UpdateAddressMutation,
    TError,
    UpdateAddressMutationVariables,
    TContext
  >(
    ['UpdateAddress'],
    (variables?: UpdateAddressMutationVariables) =>
      fetcher<UpdateAddressMutation, UpdateAddressMutationVariables>(
        client,
        UpdateAddressDocument,
        variables,
        headers
      )(),
    options
  );
export const DeleteAddressDocument = `
    mutation DeleteAddress($where: AddressWhereUniqueInput) {
  deleteAddress(where: $where) {
    id
    addressTypeId
  }
}
    `;
export const useDeleteAddressMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    DeleteAddressMutation,
    TError,
    DeleteAddressMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    DeleteAddressMutation,
    TError,
    DeleteAddressMutationVariables,
    TContext
  >(
    ['DeleteAddress'],
    (variables?: DeleteAddressMutationVariables) =>
      fetcher<DeleteAddressMutation, DeleteAddressMutationVariables>(
        client,
        DeleteAddressDocument,
        variables,
        headers
      )(),
    options
  );
export const EnrollUserDocument = `
    mutation EnrollUser($data: EnrollUserInput!) {
  enrollUser(data: $data) {
    id
    name
    channelId
    Users {
      User {
        fullName
      }
    }
  }
}
    `;
export const useEnrollUserMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    EnrollUserMutation,
    TError,
    EnrollUserMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    EnrollUserMutation,
    TError,
    EnrollUserMutationVariables,
    TContext
  >(
    ['EnrollUser'],
    (variables?: EnrollUserMutationVariables) =>
      fetcher<EnrollUserMutation, EnrollUserMutationVariables>(
        client,
        EnrollUserDocument,
        variables,
        headers
      )(),
    options
  );
export const ViewCustomerDetailsDocument = `
    query ViewCustomerDetails($where: CustomerWhereDetailInput!) {
  customer(where: $where) {
    name
    CustomerEnrollmentValue {
      attributeId
      attributeValueText
      Attribute {
        name
      }
    }
    EnrollmentType {
      id
      name
    }
  }
}
    `;
export const useViewCustomerDetailsQuery = <
  TData = ViewCustomerDetailsQuery,
  TError = unknown
>(
  client: GraphQLClient,
  variables: ViewCustomerDetailsQueryVariables,
  options?: UseQueryOptions<ViewCustomerDetailsQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<ViewCustomerDetailsQuery, TError, TData>(
    ['ViewCustomerDetails', variables],
    fetcher<ViewCustomerDetailsQuery, ViewCustomerDetailsQueryVariables>(
      client,
      ViewCustomerDetailsDocument,
      variables,
      headers
    ),
    options
  );
export const CategoriesDocument = `
    query Categories {
  categories {
    id
    name
    description
    logoAssetId
    Asset {
      id
      AssetStore {
        storage
      }
    }
    CategoryLinkedCategoryHeader {
      Category {
        id
        name
      }
    }
  }
}
    `;
export const useCategoriesQuery = <TData = CategoriesQuery, TError = unknown>(
  client: GraphQLClient,
  variables?: CategoriesQueryVariables,
  options?: UseQueryOptions<CategoriesQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<CategoriesQuery, TError, TData>(
    variables === undefined ? ['Categories'] : ['Categories', variables],
    fetcher<CategoriesQuery, CategoriesQueryVariables>(
      client,
      CategoriesDocument,
      variables,
      headers
    ),
    options
  );
export const CategoryUpdateDocument = `
    mutation CategoryUpdate($data: UserUpdateInputDto!) {
  updateUser(data: $data) {
    email
    UserPreference {
      userId
      channelId
      categoryHeaderId
      CategoryHeader {
        name
      }
    }
  }
}
    `;
export const useCategoryUpdateMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    CategoryUpdateMutation,
    TError,
    CategoryUpdateMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    CategoryUpdateMutation,
    TError,
    CategoryUpdateMutationVariables,
    TContext
  >(
    ['CategoryUpdate'],
    (variables?: CategoryUpdateMutationVariables) =>
      fetcher<CategoryUpdateMutation, CategoryUpdateMutationVariables>(
        client,
        CategoryUpdateDocument,
        variables,
        headers
      )(),
    options
  );
export const UserPreferencesDocument = `
    query UserPreferences {
  userPreferences {
    id
    userId
    channelId
    categoryHeaderId
    CategoryHeader {
      id
      name
    }
  }
}
    `;
export const useUserPreferencesQuery = <
  TData = UserPreferencesQuery,
  TError = unknown
>(
  client: GraphQLClient,
  variables?: UserPreferencesQueryVariables,
  options?: UseQueryOptions<UserPreferencesQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<UserPreferencesQuery, TError, TData>(
    variables === undefined
      ? ['UserPreferences']
      : ['UserPreferences', variables],
    fetcher<UserPreferencesQuery, UserPreferencesQueryVariables>(
      client,
      UserPreferencesDocument,
      variables,
      headers
    ),
    options
  );
export const UpdateCustomerDetailsDocument = `
    mutation UpdateCustomerDetails($data: UpdateCustomerDto!) {
  updateCustomer(data: $data) {
    id
    name
  }
}
    `;
export const useUpdateCustomerDetailsMutation = <
  TError = unknown,
  TContext = unknown
>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    UpdateCustomerDetailsMutation,
    TError,
    UpdateCustomerDetailsMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    UpdateCustomerDetailsMutation,
    TError,
    UpdateCustomerDetailsMutationVariables,
    TContext
  >(
    ['UpdateCustomerDetails'],
    (variables?: UpdateCustomerDetailsMutationVariables) =>
      fetcher<
        UpdateCustomerDetailsMutation,
        UpdateCustomerDetailsMutationVariables
      >(client, UpdateCustomerDetailsDocument, variables, headers)(),
    options
  );
export const BrandsDocument = `
    query Brands($where: BrandWhereInputDTO, $take: Int, $skip: Int, $orderBy: [BrandOrderByWithRelationInputDTO!], $brandsCountWhere2: BrandWhereInputDTO!) {
  brands(where: $where, take: $take, skip: $skip, orderBy: $orderBy) {
    id
    name
    decription
    BrandRelation {
      id
      name
    }
    WorkFlowContextInstance {
      WorkFlowStatus {
        name
      }
    }
    rating
    logoURL
  }
  brandsCount(where: $brandsCountWhere2)
}
    `;
export const useBrandsQuery = <TData = BrandsQuery, TError = unknown>(
  client: GraphQLClient,
  variables: BrandsQueryVariables,
  options?: UseQueryOptions<BrandsQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<BrandsQuery, TError, TData>(
    ['Brands', variables],
    fetcher<BrandsQuery, BrandsQueryVariables>(
      client,
      BrandsDocument,
      variables,
      headers
    ),
    options
  );
export const AddBrandDocument = `
    mutation AddBrand($data: BrandCreateInput!) {
  createBrand(data: $data) {
    id
    name
    decription
    customerId
  }
}
    `;
export const useAddBrandMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    AddBrandMutation,
    TError,
    AddBrandMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<AddBrandMutation, TError, AddBrandMutationVariables, TContext>(
    ['AddBrand'],
    (variables?: AddBrandMutationVariables) =>
      fetcher<AddBrandMutation, AddBrandMutationVariables>(
        client,
        AddBrandDocument,
        variables,
        headers
      )(),
    options
  );
export const ProductDetailsAttributeListDocument = `
    query ProductDetailsAttributeList($where: CategoryWhereUniqueInput!) {
  ProductDetailsAttributeList(where: $where) {
    Attributes {
      Attribute {
        id
        name
        AttributeValue {
          id
          name
          AttributeValue_TL {
            name
          }
        }
        Attribute_TL {
          name
        }
        AttributeControlTypeValue {
          controlValue
          AttributeControlType {
            controlField
          }
        }
      }
    }
  }
}
    `;
export const useProductDetailsAttributeListQuery = <
  TData = ProductDetailsAttributeListQuery,
  TError = unknown
>(
  client: GraphQLClient,
  variables: ProductDetailsAttributeListQueryVariables,
  options?: UseQueryOptions<ProductDetailsAttributeListQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<ProductDetailsAttributeListQuery, TError, TData>(
    ['ProductDetailsAttributeList', variables],
    fetcher<
      ProductDetailsAttributeListQuery,
      ProductDetailsAttributeListQueryVariables
    >(client, ProductDetailsAttributeListDocument, variables, headers),
    options
  );
export const BrandDetailsDocument = `
    query BrandDetails($where: BrandWhereUniqueInput!) {
  brand(where: $where) {
    id
    name
    decription
    customerId
    BrandRelation {
      id
      name
    }
    WorkFlowContextInstance {
      WorkFlowStatus {
        name
      }
    }
    Products {
      id
      name
      description
      categoryId
      brandId
      unitPrice
      discount
      isActive
      WorkFlowContextInstance {
        WorkFlowStatus {
          name
        }
      }
    }
    logoAssetId
    BrandAsset {
      Asset {
        AssetStore {
          storage
        }
      }
    }
  }
}
    `;
export const useBrandDetailsQuery = <
  TData = BrandDetailsQuery,
  TError = unknown
>(
  client: GraphQLClient,
  variables: BrandDetailsQueryVariables,
  options?: UseQueryOptions<BrandDetailsQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<BrandDetailsQuery, TError, TData>(
    ['BrandDetails', variables],
    fetcher<BrandDetailsQuery, BrandDetailsQueryVariables>(
      client,
      BrandDetailsDocument,
      variables,
      headers
    ),
    options
  );
export const ProductListWithBrandIdDocument = `
    query ProductListWithBrandId($where: ProductWhereInput, $take: Int, $skip: Int, $orderBy: [ProductOrderByWithRelationInput!]) {
  products(where: $where, take: $take, skip: $skip, orderBy: $orderBy) {
    id
    title
    name
    isActive
    brandId
    unitPrice
    description
    moq
    imageUrl
    discount
  }
  productsCount
}
    `;
export const useProductListWithBrandIdQuery = <
  TData = ProductListWithBrandIdQuery,
  TError = unknown
>(
  client: GraphQLClient,
  variables?: ProductListWithBrandIdQueryVariables,
  options?: UseQueryOptions<ProductListWithBrandIdQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<ProductListWithBrandIdQuery, TError, TData>(
    variables === undefined
      ? ['ProductListWithBrandId']
      : ['ProductListWithBrandId', variables],
    fetcher<ProductListWithBrandIdQuery, ProductListWithBrandIdQueryVariables>(
      client,
      ProductListWithBrandIdDocument,
      variables,
      headers
    ),
    options
  );
export const BrandsSelectDocument = `
    query BrandsSelect($where: BrandWhereInputDTO) {
  brands(where: $where) {
    id
    name
    logoURL
  }
}
    `;
export const useBrandsSelectQuery = <
  TData = BrandsSelectQuery,
  TError = unknown
>(
  client: GraphQLClient,
  variables?: BrandsSelectQueryVariables,
  options?: UseQueryOptions<BrandsSelectQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<BrandsSelectQuery, TError, TData>(
    variables === undefined ? ['BrandsSelect'] : ['BrandsSelect', variables],
    fetcher<BrandsSelectQuery, BrandsSelectQueryVariables>(
      client,
      BrandsSelectDocument,
      variables,
      headers
    ),
    options
  );
export const CreateKycDocument = `
    mutation CreateKYC($data: KYCCreateInput!) {
  createKYC(data: $data) {
    id
    customerId
    KYCHeader {
      name
    }
    CustomerKYCAsset {
      Asset {
        AssetStore {
          storage
        }
      }
    }
  }
}
    `;
export const useCreateKycMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    CreateKycMutation,
    TError,
    CreateKycMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<CreateKycMutation, TError, CreateKycMutationVariables, TContext>(
    ['CreateKYC'],
    (variables?: CreateKycMutationVariables) =>
      fetcher<CreateKycMutation, CreateKycMutationVariables>(
        client,
        CreateKycDocument,
        variables,
        headers
      )(),
    options
  );
export const BrandIdGeoLocationsDocument = `
    query BrandIdGeoLocations {
  geoLocations {
    id
    name
    SubGeoLocation {
      id
      name
    }
  }
}
    `;
export const useBrandIdGeoLocationsQuery = <
  TData = BrandIdGeoLocationsQuery,
  TError = unknown
>(
  client: GraphQLClient,
  variables?: BrandIdGeoLocationsQueryVariables,
  options?: UseQueryOptions<BrandIdGeoLocationsQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<BrandIdGeoLocationsQuery, TError, TData>(
    variables === undefined
      ? ['BrandIdGeoLocations']
      : ['BrandIdGeoLocations', variables],
    fetcher<BrandIdGeoLocationsQuery, BrandIdGeoLocationsQueryVariables>(
      client,
      BrandIdGeoLocationsDocument,
      variables,
      headers
    ),
    options
  );
export const ProductListDocument = `
    query ProductList($where: ProductWhereInput, $take: Int, $skip: Int, $orderBy: [ProductOrderByWithRelationInput!]) {
  products(where: $where, take: $take, skip: $skip, orderBy: $orderBy) {
    id
    title
    name
    imageUrl
    description
    unitPrice
    isActive
    moq
  }
  productsCount
}
    `;
export const useProductListQuery = <TData = ProductListQuery, TError = unknown>(
  client: GraphQLClient,
  variables?: ProductListQueryVariables,
  options?: UseQueryOptions<ProductListQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<ProductListQuery, TError, TData>(
    variables === undefined ? ['ProductList'] : ['ProductList', variables],
    fetcher<ProductListQuery, ProductListQueryVariables>(
      client,
      ProductListDocument,
      variables,
      headers
    ),
    options
  );
export const UpdateProductDocument = `
    mutation UpdateProduct($where: ProductWhereUniqueInput!, $data: ProductUpdateInput!) {
  updateProduct(where: $where, data: $data) {
    id
    categoryId
    isActive
    name
  }
}
    `;
export const useUpdateProductMutation = <TError = unknown, TContext = unknown>(
  client: GraphQLClient,
  options?: UseMutationOptions<
    UpdateProductMutation,
    TError,
    UpdateProductMutationVariables,
    TContext
  >,
  headers?: RequestInit['headers']
) =>
  useMutation<
    UpdateProductMutation,
    TError,
    UpdateProductMutationVariables,
    TContext
  >(
    ['UpdateProduct'],
    (variables?: UpdateProductMutationVariables) =>
      fetcher<UpdateProductMutation, UpdateProductMutationVariables>(
        client,
        UpdateProductDocument,
        variables,
        headers
      )(),
    options
  );
export const LocationsDocument = `
    query Locations {
  geoLocations {
    id
    name
    SubGeoLocation {
      id
      name
      parentId
    }
  }
}
    `;
export const useLocationsQuery = <TData = LocationsQuery, TError = unknown>(
  client: GraphQLClient,
  variables?: LocationsQueryVariables,
  options?: UseQueryOptions<LocationsQuery, TError, TData>,
  headers?: RequestInit['headers']
) =>
  useQuery<LocationsQuery, TError, TData>(
    variables === undefined ? ['Locations'] : ['Locations', variables],
    fetcher<LocationsQuery, LocationsQueryVariables>(
      client,
      LocationsDocument,
      variables,
      headers
    ),
    options
  );
